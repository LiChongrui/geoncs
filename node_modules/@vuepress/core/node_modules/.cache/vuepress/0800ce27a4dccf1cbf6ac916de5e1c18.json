{"remainingRequest":"C:\\Users\\admin\\Desktop\\geoncs-web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\admin\\Desktop\\geoncs-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\admin\\Desktop\\geoncs-web\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\admin\\Desktop\\geoncs-web\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!C:\\Users\\admin\\Desktop\\geoncs-web\\docs\\02.geography\\CoordinateSystem\\1.gcs.md?vue&type=template&id=2a47b532&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\geoncs-web\\docs\\02.geography\\CoordinateSystem\\1.gcs.md","mtime":1640600334838},{"path":"C:\\Users\\admin\\Desktop\\geoncs-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638035824740},{"path":"C:\\Users\\admin\\Desktop\\geoncs-web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1638035826047},{"path":"C:\\Users\\admin\\Desktop\\geoncs-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638035824740},{"path":"C:\\Users\\admin\\Desktop\\geoncs-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1638035825424},{"path":"C:\\Users\\admin\\Desktop\\geoncs-web\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1638035823713}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "ContentSlotsDistributor",
    { attrs: { "slot-key": _vm.$parent.slotKey } },
    [
      _c("h2", { attrs: { id: "简介" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#简介" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" 简介"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "地理坐标系（Geographic Coordinate System），是使用三维球面来定义地球表面位置，以实现通过经纬度对地球表面点位引用的坐标系。一个地理坐标系包括角度测量单位、本初子午线和参考椭球体三部分。在球面系统中，水平线是等纬度线或纬线。垂直线是等经度线或经线。"
        ),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "参数" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#参数" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" 参数"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "下表列出了 927 个地理坐标系的 EPSG代码，坐标系名称，椭球体，长半轴(m)，1/扁率，角单位等参数。由于表格宽度限制，每个坐标系的 WKT、Proj4 格式详见"
        ),
        _c("a", { attrs: { href: "" } }, [_vm._v("坐标系表示")]),
        _vm._v("。在 gma 中可以直接引用 EPSG 来表示坐标系。"),
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", { staticStyle: { "text-align": "left" } }, [
            _c("th", [_vm._v("EPSG代码")]),
            _vm._v(" "),
            _c("th", [_vm._v("坐标系名称")]),
            _vm._v(" "),
            _c("th", [_vm._v("椭球体")]),
            _vm._v(" "),
            _c("th", [_vm._v("长半轴(m)")]),
            _vm._v(" "),
            _c("th", [_vm._v("1/扁率")]),
            _vm._v(" "),
            _c("th", [_vm._v("角单位")]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", [_vm._v("3819")]),
            _vm._v(" "),
            _c("td", [_vm._v("HD1909")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("3821")]),
            _vm._v(" "),
            _c("td", [_vm._v("TWD67")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1967 Modified")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378160")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.25")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("3823")]),
            _vm._v(" "),
            _c("td", [_vm._v("TWD97")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("3824")]),
            _vm._v(" "),
            _c("td", [_vm._v("TWD97")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("3888")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGRS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("3889")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGRS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("3906")]),
            _vm._v(" "),
            _c("td", [_vm._v("MGI 1901")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4001")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the Airy 1830 ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Airy 1830")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377563.396")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.3249646")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4002")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Airy Modified 1849 ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Airy Modified 1849")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377340.189")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.3249646")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4003")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Australian National Spheroid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Australian National Spheroid")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378160")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.25")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4004")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the Bessel 1841 ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4005")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the Bessel Modified ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel Modified")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377492.018")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4006")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the Bessel Namibia ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel Namibia (GLM)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377483.86528042")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4007")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the Clarke 1858 ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1858")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378293.64520876")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.260676369261")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4008")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the Clarke 1866 ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4009")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Clarke 1866 Michigan ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866 Michigan")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378450.0475489")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978697164677")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4010")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Clarke 1880 (Benoit) ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (Benoit)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378300.789")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466315538981")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4011")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Clarke 1880 (IGN) ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4012")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Clarke 1880 (RGS) ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4013")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Clarke 1880 (Arc) ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (Arc)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.4663077")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4014")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Clarke 1880 (SGA 1922) ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (SGA 1922)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.46598")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4015")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Everest 1830 (1937 Adjustment) ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1937 Adjustment)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377276.345")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4016")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Everest 1830 (1967 Definition) ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1967 Definition)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377298.556")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4017")]),
            _vm._v(" "),
            _c("td", [_vm._v("MOLDREF99")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4018")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Everest 1830 Modified ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 Modified")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377304.063")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4019")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the GRS 1980 ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4020")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the Helmert 1906 ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Helmert 1906")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378200")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4021")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Indonesian National Spheroid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Indonesian National Spheroid")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378160")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.247")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4022")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the International 1924 ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4023")]),
            _vm._v(" "),
            _c("td", [_vm._v("MOLDREF99")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4024")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the Krassowsky 1940 ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4025")]),
            _vm._v(" "),
            _c("td", [_vm._v("Unknown datum based upon the NWL 9D ellipsoid")]),
            _vm._v(" "),
            _c("td", [_vm._v("NWL 9D")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378145")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.25")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4027")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the Plessis 1817 ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Plessis 1817")]),
            _vm._v(" "),
            _c("td", [_vm._v("6376523")]),
            _vm._v(" "),
            _c("td", [_vm._v("308.64")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4028")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the Struve 1860 ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Struve 1860")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.73")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4029")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the War Office ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("War Office")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378300")]),
            _vm._v(" "),
            _c("td", [_vm._v("296")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4030")]),
            _vm._v(" "),
            _c("td", [_vm._v("Unknown datum based upon the WGS 84 ellipsoid")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4031")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the GEM 10C ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("GEM 10C")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4032")]),
            _vm._v(" "),
            _c("td", [_vm._v("Unknown datum based upon the OSU86F ellipsoid")]),
            _vm._v(" "),
            _c("td", [_vm._v("OSU86F")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378136.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4033")]),
            _vm._v(" "),
            _c("td", [_vm._v("Unknown datum based upon the OSU91A ellipsoid")]),
            _vm._v(" "),
            _c("td", [_vm._v("OSU91A")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378136.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4034")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the Clarke 1880 ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.14480801")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466307655636")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4035")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unspecified datum based upon the GRS 1980 Authalic Sphere"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980 Authalic Sphere")]),
            _vm._v(" "),
            _c("td", [_vm._v("6371007")]),
            _vm._v(" "),
            _c("td", [_vm._v("0")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4036")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unknown datum based upon the GRS 1967 ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1967")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378160")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.247167427")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4040")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGRDC 2005")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4041")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Average Terrestrial System 1977 ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Average Terrestrial System 1977")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378135")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4042")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Everest (1830 Definition) ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest (1830 Definition)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377299.36559538")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.801725543355")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4043")]),
            _vm._v(" "),
            _c("td", [_vm._v("Unknown datum based upon the WGS 72 ellipsoid")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 72")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378135")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.26")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4044")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Everest 1830 (1962 Definition) ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1962 Definition)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377301.243")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017255")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4045")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unknown datum based upon the Everest 1830 (1975 Definition) ellipsoid"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1975 Definition)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377299.151")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017255")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4046")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGRDC 2005")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4047")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unspecified datum based upon the GRS 1980 Authalic Sphere"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980 Authalic Sphere")]),
            _vm._v(" "),
            _c("td", [_vm._v("6371007")]),
            _vm._v(" "),
            _c("td", [_vm._v("0")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4052")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unspecified datum based upon the Clarke 1866 Authalic Sphere"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866 Authalic Sphere")]),
            _vm._v(" "),
            _c("td", [_vm._v("6370997")]),
            _vm._v(" "),
            _c("td", [_vm._v("0")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4053")]),
            _vm._v(" "),
            _c("td", [
              _vm._v(
                "Unspecified datum based upon the International 1924 Authalic Sphere"
              ),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924 Authalic Sphere")]),
            _vm._v(" "),
            _c("td", [_vm._v("6371228")]),
            _vm._v(" "),
            _c("td", [_vm._v("0")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4054")]),
            _vm._v(" "),
            _c("td", [
              _vm._v("Unspecified datum based upon the Hughes 1980 ellipsoid"),
            ]),
            _vm._v(" "),
            _c("td", [_vm._v("Hughes 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378273")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.279411123064")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4055")]),
            _vm._v(" "),
            _c("td", [_vm._v("Popular Visualisation CRS")]),
            _vm._v(" "),
            _c("td", [_vm._v("Popular Visualisation Sphere")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("0")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4074")]),
            _vm._v(" "),
            _c("td", [_vm._v("SREF98")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4075")]),
            _vm._v(" "),
            _c("td", [_vm._v("SREF98")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4080")]),
            _vm._v(" "),
            _c("td", [_vm._v("REGCAN95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4081")]),
            _vm._v(" "),
            _c("td", [_vm._v("REGCAN95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4120")]),
            _vm._v(" "),
            _c("td", [_vm._v("Greek")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4121")]),
            _vm._v(" "),
            _c("td", [_vm._v("GGRS87")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4122")]),
            _vm._v(" "),
            _c("td", [_vm._v("ATS77")]),
            _vm._v(" "),
            _c("td", [_vm._v("Average Terrestrial System 1977")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378135")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4123")]),
            _vm._v(" "),
            _c("td", [_vm._v("KKJ")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4124")]),
            _vm._v(" "),
            _c("td", [_vm._v("RT90")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4125")]),
            _vm._v(" "),
            _c("td", [_vm._v("Segara")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4126")]),
            _vm._v(" "),
            _c("td", [_vm._v("LKS94")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4127")]),
            _vm._v(" "),
            _c("td", [_vm._v("Tete")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4128")]),
            _vm._v(" "),
            _c("td", [_vm._v("Madzansua")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4129")]),
            _vm._v(" "),
            _c("td", [_vm._v("Observatario")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4130")]),
            _vm._v(" "),
            _c("td", [_vm._v("Moznet")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4131")]),
            _vm._v(" "),
            _c("td", [_vm._v("Indian 1960")]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1937 Adjustment)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377276.345")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4132")]),
            _vm._v(" "),
            _c("td", [_vm._v("FD58")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4133")]),
            _vm._v(" "),
            _c("td", [_vm._v("EST92")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4134")]),
            _vm._v(" "),
            _c("td", [_vm._v("PSD93")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4135")]),
            _vm._v(" "),
            _c("td", [_vm._v("Old Hawaiian")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4136")]),
            _vm._v(" "),
            _c("td", [_vm._v("St. Lawrence Island")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4137")]),
            _vm._v(" "),
            _c("td", [_vm._v("St. Paul Island")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4138")]),
            _vm._v(" "),
            _c("td", [_vm._v("St. George Island")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4139")]),
            _vm._v(" "),
            _c("td", [_vm._v("Puerto Rico")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4140")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4141")]),
            _vm._v(" "),
            _c("td", [_vm._v("Israel 1993")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4142")]),
            _vm._v(" "),
            _c("td", [_vm._v("Locodjo 1965")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4143")]),
            _vm._v(" "),
            _c("td", [_vm._v("Abidjan 1987")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4144")]),
            _vm._v(" "),
            _c("td", [_vm._v("Kalianpur 1937")]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1937 Adjustment)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377276.345")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4145")]),
            _vm._v(" "),
            _c("td", [_vm._v("Kalianpur 1962")]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1962 Definition)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377301.243")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017255")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4146")]),
            _vm._v(" "),
            _c("td", [_vm._v("Kalianpur 1975")]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1975 Definition)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377299.151")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017255")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4147")]),
            _vm._v(" "),
            _c("td", [_vm._v("Hanoi 1972")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4148")]),
            _vm._v(" "),
            _c("td", [_vm._v("Hartebeesthoek94")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4149")]),
            _vm._v(" "),
            _c("td", [_vm._v("CH1903")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4150")]),
            _vm._v(" "),
            _c("td", [_vm._v("CH1903+")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4151")]),
            _vm._v(" "),
            _c("td", [_vm._v("CHTRF95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4152")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(HARN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4153")]),
            _vm._v(" "),
            _c("td", [_vm._v("Rassadiran")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4154")]),
            _vm._v(" "),
            _c("td", [_vm._v("ED50(ED77)")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4155")]),
            _vm._v(" "),
            _c("td", [_vm._v("Dabola 1981")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4156")]),
            _vm._v(" "),
            _c("td", [_vm._v("S-JTSK")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4157")]),
            _vm._v(" "),
            _c("td", [_vm._v("Mount Dillon")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1858")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378293.64520876")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.260676369261")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4158")]),
            _vm._v(" "),
            _c("td", [_vm._v("Naparima 1955")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4159")]),
            _vm._v(" "),
            _c("td", [_vm._v("ELD79")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4160")]),
            _vm._v(" "),
            _c("td", [_vm._v("Chos Malal 1914")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4161")]),
            _vm._v(" "),
            _c("td", [_vm._v("Pampa del Castillo")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4162")]),
            _vm._v(" "),
            _c("td", [_vm._v("Korean 1985")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4163")]),
            _vm._v(" "),
            _c("td", [_vm._v("Yemen NGN96")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4164")]),
            _vm._v(" "),
            _c("td", [_vm._v("South Yemen")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4165")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bissau")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4166")]),
            _vm._v(" "),
            _c("td", [_vm._v("Korean 1995")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4167")]),
            _vm._v(" "),
            _c("td", [_vm._v("NZGD2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4168")]),
            _vm._v(" "),
            _c("td", [_vm._v("Accra")]),
            _vm._v(" "),
            _c("td", [_vm._v("War Office")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378300")]),
            _vm._v(" "),
            _c("td", [_vm._v("296")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4169")]),
            _vm._v(" "),
            _c("td", [_vm._v("American Samoa 1962")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4170")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS 1995")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4171")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGF93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4172")]),
            _vm._v(" "),
            _c("td", [_vm._v("POSGAR")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4173")]),
            _vm._v(" "),
            _c("td", [_vm._v("IRENET95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4174")]),
            _vm._v(" "),
            _c("td", [_vm._v("Sierra Leone 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("War Office")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378300")]),
            _vm._v(" "),
            _c("td", [_vm._v("296")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4175")]),
            _vm._v(" "),
            _c("td", [_vm._v("Sierra Leone 1968")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4176")]),
            _vm._v(" "),
            _c("td", [_vm._v("Australian Antarctic")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4178")]),
            _vm._v(" "),
            _c("td", [_vm._v("Pulkovo 1942(83)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4179")]),
            _vm._v(" "),
            _c("td", [_vm._v("Pulkovo 1942(58)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4180")]),
            _vm._v(" "),
            _c("td", [_vm._v("EST97")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4181")]),
            _vm._v(" "),
            _c("td", [_vm._v("Luxembourg 1930")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4182")]),
            _vm._v(" "),
            _c("td", [_vm._v("Azores Occidental 1939")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4183")]),
            _vm._v(" "),
            _c("td", [_vm._v("Azores Central 1948")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4184")]),
            _vm._v(" "),
            _c("td", [_vm._v("Azores Oriental 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4185")]),
            _vm._v(" "),
            _c("td", [_vm._v("Madeira 1936")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4188")]),
            _vm._v(" "),
            _c("td", [_vm._v("OSNI 1952")]),
            _vm._v(" "),
            _c("td", [_vm._v("Airy 1830")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377563.396")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.3249646")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4189")]),
            _vm._v(" "),
            _c("td", [_vm._v("REGVEN")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4190")]),
            _vm._v(" "),
            _c("td", [_vm._v("POSGAR 98")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4191")]),
            _vm._v(" "),
            _c("td", [_vm._v("Albanian 1987")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4192")]),
            _vm._v(" "),
            _c("td", [_vm._v("Douala 1948")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4193")]),
            _vm._v(" "),
            _c("td", [_vm._v("Manoca 1962")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4194")]),
            _vm._v(" "),
            _c("td", [_vm._v("Qornoq 1927")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4195")]),
            _vm._v(" "),
            _c("td", [_vm._v("Scoresbysund 1952")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4196")]),
            _vm._v(" "),
            _c("td", [_vm._v("Ammassalik 1958")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4197")]),
            _vm._v(" "),
            _c("td", [_vm._v("Garoua")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4198")]),
            _vm._v(" "),
            _c("td", [_vm._v("Kousseri")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4199")]),
            _vm._v(" "),
            _c("td", [_vm._v("Egypt 1930")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4200")]),
            _vm._v(" "),
            _c("td", [_vm._v("Pulkovo 1995")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4201")]),
            _vm._v(" "),
            _c("td", [_vm._v("Adindan")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4202")]),
            _vm._v(" "),
            _c("td", [_vm._v("AGD66")]),
            _vm._v(" "),
            _c("td", [_vm._v("Australian National Spheroid")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378160")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.25")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4203")]),
            _vm._v(" "),
            _c("td", [_vm._v("AGD84")]),
            _vm._v(" "),
            _c("td", [_vm._v("Australian National Spheroid")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378160")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.25")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4204")]),
            _vm._v(" "),
            _c("td", [_vm._v("Ain el Abd")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4205")]),
            _vm._v(" "),
            _c("td", [_vm._v("Afgooye")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4206")]),
            _vm._v(" "),
            _c("td", [_vm._v("Agadez")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4207")]),
            _vm._v(" "),
            _c("td", [_vm._v("Lisbon")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4208")]),
            _vm._v(" "),
            _c("td", [_vm._v("Aratu")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4209")]),
            _vm._v(" "),
            _c("td", [_vm._v("Arc 1950")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (Arc)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.4663077")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4210")]),
            _vm._v(" "),
            _c("td", [_vm._v("Arc 1960")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4211")]),
            _vm._v(" "),
            _c("td", [_vm._v("Batavia")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4212")]),
            _vm._v(" "),
            _c("td", [_vm._v("Barbados 1938")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4213")]),
            _vm._v(" "),
            _c("td", [_vm._v("Beduaram")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4214")]),
            _vm._v(" "),
            _c("td", [_vm._v("Beijing 1954")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4215")]),
            _vm._v(" "),
            _c("td", [_vm._v("BD50")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4216")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bermuda 1957")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4218")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bogota 1975")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4219")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bukit Rimpah")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4220")]),
            _vm._v(" "),
            _c("td", [_vm._v("Camacupa 1948")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4221")]),
            _vm._v(" "),
            _c("td", [_vm._v("Campo Inchauspe")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4222")]),
            _vm._v(" "),
            _c("td", [_vm._v("Cape")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (Arc)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.4663077")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4223")]),
            _vm._v(" "),
            _c("td", [_vm._v("Carthage")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4224")]),
            _vm._v(" "),
            _c("td", [_vm._v("Chua")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4225")]),
            _vm._v(" "),
            _c("td", [_vm._v("Corrego Alegre 1970-72")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4226")]),
            _vm._v(" "),
            _c("td", [_vm._v("Cote d'Ivoire")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4227")]),
            _vm._v(" "),
            _c("td", [_vm._v("Deir ez Zor")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4228")]),
            _vm._v(" "),
            _c("td", [_vm._v("Douala 1948")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4229")]),
            _vm._v(" "),
            _c("td", [_vm._v("Egypt 1907")]),
            _vm._v(" "),
            _c("td", [_vm._v("Helmert 1906")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378200")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4230")]),
            _vm._v(" "),
            _c("td", [_vm._v("ED50")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4231")]),
            _vm._v(" "),
            _c("td", [_vm._v("ED87")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4232")]),
            _vm._v(" "),
            _c("td", [_vm._v("Fahud")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4233")]),
            _vm._v(" "),
            _c("td", [_vm._v("Gandajika 1970")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4234")]),
            _vm._v(" "),
            _c("td", [_vm._v("Garoua")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4235")]),
            _vm._v(" "),
            _c("td", [_vm._v("CSG67")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4236")]),
            _vm._v(" "),
            _c("td", [_vm._v("Hu Tzu Shan 1950")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4237")]),
            _vm._v(" "),
            _c("td", [_vm._v("HD72")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1967")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378160")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.247167427")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4238")]),
            _vm._v(" "),
            _c("td", [_vm._v("ID74")]),
            _vm._v(" "),
            _c("td", [_vm._v("Indonesian National Spheroid")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378160")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.247")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4239")]),
            _vm._v(" "),
            _c("td", [_vm._v("Indian 1954")]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1937 Adjustment)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377276.345")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4240")]),
            _vm._v(" "),
            _c("td", [_vm._v("Indian 1975")]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1937 Adjustment)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377276.345")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4241")]),
            _vm._v(" "),
            _c("td", [_vm._v("Jamaica 1875")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.14480801")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466307655636")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4242")]),
            _vm._v(" "),
            _c("td", [_vm._v("JAD69")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4243")]),
            _vm._v(" "),
            _c("td", [_vm._v("Kalianpur 1880")]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest (1830 Definition)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377299.36559538")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.801725543355")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4244")]),
            _vm._v(" "),
            _c("td", [_vm._v("Kandawala")]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1937 Adjustment)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377276.345")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4245")]),
            _vm._v(" "),
            _c("td", [_vm._v("Kertau 1968")]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 Modified")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377304.063")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4246")]),
            _vm._v(" "),
            _c("td", [_vm._v("KOC")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4247")]),
            _vm._v(" "),
            _c("td", [_vm._v("La Canoa")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4248")]),
            _vm._v(" "),
            _c("td", [_vm._v("PSAD56")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4249")]),
            _vm._v(" "),
            _c("td", [_vm._v("Lake")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4250")]),
            _vm._v(" "),
            _c("td", [_vm._v("Leigon")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4251")]),
            _vm._v(" "),
            _c("td", [_vm._v("Liberia 1964")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4252")]),
            _vm._v(" "),
            _c("td", [_vm._v("Lome")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4253")]),
            _vm._v(" "),
            _c("td", [_vm._v("Luzon 1911")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4254")]),
            _vm._v(" "),
            _c("td", [_vm._v("Hito XVIII 1963")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4255")]),
            _vm._v(" "),
            _c("td", [_vm._v("Herat North")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4256")]),
            _vm._v(" "),
            _c("td", [_vm._v("Mahe 1971")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4257")]),
            _vm._v(" "),
            _c("td", [_vm._v("Makassar")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4258")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4259")]),
            _vm._v(" "),
            _c("td", [_vm._v("Malongo 1987")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4260")]),
            _vm._v(" "),
            _c("td", [_vm._v("Manoca 1962")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4261")]),
            _vm._v(" "),
            _c("td", [_vm._v("Merchich")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4262")]),
            _vm._v(" "),
            _c("td", [_vm._v("Massawa")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4263")]),
            _vm._v(" "),
            _c("td", [_vm._v("Minna")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4264")]),
            _vm._v(" "),
            _c("td", [_vm._v("Mhast")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4265")]),
            _vm._v(" "),
            _c("td", [_vm._v("Monte Mario")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4266")]),
            _vm._v(" "),
            _c("td", [_vm._v("M'poraloko")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4267")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD27")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4268")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD27")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4269")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4270")]),
            _vm._v(" "),
            _c("td", [_vm._v("Nahrwan 1967")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4271")]),
            _vm._v(" "),
            _c("td", [_vm._v("Naparima 1972")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4272")]),
            _vm._v(" "),
            _c("td", [_vm._v("NZGD49")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4273")]),
            _vm._v(" "),
            _c("td", [_vm._v("NGO 1948")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel Modified")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377492.018")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4274")]),
            _vm._v(" "),
            _c("td", [_vm._v("Datum 73")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4275")]),
            _vm._v(" "),
            _c("td", [_vm._v("NTF")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4276")]),
            _vm._v(" "),
            _c("td", [_vm._v("NSWC 9Z-2")]),
            _vm._v(" "),
            _c("td", [_vm._v("NWL 9D")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378145")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.25")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4277")]),
            _vm._v(" "),
            _c("td", [_vm._v("OSGB36")]),
            _vm._v(" "),
            _c("td", [_vm._v("Airy 1830")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377563.396")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.3249646")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4278")]),
            _vm._v(" "),
            _c("td", [_vm._v("OSGB70")]),
            _vm._v(" "),
            _c("td", [_vm._v("Airy 1830")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377563.396")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.3249646")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4279")]),
            _vm._v(" "),
            _c("td", [_vm._v("OS(SN)80")]),
            _vm._v(" "),
            _c("td", [_vm._v("Airy 1830")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377563.396")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.3249646")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4280")]),
            _vm._v(" "),
            _c("td", [_vm._v("Batavia")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4281")]),
            _vm._v(" "),
            _c("td", [_vm._v("Palestine 1923")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (Benoit)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378300.789")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466315538981")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4282")]),
            _vm._v(" "),
            _c("td", [_vm._v("Pointe Noire")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4283")]),
            _vm._v(" "),
            _c("td", [_vm._v("GDA94")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4284")]),
            _vm._v(" "),
            _c("td", [_vm._v("Pulkovo 1942")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4285")]),
            _vm._v(" "),
            _c("td", [_vm._v("Qatar 1974")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4286")]),
            _vm._v(" "),
            _c("td", [_vm._v("Qatar 1948")]),
            _vm._v(" "),
            _c("td", [_vm._v("Helmert 1906")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378200")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4287")]),
            _vm._v(" "),
            _c("td", [_vm._v("Qornoq 1927")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4288")]),
            _vm._v(" "),
            _c("td", [_vm._v("Loma Quintana")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4289")]),
            _vm._v(" "),
            _c("td", [_vm._v("Amersfoort")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4291")]),
            _vm._v(" "),
            _c("td", [_vm._v("SAD69")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1967 Modified")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378160")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.25")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4292")]),
            _vm._v(" "),
            _c("td", [_vm._v("Sapper Hill 1943")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4293")]),
            _vm._v(" "),
            _c("td", [_vm._v("Schwarzeck")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel Namibia (GLM)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377483.86528042")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4294")]),
            _vm._v(" "),
            _c("td", [_vm._v("Segara")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4295")]),
            _vm._v(" "),
            _c("td", [_vm._v("Serindung")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4296")]),
            _vm._v(" "),
            _c("td", [_vm._v("Adindan")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4297")]),
            _vm._v(" "),
            _c("td", [_vm._v("Tananarive")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4298")]),
            _vm._v(" "),
            _c("td", [_vm._v("Timbalai 1948")]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1967 Definition)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377298.556")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4299")]),
            _vm._v(" "),
            _c("td", [_vm._v("TM65")]),
            _vm._v(" "),
            _c("td", [_vm._v("Airy Modified 1849")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377340.189")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.3249646")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4300")]),
            _vm._v(" "),
            _c("td", [_vm._v("TM75")]),
            _vm._v(" "),
            _c("td", [_vm._v("Airy Modified 1849")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377340.189")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.3249646")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4301")]),
            _vm._v(" "),
            _c("td", [_vm._v("Tokyo")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4302")]),
            _vm._v(" "),
            _c("td", [_vm._v("Trinidad 1903")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1858")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378293.64520876")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.260676369261")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4303")]),
            _vm._v(" "),
            _c("td", [_vm._v("TC(1948)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Helmert 1906")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378200")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4304")]),
            _vm._v(" "),
            _c("td", [_vm._v("Voirol 1875")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4306")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bern 1938")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4307")]),
            _vm._v(" "),
            _c("td", [_vm._v("Nord Sahara 1959")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4308")]),
            _vm._v(" "),
            _c("td", [_vm._v("RT38")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4309")]),
            _vm._v(" "),
            _c("td", [_vm._v("Yacare")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4310")]),
            _vm._v(" "),
            _c("td", [_vm._v("Yoff")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4311")]),
            _vm._v(" "),
            _c("td", [_vm._v("Zanderij")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4312")]),
            _vm._v(" "),
            _c("td", [_vm._v("MGI")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4313")]),
            _vm._v(" "),
            _c("td", [_vm._v("BD72")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4314")]),
            _vm._v(" "),
            _c("td", [_vm._v("DHDN")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4315")]),
            _vm._v(" "),
            _c("td", [_vm._v("Conakry 1905")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4316")]),
            _vm._v(" "),
            _c("td", [_vm._v("Dealul Piscului 1930")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4317")]),
            _vm._v(" "),
            _c("td", [_vm._v("Pulkovo 1942(58)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4318")]),
            _vm._v(" "),
            _c("td", [_vm._v("NGN")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4319")]),
            _vm._v(" "),
            _c("td", [_vm._v("KUDAMS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4322")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 72")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 72")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378135")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.26")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4324")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 72BE")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 72")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378135")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.26")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4326")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4327")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84 (3D)")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4329")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4339")]),
            _vm._v(" "),
            _c("td", [_vm._v("Australian Antarctic")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4341")]),
            _vm._v(" "),
            _c("td", [_vm._v("EST97")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4343")]),
            _vm._v(" "),
            _c("td", [_vm._v("CHTRF95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4345")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4347")]),
            _vm._v(" "),
            _c("td", [_vm._v("GDA94")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4349")]),
            _vm._v(" "),
            _c("td", [_vm._v("Hartebeesthoek94")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4351")]),
            _vm._v(" "),
            _c("td", [_vm._v("IRENET95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4353")]),
            _vm._v(" "),
            _c("td", [_vm._v("JGD2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4355")]),
            _vm._v(" "),
            _c("td", [_vm._v("LKS94")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4357")]),
            _vm._v(" "),
            _c("td", [_vm._v("Moznet")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4359")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4361")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(HARN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4363")]),
            _vm._v(" "),
            _c("td", [_vm._v("NZGD2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4365")]),
            _vm._v(" "),
            _c("td", [_vm._v("POSGAR 98")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4367")]),
            _vm._v(" "),
            _c("td", [_vm._v("REGVEN")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4369")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGF93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4371")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGFG95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4373")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGR92")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4375")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS 1995")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4377")]),
            _vm._v(" "),
            _c("td", [_vm._v("SWEREF99")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4379")]),
            _vm._v(" "),
            _c("td", [_vm._v("Yemen NGN96")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4381")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGNC 1991")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4383")]),
            _vm._v(" "),
            _c("td", [_vm._v("RRAF 1991")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4386")]),
            _vm._v(" "),
            _c("td", [_vm._v("ISN93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4388")]),
            _vm._v(" "),
            _c("td", [_vm._v("LKS92")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4463")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGSPM06")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4466")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGSPM06")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4469")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGM04")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4470")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGM04")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4472")]),
            _vm._v(" "),
            _c("td", [_vm._v("Cadastre 1997")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4475")]),
            _vm._v(" "),
            _c("td", [_vm._v("Cadastre 1997")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4480")]),
            _vm._v(" "),
            _c("td", [_vm._v("China Geodetic Coordinate System 2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("CGCS2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4482")]),
            _vm._v(" "),
            _c("td", [_vm._v("Mexico ITRF92")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4483")]),
            _vm._v(" "),
            _c("td", [_vm._v("Mexico ITRF92")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4490")]),
            _vm._v(" "),
            _c("td", [_vm._v("China Geodetic Coordinate System 2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("CGCS2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4555")]),
            _vm._v(" "),
            _c("td", [_vm._v("New Beijing")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4557")]),
            _vm._v(" "),
            _c("td", [_vm._v("RRAF 1991")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4558")]),
            _vm._v(" "),
            _c("td", [_vm._v("RRAF 1991")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4600")]),
            _vm._v(" "),
            _c("td", [_vm._v("Anguilla 1957")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4601")]),
            _vm._v(" "),
            _c("td", [_vm._v("Antigua 1943")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4602")]),
            _vm._v(" "),
            _c("td", [_vm._v("Dominica 1945")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4603")]),
            _vm._v(" "),
            _c("td", [_vm._v("Grenada 1953")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4604")]),
            _vm._v(" "),
            _c("td", [_vm._v("Montserrat 1958")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4605")]),
            _vm._v(" "),
            _c("td", [_vm._v("St. Kitts 1955")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4606")]),
            _vm._v(" "),
            _c("td", [_vm._v("St. Lucia 1955")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4607")]),
            _vm._v(" "),
            _c("td", [_vm._v("St. Vincent 1945")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4608")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD27(76)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4609")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD27(CGQ77)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4610")]),
            _vm._v(" "),
            _c("td", [_vm._v("Xian 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("IAG 1975")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378140")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4611")]),
            _vm._v(" "),
            _c("td", [_vm._v("Hong Kong 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4612")]),
            _vm._v(" "),
            _c("td", [_vm._v("JGD2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4613")]),
            _vm._v(" "),
            _c("td", [_vm._v("Segara")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4614")]),
            _vm._v(" "),
            _c("td", [_vm._v("QND95")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4615")]),
            _vm._v(" "),
            _c("td", [_vm._v("Porto Santo")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4616")]),
            _vm._v(" "),
            _c("td", [_vm._v("Selvagem Grande")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4617")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4618")]),
            _vm._v(" "),
            _c("td", [_vm._v("SAD69")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1967 Modified")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378160")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.25")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4619")]),
            _vm._v(" "),
            _c("td", [_vm._v("SWEREF99")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4620")]),
            _vm._v(" "),
            _c("td", [_vm._v("Point 58")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4621")]),
            _vm._v(" "),
            _c("td", [_vm._v("Fort Marigot")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4622")]),
            _vm._v(" "),
            _c("td", [_vm._v("Guadeloupe 1948")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4623")]),
            _vm._v(" "),
            _c("td", [_vm._v("CSG67")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4624")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGFG95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4625")]),
            _vm._v(" "),
            _c("td", [_vm._v("Martinique 1938")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4626")]),
            _vm._v(" "),
            _c("td", [_vm._v("Reunion 1947")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4627")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGR92")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4628")]),
            _vm._v(" "),
            _c("td", [_vm._v("Tahiti 52")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4629")]),
            _vm._v(" "),
            _c("td", [_vm._v("Tahaa 54")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4630")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGN72 Nuku Hiva")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4631")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGN 1962 Kerguelen")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4632")]),
            _vm._v(" "),
            _c("td", [_vm._v("Combani 1950")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4633")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGN56 Lifou")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4634")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGN72 Grande Terre")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4635")]),
            _vm._v(" "),
            _c("td", [_vm._v("ST87 Ouvea")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4636")]),
            _vm._v(" "),
            _c("td", [_vm._v("Petrels 1972")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4637")]),
            _vm._v(" "),
            _c("td", [_vm._v("Perroud 1950")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4638")]),
            _vm._v(" "),
            _c("td", [_vm._v("Saint Pierre et Miquelon 1950")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4639")]),
            _vm._v(" "),
            _c("td", [_vm._v("MOP78")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4640")]),
            _vm._v(" "),
            _c("td", [_vm._v("RRAF 1991")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4641")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGN53 Mare")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4642")]),
            _vm._v(" "),
            _c("td", [_vm._v("ST84 Ile des Pins")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4643")]),
            _vm._v(" "),
            _c("td", [_vm._v("ST71 Belep")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4644")]),
            _vm._v(" "),
            _c("td", [_vm._v("NEA74 Noumea")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4645")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGNC91-93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4646")]),
            _vm._v(" "),
            _c("td", [_vm._v("Grand Comoros")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4657")]),
            _vm._v(" "),
            _c("td", [_vm._v("Reykjavik 1900")]),
            _vm._v(" "),
            _c("td", [_vm._v("Danish 1876")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377019.27")]),
            _vm._v(" "),
            _c("td", [_vm._v("300")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4658")]),
            _vm._v(" "),
            _c("td", [_vm._v("Hjorsey 1955")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4659")]),
            _vm._v(" "),
            _c("td", [_vm._v("ISN93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4660")]),
            _vm._v(" "),
            _c("td", [_vm._v("Helle 1954")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4661")]),
            _vm._v(" "),
            _c("td", [_vm._v("LKS92")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4662")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGN72 Grande Terre")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4663")]),
            _vm._v(" "),
            _c("td", [_vm._v("Porto Santo 1995")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4664")]),
            _vm._v(" "),
            _c("td", [_vm._v("Azores Oriental 1995")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4665")]),
            _vm._v(" "),
            _c("td", [_vm._v("Azores Central 1995")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4666")]),
            _vm._v(" "),
            _c("td", [_vm._v("Lisbon 1890")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4667")]),
            _vm._v(" "),
            _c("td", [_vm._v("IKBD-92")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4668")]),
            _vm._v(" "),
            _c("td", [_vm._v("ED79")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4669")]),
            _vm._v(" "),
            _c("td", [_vm._v("LKS94")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4670")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGM95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4671")]),
            _vm._v(" "),
            _c("td", [_vm._v("Voirol 1879")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4672")]),
            _vm._v(" "),
            _c("td", [_vm._v("Chatham Islands 1971")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4673")]),
            _vm._v(" "),
            _c("td", [_vm._v("Chatham Islands 1979")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4674")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS 2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4675")]),
            _vm._v(" "),
            _c("td", [_vm._v("Guam 1963")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4676")]),
            _vm._v(" "),
            _c("td", [_vm._v("Vientiane 1982")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4677")]),
            _vm._v(" "),
            _c("td", [_vm._v("Lao 1993")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4678")]),
            _vm._v(" "),
            _c("td", [_vm._v("Lao 1997")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4679")]),
            _vm._v(" "),
            _c("td", [_vm._v("Jouik 1961")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4680")]),
            _vm._v(" "),
            _c("td", [_vm._v("Nouakchott 1965")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4681")]),
            _vm._v(" "),
            _c("td", [_vm._v("Mauritania 1999")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4682")]),
            _vm._v(" "),
            _c("td", [_vm._v("Gulshan 303")]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1937 Adjustment)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377276.345")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4683")]),
            _vm._v(" "),
            _c("td", [_vm._v("PRS92")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4684")]),
            _vm._v(" "),
            _c("td", [_vm._v("Gan 1970")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4685")]),
            _vm._v(" "),
            _c("td", [_vm._v("Kasai 1953")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4686")]),
            _vm._v(" "),
            _c("td", [_vm._v("MAGNA-SIRGAS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4687")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGPF")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4688")]),
            _vm._v(" "),
            _c("td", [_vm._v("Fatu Iva 72")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4689")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGN63 Hiva Oa")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4690")]),
            _vm._v(" "),
            _c("td", [_vm._v("Tahiti 79")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4691")]),
            _vm._v(" "),
            _c("td", [_vm._v("Moorea 87")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4692")]),
            _vm._v(" "),
            _c("td", [_vm._v("Maupiti 83")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4693")]),
            _vm._v(" "),
            _c("td", [_vm._v("Nakhl-e Ghanem")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4694")]),
            _vm._v(" "),
            _c("td", [_vm._v("POSGAR 94")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4695")]),
            _vm._v(" "),
            _c("td", [_vm._v("Katanga 1955")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4696")]),
            _vm._v(" "),
            _c("td", [_vm._v("Kasai 1953")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4697")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGC 1962 6th Parallel South")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4698")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGN 1962 Kerguelen")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4699")]),
            _vm._v(" "),
            _c("td", [_vm._v("Le Pouce 1934")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4700")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGN Astro 1960")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4701")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGCB 1955")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4702")]),
            _vm._v(" "),
            _c("td", [_vm._v("Mauritania 1999")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4703")]),
            _vm._v(" "),
            _c("td", [_vm._v("Mhast 1951")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4704")]),
            _vm._v(" "),
            _c("td", [_vm._v("Mhast (onshore)")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4705")]),
            _vm._v(" "),
            _c("td", [_vm._v("Mhast (offshore)")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4706")]),
            _vm._v(" "),
            _c("td", [_vm._v("Egypt Gulf of Suez S-650 TL")]),
            _vm._v(" "),
            _c("td", [_vm._v("Helmert 1906")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378200")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4707")]),
            _vm._v(" "),
            _c("td", [_vm._v("Tern Island 1961")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4708")]),
            _vm._v(" "),
            _c("td", [_vm._v("Cocos Islands 1965")]),
            _vm._v(" "),
            _c("td", [_vm._v("Australian National Spheroid")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378160")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.25")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4709")]),
            _vm._v(" "),
            _c("td", [_vm._v("Iwo Jima 1945")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4710")]),
            _vm._v(" "),
            _c("td", [_vm._v("Astro DOS 71")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4711")]),
            _vm._v(" "),
            _c("td", [_vm._v("Marcus Island 1952")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4712")]),
            _vm._v(" "),
            _c("td", [_vm._v("Ascension Island 1958")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4713")]),
            _vm._v(" "),
            _c("td", [_vm._v("Ayabelle Lighthouse")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4714")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bellevue")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4715")]),
            _vm._v(" "),
            _c("td", [_vm._v("Camp Area Astro")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4716")]),
            _vm._v(" "),
            _c("td", [_vm._v("Phoenix Islands 1966")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4717")]),
            _vm._v(" "),
            _c("td", [_vm._v("Cape Canaveral")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4718")]),
            _vm._v(" "),
            _c("td", [_vm._v("Solomon 1968")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4719")]),
            _vm._v(" "),
            _c("td", [_vm._v("Easter Island 1967")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4720")]),
            _vm._v(" "),
            _c("td", [_vm._v("Fiji 1986")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 72")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378135")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.26")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4721")]),
            _vm._v(" "),
            _c("td", [_vm._v("Fiji 1956")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4722")]),
            _vm._v(" "),
            _c("td", [_vm._v("South Georgia 1968")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4723")]),
            _vm._v(" "),
            _c("td", [_vm._v("GCGD59")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4724")]),
            _vm._v(" "),
            _c("td", [_vm._v("Diego Garcia 1969")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4725")]),
            _vm._v(" "),
            _c("td", [_vm._v("Johnston Island 1961")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4726")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIGD61")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4727")]),
            _vm._v(" "),
            _c("td", [_vm._v("Midway 1961")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4728")]),
            _vm._v(" "),
            _c("td", [_vm._v("PN84")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4729")]),
            _vm._v(" "),
            _c("td", [_vm._v("Pitcairn 1967")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4730")]),
            _vm._v(" "),
            _c("td", [_vm._v("Santo 1965")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4731")]),
            _vm._v(" "),
            _c("td", [_vm._v("Viti Levu 1912")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (international foot)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378306.3696")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466307655635")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4732")]),
            _vm._v(" "),
            _c("td", [_vm._v("Marshall Islands 1960")]),
            _vm._v(" "),
            _c("td", [_vm._v("Hough 1960")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378270")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4733")]),
            _vm._v(" "),
            _c("td", [_vm._v("Wake Island 1952")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4734")]),
            _vm._v(" "),
            _c("td", [_vm._v("Tristan 1968")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4735")]),
            _vm._v(" "),
            _c("td", [_vm._v("Kusaie 1951")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4736")]),
            _vm._v(" "),
            _c("td", [_vm._v("Deception Island")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4737")]),
            _vm._v(" "),
            _c("td", [_vm._v("Korea 2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4738")]),
            _vm._v(" "),
            _c("td", [_vm._v("Hong Kong 1963")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1858")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378293.64520876")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.260676369261")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4739")]),
            _vm._v(" "),
            _c("td", [_vm._v("Hong Kong 1963(67)")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4740")]),
            _vm._v(" "),
            _c("td", [_vm._v("PZ-90")]),
            _vm._v(" "),
            _c("td", [_vm._v("PZ-90")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378136")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257839303")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4741")]),
            _vm._v(" "),
            _c("td", [_vm._v("FD54")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4742")]),
            _vm._v(" "),
            _c("td", [_vm._v("GDM2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4743")]),
            _vm._v(" "),
            _c("td", [_vm._v("Karbala 1979")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4744")]),
            _vm._v(" "),
            _c("td", [_vm._v("Nahrwan 1934")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4745")]),
            _vm._v(" "),
            _c("td", [_vm._v("RD/83")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4746")]),
            _vm._v(" "),
            _c("td", [_vm._v("PD/83")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4747")]),
            _vm._v(" "),
            _c("td", [_vm._v("GR96")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4748")]),
            _vm._v(" "),
            _c("td", [_vm._v("Vanua Levu 1915")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (international foot)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378306.3696")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466307655635")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4749")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGNC91-93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4750")]),
            _vm._v(" "),
            _c("td", [_vm._v("ST87 Ouvea")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4751")]),
            _vm._v(" "),
            _c("td", [_vm._v("Kertau (RSO)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (RSO 1969)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377295.664")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4752")]),
            _vm._v(" "),
            _c("td", [_vm._v("Viti Levu 1912")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (international foot)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378306.3696")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466307655635")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4753")]),
            _vm._v(" "),
            _c("td", [_vm._v("fk89")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4754")]),
            _vm._v(" "),
            _c("td", [_vm._v("LGD2006")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4755")]),
            _vm._v(" "),
            _c("td", [_vm._v("DGN95")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4756")]),
            _vm._v(" "),
            _c("td", [_vm._v("VN-2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4757")]),
            _vm._v(" "),
            _c("td", [_vm._v("SVY21")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4758")]),
            _vm._v(" "),
            _c("td", [_vm._v("JAD2001")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4759")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(NSRS2007)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4760")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 66")]),
            _vm._v(" "),
            _c("td", [_vm._v("NWL 9D")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378145")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.25")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4761")]),
            _vm._v(" "),
            _c("td", [_vm._v("HTRS96")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4762")]),
            _vm._v(" "),
            _c("td", [_vm._v("BDA2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4763")]),
            _vm._v(" "),
            _c("td", [_vm._v("Pitcairn 2006")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4764")]),
            _vm._v(" "),
            _c("td", [_vm._v("RSRGD2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4765")]),
            _vm._v(" "),
            _c("td", [_vm._v("Slovenia 1996")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4801")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bern 1898 (Bern)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4802")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bogota 1975 (Bogota)")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4803")]),
            _vm._v(" "),
            _c("td", [_vm._v("Lisbon (Lisbon)")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4804")]),
            _vm._v(" "),
            _c("td", [_vm._v("Makassar (Jakarta)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4805")]),
            _vm._v(" "),
            _c("td", [_vm._v("MGI (Ferro)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4806")]),
            _vm._v(" "),
            _c("td", [_vm._v("Monte Mario (Rome)")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4807")]),
            _vm._v(" "),
            _c("td", [_vm._v("NTF (Paris)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.015708")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4808")]),
            _vm._v(" "),
            _c("td", [_vm._v("Batavia (Jakarta)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4809")]),
            _vm._v(" "),
            _c("td", [_vm._v("BD50 (Brussels)")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4810")]),
            _vm._v(" "),
            _c("td", [_vm._v("Tananarive (Paris)")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.015708")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4811")]),
            _vm._v(" "),
            _c("td", [_vm._v("Voirol 1875 (Paris)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.015708")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4813")]),
            _vm._v(" "),
            _c("td", [_vm._v("Batavia (Jakarta)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4814")]),
            _vm._v(" "),
            _c("td", [_vm._v("RT38 (Stockholm)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4815")]),
            _vm._v(" "),
            _c("td", [_vm._v("Greek (Athens)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4816")]),
            _vm._v(" "),
            _c("td", [_vm._v("Carthage (Paris)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.015708")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4817")]),
            _vm._v(" "),
            _c("td", [_vm._v("NGO 1948 (Oslo)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel Modified")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377492.018")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4818")]),
            _vm._v(" "),
            _c("td", [_vm._v("S-JTSK (Ferro)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4819")]),
            _vm._v(" "),
            _c("td", [_vm._v("Nord Sahara 1959")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4820")]),
            _vm._v(" "),
            _c("td", [_vm._v("Segara (Jakarta)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4821")]),
            _vm._v(" "),
            _c("td", [_vm._v("Voirol 1879 (Paris)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.015708")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4823")]),
            _vm._v(" "),
            _c("td", [_vm._v("Sao Tome")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4824")]),
            _vm._v(" "),
            _c("td", [_vm._v("Principe")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4883")]),
            _vm._v(" "),
            _c("td", [_vm._v("Slovenia 1996")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4885")]),
            _vm._v(" "),
            _c("td", [_vm._v("RSRGD2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4887")]),
            _vm._v(" "),
            _c("td", [_vm._v("BDA2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4889")]),
            _vm._v(" "),
            _c("td", [_vm._v("HTRS96")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4891")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 66")]),
            _vm._v(" "),
            _c("td", [_vm._v("NWL 9D")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378145")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.25")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4893")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(NSRS2007)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4895")]),
            _vm._v(" "),
            _c("td", [_vm._v("JAD2001")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4898")]),
            _vm._v(" "),
            _c("td", [_vm._v("DGN95")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4900")]),
            _vm._v(" "),
            _c("td", [_vm._v("LGD2006")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4901")]),
            _vm._v(" "),
            _c("td", [_vm._v("ATF (Paris)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Plessis 1817")]),
            _vm._v(" "),
            _c("td", [_vm._v("6376523")]),
            _vm._v(" "),
            _c("td", [_vm._v("308.64")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.015708")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4902")]),
            _vm._v(" "),
            _c("td", [_vm._v("ATF (Paris)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Plessis 1817")]),
            _vm._v(" "),
            _c("td", [_vm._v("6376523")]),
            _vm._v(" "),
            _c("td", [_vm._v("308.64")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.015708")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4903")]),
            _vm._v(" "),
            _c("td", [_vm._v("Madrid 1870 (Madrid)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Struve 1860")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.73")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4904")]),
            _vm._v(" "),
            _c("td", [_vm._v("Lisbon 1890 (Lisbon)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4907")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGNC91-93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4909")]),
            _vm._v(" "),
            _c("td", [_vm._v("GR96")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4921")]),
            _vm._v(" "),
            _c("td", [_vm._v("GDM2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4923")]),
            _vm._v(" "),
            _c("td", [_vm._v("PZ-90")]),
            _vm._v(" "),
            _c("td", [_vm._v("PZ-90")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378136")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257839303")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4925")]),
            _vm._v(" "),
            _c("td", [_vm._v("Mauritania 1999")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4927")]),
            _vm._v(" "),
            _c("td", [_vm._v("Korea 2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4929")]),
            _vm._v(" "),
            _c("td", [_vm._v("POSGAR 94")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4931")]),
            _vm._v(" "),
            _c("td", [_vm._v("Australian Antarctic")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4933")]),
            _vm._v(" "),
            _c("td", [_vm._v("CHTRF95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4935")]),
            _vm._v(" "),
            _c("td", [_vm._v("EST97")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4937")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4939")]),
            _vm._v(" "),
            _c("td", [_vm._v("GDA94")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4941")]),
            _vm._v(" "),
            _c("td", [_vm._v("Hartebeesthoek94")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4943")]),
            _vm._v(" "),
            _c("td", [_vm._v("IRENET95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4945")]),
            _vm._v(" "),
            _c("td", [_vm._v("ISN93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4947")]),
            _vm._v(" "),
            _c("td", [_vm._v("JGD2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4949")]),
            _vm._v(" "),
            _c("td", [_vm._v("LKS92")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4951")]),
            _vm._v(" "),
            _c("td", [_vm._v("LKS94")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4953")]),
            _vm._v(" "),
            _c("td", [_vm._v("Moznet")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4955")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4957")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(HARN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4959")]),
            _vm._v(" "),
            _c("td", [_vm._v("NZGD2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4961")]),
            _vm._v(" "),
            _c("td", [_vm._v("POSGAR 98")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4963")]),
            _vm._v(" "),
            _c("td", [_vm._v("REGVEN")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4965")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGF93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4967")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGFG95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4969")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGNC91-93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4971")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGR92")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4973")]),
            _vm._v(" "),
            _c("td", [_vm._v("RRAF 1991")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4975")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS 1995")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4977")]),
            _vm._v(" "),
            _c("td", [_vm._v("SWEREF99")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4979")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4981")]),
            _vm._v(" "),
            _c("td", [_vm._v("Yemen NGN96")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4983")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGM95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4985")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 72")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 72")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378135")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.26")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4987")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 72BE")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 72")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378135")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.26")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4989")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS 2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4991")]),
            _vm._v(" "),
            _c("td", [_vm._v("Lao 1993")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4993")]),
            _vm._v(" "),
            _c("td", [_vm._v("Lao 1997")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4995")]),
            _vm._v(" "),
            _c("td", [_vm._v("PRS92")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4997")]),
            _vm._v(" "),
            _c("td", [_vm._v("MAGNA-SIRGAS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4999")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGPF")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5012")]),
            _vm._v(" "),
            _c("td", [_vm._v("PTRA08")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5013")]),
            _vm._v(" "),
            _c("td", [_vm._v("PTRA08")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5132")]),
            _vm._v(" "),
            _c("td", [_vm._v("Tokyo 1892")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5228")]),
            _vm._v(" "),
            _c("td", [_vm._v("S-JTSK/05")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5229")]),
            _vm._v(" "),
            _c("td", [_vm._v("S-JTSK/05 (Ferro)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5233")]),
            _vm._v(" "),
            _c("td", [_vm._v("SLD99")]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1937 Adjustment)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377276.345")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5245")]),
            _vm._v(" "),
            _c("td", [_vm._v("GDBD2009")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5246")]),
            _vm._v(" "),
            _c("td", [_vm._v("GDBD2009")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5251")]),
            _vm._v(" "),
            _c("td", [_vm._v("TUREF")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5252")]),
            _vm._v(" "),
            _c("td", [_vm._v("TUREF")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5263")]),
            _vm._v(" "),
            _c("td", [_vm._v("DRUKREF 03")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5264")]),
            _vm._v(" "),
            _c("td", [_vm._v("DRUKREF 03")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5323")]),
            _vm._v(" "),
            _c("td", [_vm._v("ISN2004")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5324")]),
            _vm._v(" "),
            _c("td", [_vm._v("ISN2004")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5340")]),
            _vm._v(" "),
            _c("td", [_vm._v("POSGAR 2007")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5342")]),
            _vm._v(" "),
            _c("td", [_vm._v("POSGAR 2007")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5353")]),
            _vm._v(" "),
            _c("td", [_vm._v("MARGEN")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5354")]),
            _vm._v(" "),
            _c("td", [_vm._v("MARGEN")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5359")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-Chile 2002")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5360")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-Chile 2002")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5364")]),
            _vm._v(" "),
            _c("td", [_vm._v("CR05")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5365")]),
            _vm._v(" "),
            _c("td", [_vm._v("CR05")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5370")]),
            _vm._v(" "),
            _c("td", [_vm._v("MACARIO SOLIS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5371")]),
            _vm._v(" "),
            _c("td", [_vm._v("MACARIO SOLIS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5372")]),
            _vm._v(" "),
            _c("td", [_vm._v("Peru96")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5373")]),
            _vm._v(" "),
            _c("td", [_vm._v("Peru96")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5380")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-ROU98")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5381")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-ROU98")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5392")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS_ES2007.8")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5393")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS_ES2007.8")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5451")]),
            _vm._v(" "),
            _c("td", [_vm._v("Ocotepeque 1935")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5464")]),
            _vm._v(" "),
            _c("td", [_vm._v("Sibun Gorge 1922")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1858")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378293.64520876")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.260676369261")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5467")]),
            _vm._v(" "),
            _c("td", [_vm._v("Panama-Colon 1911")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5488")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGAF09")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5489")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGAF09")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5498")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5499")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(HARN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5500")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(NSRS2007)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5524")]),
            _vm._v(" "),
            _c("td", [_vm._v("Corrego Alegre 1961")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5527")]),
            _vm._v(" "),
            _c("td", [_vm._v("SAD69(96)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1967 Modified")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378160")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.25")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5545")]),
            _vm._v(" "),
            _c("td", [_vm._v("PNG94")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5546")]),
            _vm._v(" "),
            _c("td", [_vm._v("PNG94")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5560")]),
            _vm._v(" "),
            _c("td", [_vm._v("UCS-2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5561")]),
            _vm._v(" "),
            _c("td", [_vm._v("UCS-2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("Krassowsky 1940")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378245")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.3")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5592")]),
            _vm._v(" "),
            _c("td", [_vm._v("FEH2010")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5593")]),
            _vm._v(" "),
            _c("td", [_vm._v("FEH2010")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5628")]),
            _vm._v(" "),
            _c("td", [_vm._v("SWEREF99")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5681")]),
            _vm._v(" "),
            _c("td", [_vm._v("DB_REF")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5830")]),
            _vm._v(" "),
            _c("td", [_vm._v("DB_REF")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5885")]),
            _vm._v(" "),
            _c("td", [_vm._v("TGD2005")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5886")]),
            _vm._v(" "),
            _c("td", [_vm._v("TGD2005")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5942")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6134")]),
            _vm._v(" "),
            _c("td", [_vm._v("CIGD11")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6135")]),
            _vm._v(" "),
            _c("td", [_vm._v("CIGD11")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6144")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6207")]),
            _vm._v(" "),
            _c("td", [_vm._v("Nepal 1981")]),
            _vm._v(" "),
            _c("td", [_vm._v("Everest 1830 (1937 Adjustment)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377276.345")]),
            _vm._v(" "),
            _c("td", [_vm._v("300.8017")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6310")]),
            _vm._v(" "),
            _c("td", [_vm._v("CGRS93")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6311")]),
            _vm._v(" "),
            _c("td", [_vm._v("CGRS93")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6318")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(2011)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6319")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(2011)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6321")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(PA11)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6322")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(PA11)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6324")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(MA11)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6325")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(MA11)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6349")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(2011)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6364")]),
            _vm._v(" "),
            _c("td", [_vm._v("Mexico ITRF2008")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6365")]),
            _vm._v(" "),
            _c("td", [_vm._v("Mexico ITRF2008")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6649")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6667")]),
            _vm._v(" "),
            _c("td", [_vm._v("JGD2011")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6668")]),
            _vm._v(" "),
            _c("td", [_vm._v("JGD2011")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6696")]),
            _vm._v(" "),
            _c("td", [_vm._v("JGD2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6697")]),
            _vm._v(" "),
            _c("td", [_vm._v("JGD2011")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6700")]),
            _vm._v(" "),
            _c("td", [_vm._v("Tokyo")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6705")]),
            _vm._v(" "),
            _c("td", [_vm._v("RDN2008")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6706")]),
            _vm._v(" "),
            _c("td", [_vm._v("RDN2008")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6782")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CORS96)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6783")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CORS96)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6881")]),
            _vm._v(" "),
            _c("td", [_vm._v("Aden 1925")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6882")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bekaa Valley 1920")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6883")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bioko")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6892")]),
            _vm._v(" "),
            _c("td", [_vm._v("South East Island 1943")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6894")]),
            _vm._v(" "),
            _c("td", [_vm._v("Gambia")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6917")]),
            _vm._v(" "),
            _c("td", [_vm._v("SVY21")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6979")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGD05")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6980")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGD05")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6982")]),
            _vm._v(" "),
            _c("td", [_vm._v("IG05 Intermediate CRS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6983")]),
            _vm._v(" "),
            _c("td", [_vm._v("IG05 Intermediate CRS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6986")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGD05/12")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6987")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGD05/12")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6989")]),
            _vm._v(" "),
            _c("td", [_vm._v("IG05/12 Intermediate CRS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6990")]),
            _vm._v(" "),
            _c("td", [_vm._v("IG05/12 Intermediate CRS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7034")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGSPM06 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7035")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGSPM06 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7036")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGR92 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7037")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGR92 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7038")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGM04 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7039")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGM04 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7040")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGFG95 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7041")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGFG95 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7042")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGF93 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7072")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGTAAF07")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7073")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGTAAF07")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7084")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGF93 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7085")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGAF09 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7086")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGAF09 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7087")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGTAAF07 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7088")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGTAAF07 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7133")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGTAAF07 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7135")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGD05")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7136")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGD05")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7138")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGD05/12")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7139")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGD05/12")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7372")]),
            _vm._v(" "),
            _c("td", [_vm._v("ONGD14")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7373")]),
            _vm._v(" "),
            _c("td", [_vm._v("ONGD14")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7400")]),
            _vm._v(" "),
            _c("td", [_vm._v("NTF (Paris)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (IGN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.2")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.466021293627")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.015708")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7404")]),
            _vm._v(" "),
            _c("td", [_vm._v("RT90")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7406")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD27")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1866")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378206.4")]),
            _vm._v(" "),
            _c("td", [_vm._v("294.978698213898")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7409")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7410")]),
            _vm._v(" "),
            _c("td", [_vm._v("PSD93")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7414")]),
            _vm._v(" "),
            _c("td", [_vm._v("Tokyo")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7423")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7657")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84 (G730)")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7659")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84 (G873)")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7661")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84 (G1150)")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7663")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84 (G1674)")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7665")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84 (G1762)")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7678")]),
            _vm._v(" "),
            _c("td", [_vm._v("PZ-90.02")]),
            _vm._v(" "),
            _c("td", [_vm._v("PZ-90")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378136")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257839303")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7680")]),
            _vm._v(" "),
            _c("td", [_vm._v("PZ-90.11")]),
            _vm._v(" "),
            _c("td", [_vm._v("PZ-90")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378136")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257839303")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7682")]),
            _vm._v(" "),
            _c("td", [_vm._v("GSK-2011")]),
            _vm._v(" "),
            _c("td", [_vm._v("GSK-2011")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378136.5")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.2564151")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7683")]),
            _vm._v(" "),
            _c("td", [_vm._v("GSK-2011")]),
            _vm._v(" "),
            _c("td", [_vm._v("GSK-2011")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378136.5")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.2564151")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7685")]),
            _vm._v(" "),
            _c("td", [_vm._v("Kyrg-06")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7686")]),
            _vm._v(" "),
            _c("td", [_vm._v("Kyrg-06")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7797")]),
            _vm._v(" "),
            _c("td", [_vm._v("BGS2005")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7798")]),
            _vm._v(" "),
            _c("td", [_vm._v("BGS2005")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7816")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84 (Transit)")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7843")]),
            _vm._v(" "),
            _c("td", [_vm._v("GDA2020")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7844")]),
            _vm._v(" "),
            _c("td", [_vm._v("GDA2020")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7880")]),
            _vm._v(" "),
            _c("td", [_vm._v("St. Helena Tritan")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7881")]),
            _vm._v(" "),
            _c("td", [_vm._v("St. Helena Tritan")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7885")]),
            _vm._v(" "),
            _c("td", [_vm._v("SHGD2015")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7886")]),
            _vm._v(" "),
            _c("td", [_vm._v("SHGD2015")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7900")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF88")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7901")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7902")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF90")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7903")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF91")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7904")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF92")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7905")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7906")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF94")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7907")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF96")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7908")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF97")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7909")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7910")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF2005")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7911")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF2008")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7912")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF2014")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7915")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7917")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF90")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7919")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF91")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7921")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF92")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7923")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7925")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF94")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7927")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF96")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7929")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF97")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7931")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8042")]),
            _vm._v(" "),
            _c("td", [_vm._v("Gusterberg (Ferro)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Zach 1812")]),
            _vm._v(" "),
            _c("td", [_vm._v("6376045")]),
            _vm._v(" "),
            _c("td", [_vm._v("310")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8043")]),
            _vm._v(" "),
            _c("td", [_vm._v("St. Stephen (Ferro)")]),
            _vm._v(" "),
            _c("td", [_vm._v("Zach 1812")]),
            _vm._v(" "),
            _c("td", [_vm._v("6376045")]),
            _vm._v(" "),
            _c("td", [_vm._v("310")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8085")]),
            _vm._v(" "),
            _c("td", [_vm._v("ISN2016")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8086")]),
            _vm._v(" "),
            _c("td", [_vm._v("ISN2016")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8231")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS96)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8232")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS96)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8235")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)v2")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8237")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)v2")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8239")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)v3")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8240")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)v3")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8244")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)v4")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8246")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)v4")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8248")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)v5")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8249")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)v5")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8251")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)v6")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8252")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)v6")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8254")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)v7")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8255")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)v7")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8349")]),
            _vm._v(" "),
            _c("td", [_vm._v("GR96")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8350")]),
            _vm._v(" "),
            _c("td", [_vm._v("GR96")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8351")]),
            _vm._v(" "),
            _c("td", [_vm._v("S-JTSK [JTSK03]")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8360")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8399")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF2005")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8403")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF2014")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8426")]),
            _vm._v(" "),
            _c("td", [_vm._v("Hong Kong Geodetic CS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8427")]),
            _vm._v(" "),
            _c("td", [_vm._v("Hong Kong Geodetic CS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8428")]),
            _vm._v(" "),
            _c("td", [_vm._v("Macao 1920")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8430")]),
            _vm._v(" "),
            _c("td", [_vm._v("Macao 2008")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8431")]),
            _vm._v(" "),
            _c("td", [_vm._v("Macao 2008")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8449")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(FBN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8542")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(FBN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8544")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(HARN Corrected)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8545")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(HARN Corrected)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8684")]),
            _vm._v(" "),
            _c("td", [_vm._v("SRB_ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8685")]),
            _vm._v(" "),
            _c("td", [_vm._v("SRB_ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8694")]),
            _vm._v(" "),
            _c("td", [_vm._v("Camacupa 2015")]),
            _vm._v(" "),
            _c("td", [_vm._v("Clarke 1880 (RGS)")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378249.145")]),
            _vm._v(" "),
            _c("td", [_vm._v("293.465")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8698")]),
            _vm._v(" "),
            _c("td", [_vm._v("RSAO13")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8699")]),
            _vm._v(" "),
            _c("td", [_vm._v("RSAO13")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8817")]),
            _vm._v(" "),
            _c("td", [_vm._v("MTRF-2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8818")]),
            _vm._v(" "),
            _c("td", [_vm._v("MTRF-2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8860")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(FBN)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8888")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84 (Transit)")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8899")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGWF96")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8900")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGWF96")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8901")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGWF96 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8902")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGWF96 (lon-lat)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8906")]),
            _vm._v(" "),
            _c("td", [_vm._v("CR-SIRGAS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8907")]),
            _vm._v(" "),
            _c("td", [_vm._v("CR-SIRGAS")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8916")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF00P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8918")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF01P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8920")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF01P02")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8922")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF02P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8924")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF04P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8926")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF05P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8928")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF06P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8930")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF07P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8932")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF08P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8934")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON SIR09P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8936")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON SIR10P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8938")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON SIR11P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8940")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON SIR13P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8942")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON SIR14P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8944")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON SIR15P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8946")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON SIR17P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8948")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-Chile 2010")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8949")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-Chile 2010")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8972")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF00P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8973")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF01P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8974")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF01P02")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8975")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF02P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8976")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF04P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8977")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF05P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8978")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF06P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8979")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF07P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8980")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON DGF08P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8981")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON SIR09P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8982")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON SIR10P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8983")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON SIR11P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8984")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON SIR13P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8985")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON SIR14P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8986")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON SIR15P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8987")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-CON SIR17P01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8988")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF88")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8989")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8990")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF90")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8991")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF91")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8992")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF92")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8993")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8994")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF94")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8995")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF96")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8996")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF97")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8997")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8998")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF2005")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8999")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF2008")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9000")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF2014")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9002")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGS97")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9003")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGS97")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9005")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGS00")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9006")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGS00")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9008")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGb00")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9009")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGb00")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9011")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGS05")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9012")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGS05")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9013")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGS08")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9014")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGS08")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9016")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGb08")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9017")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGb08")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9018")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGS14")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9019")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGS14")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9053")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84 (G730)")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9054")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84 (G873)")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9055")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84 (G1150)")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9056")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84 (G1674)")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9057")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84 (G1762)")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9059")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9060")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF90")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9061")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF91")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9062")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF92")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9063")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9064")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF94")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9065")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF96")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9066")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF97")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9067")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9068")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF2005")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9069")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF2014")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9071")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(MARP00)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9072")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(MARP00)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9074")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(PACP00)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9075")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(PACP00)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9139")]),
            _vm._v(" "),
            _c("td", [_vm._v("KOSOVAREF01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9140")]),
            _vm._v(" "),
            _c("td", [_vm._v("KOSOVAREF01")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9147")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-Chile 2013")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9148")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-Chile 2013")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9152")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-Chile 2016")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9153")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-Chile 2016")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9183")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-Chile")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9184")]),
            _vm._v(" "),
            _c("td", [_vm._v("SIRGAS-Chile")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9248")]),
            _vm._v(" "),
            _c("td", [_vm._v("Tapi Aike")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9251")]),
            _vm._v(" "),
            _c("td", [_vm._v("MMN")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9253")]),
            _vm._v(" "),
            _c("td", [_vm._v("MMS")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9267")]),
            _vm._v(" "),
            _c("td", [_vm._v("MGI")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9286")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9289")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9290")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9293")]),
            _vm._v(" "),
            _c("td", [_vm._v("ONGD17")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9294")]),
            _vm._v(" "),
            _c("td", [_vm._v("ONGD17")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9299")]),
            _vm._v(" "),
            _c("td", [_vm._v("HS2-IRF")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9308")]),
            _vm._v(" "),
            _c("td", [_vm._v("ATRF2014")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9309")]),
            _vm._v(" "),
            _c("td", [_vm._v("ATRF2014")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9332")]),
            _vm._v(" "),
            _c("td", [_vm._v("KSA-GRF17")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9333")]),
            _vm._v(" "),
            _c("td", [_vm._v("KSA-GRF17")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9364")]),
            _vm._v(" "),
            _c("td", [_vm._v("TPEN11-IRF")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9372")]),
            _vm._v(" "),
            _c("td", [_vm._v("MML07-IRF")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9379")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGb14")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9380")]),
            _vm._v(" "),
            _c("td", [_vm._v("IGb14")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9384")]),
            _vm._v(" "),
            _c("td", [_vm._v("AbInvA96_2020-IRF")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9403")]),
            _vm._v(" "),
            _c("td", [_vm._v("PN68")]),
            _vm._v(" "),
            _c("td", [_vm._v("International 1924")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378388")]),
            _vm._v(" "),
            _c("td", [_vm._v("297")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9422")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9423")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9424")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9425")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9426")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9427")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9428")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9429")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9430")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9449")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9450")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9452")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9453")]),
            _vm._v(" "),
            _c("td", [_vm._v("GBK19-IRF")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9462")]),
            _vm._v(" "),
            _c("td", [_vm._v("GDA2020")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9463")]),
            _vm._v(" "),
            _c("td", [_vm._v("GDA2020")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9464")]),
            _vm._v(" "),
            _c("td", [_vm._v("GDA94")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9469")]),
            _vm._v(" "),
            _c("td", [_vm._v("SRGI2013")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9470")]),
            _vm._v(" "),
            _c("td", [_vm._v("SRGI2013")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9474")]),
            _vm._v(" "),
            _c("td", [_vm._v("PZ-90.02")]),
            _vm._v(" "),
            _c("td", [_vm._v("PZ-90")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378136")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257839303")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9475")]),
            _vm._v(" "),
            _c("td", [_vm._v("PZ-90.11")]),
            _vm._v(" "),
            _c("td", [_vm._v("PZ-90")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378136")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257839303")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9500")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9501")]),
            _vm._v(" "),
            _c("td", [_vm._v("MGI")]),
            _vm._v(" "),
            _c("td", [_vm._v("Bessel 1841")]),
            _vm._v(" "),
            _c("td", [_vm._v("6377397.155")]),
            _vm._v(" "),
            _c("td", [_vm._v("299.1528128")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9502")]),
            _vm._v(" "),
            _c("td", [_vm._v("CIGD11")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9503")]),
            _vm._v(" "),
            _c("td", [_vm._v("CIGD11")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9504")]),
            _vm._v(" "),
            _c("td", [_vm._v("CIGD11")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9505")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9506")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9507")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9508")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9509")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9510")]),
            _vm._v(" "),
            _c("td", [_vm._v("REGCAN95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9511")]),
            _vm._v(" "),
            _c("td", [_vm._v("REGCAN95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9512")]),
            _vm._v(" "),
            _c("td", [_vm._v("REGCAN95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9513")]),
            _vm._v(" "),
            _c("td", [_vm._v("REGCAN95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9514")]),
            _vm._v(" "),
            _c("td", [_vm._v("REGCAN95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9515")]),
            _vm._v(" "),
            _c("td", [_vm._v("REGCAN95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9516")]),
            _vm._v(" "),
            _c("td", [_vm._v("REGCAN95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9517")]),
            _vm._v(" "),
            _c("td", [_vm._v("SHGD2015")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9518")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9519")]),
            _vm._v(" "),
            _c("td", [_vm._v("FEH2010")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9520")]),
            _vm._v(" "),
            _c("td", [_vm._v("KSA-GRF17")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9521")]),
            _vm._v(" "),
            _c("td", [_vm._v("POSGAR 2007")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9522")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(2011)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9523")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(2011)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9524")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(MA11)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9525")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(MA11)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9526")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(PA11)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9527")]),
            _vm._v(" "),
            _c("td", [_vm._v("NZGD2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9528")]),
            _vm._v(" "),
            _c("td", [_vm._v("NZGD2000")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9529")]),
            _vm._v(" "),
            _c("td", [_vm._v("SRGI2013")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9530")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGFG95")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9531")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGAF09")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9532")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGAF09")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9533")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGAF09")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9534")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGAF09")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9535")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGAF09")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9536")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGAF09")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9537")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGAF09")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9538")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGF93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9539")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGF93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9540")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGNC91-93")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9541")]),
            _vm._v(" "),
            _c("td", [_vm._v("RGSPM06")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9542")]),
            _vm._v(" "),
            _c("td", [_vm._v("RRAF 1991")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9543")]),
            _vm._v(" "),
            _c("td", [_vm._v("ITRF2005")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9544")]),
            _vm._v(" "),
            _c("td", [_vm._v("NAD83(CSRS)v6")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9546")]),
            _vm._v(" "),
            _c("td", [_vm._v("LTF2004(G)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9547")]),
            _vm._v(" "),
            _c("td", [_vm._v("LTF2004(G)")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9656")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF2000-PL")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9657")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF2000-PL")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9695")]),
            _vm._v(" "),
            _c("td", [_vm._v("REDGEOMIN")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9696")]),
            _vm._v(" "),
            _c("td", [_vm._v("REDGEOMIN")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9701")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF2000-PL")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9702")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRF2000-PL")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9705")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9707")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("WGS 84")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257223563")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9723")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9724")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9725")]),
            _vm._v(" "),
            _c("td", [_vm._v("ETRS89")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9739")]),
            _vm._v(" "),
            _c("td", [_vm._v("EOS21-IRF")]),
            _vm._v(" "),
            _c("td", [_vm._v("GRS 1980")]),
            _vm._v(" "),
            _c("td", [_vm._v("6378137")]),
            _vm._v(" "),
            _c("td", [_vm._v("298.257222101")]),
            _vm._v(" "),
            _c("td", [_vm._v("0.017453")]),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "坐标系定义" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#坐标系定义" } },
          [_vm._v("#")]
        ),
        _vm._v(" 坐标系定义"),
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", { staticStyle: { "text-align": "right" } }, [
            _c("th", [_vm._v("EPSG代码")]),
            _vm._v(" "),
            _c("th", [_vm._v("坐标系定义")]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", [_vm._v("3819")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["HD1909",DATUM["Hungarian_Datum_1909",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","1024"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","3819"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("3821")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["TWD67",DATUM["Taiwan_Datum_1967",SPHEROID["GRS 1967 Modified",6378160,298.25,AUTHORITY["EPSG","7050"]],AUTHORITY["EPSG","1025"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","3821"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=aust_SA +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("3823")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["TWD97",DATUM["Taiwan Datum 1997",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Taiwan, Republic of China - onshore and offshore - Taiwan Island, Penghu (Pescadores) Islands."],BBOX[17.36,114.32,26.96,123.61]],ID["EPSG",3823]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("3824")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["TWD97",DATUM["Taiwan_Datum_1997",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1026"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","3824"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("3888")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IGRS",DATUM["Iraqi Geospatial Reference System",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Iraq - onshore and offshore."],BBOX[29.06,38.79,37.39,48.75]],ID["EPSG",3888]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("3889")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGRS",DATUM["Iraqi_Geospatial_Reference_System",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1029"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","3889"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("3906")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["MGI 1901",DATUM["MGI_1901",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","1031"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","3906"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=682,-203,480,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4001")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Airy 1830 ellipsoid (deprecated)",DATUM["Not_specified_based_on_Airy_1830_ellipsoid",SPHEROID["Airy 1830",6377563.396,299.3249646,AUTHORITY["EPSG","7001"]],AUTHORITY["EPSG","6001"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4001"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=airy +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4002")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Airy Modified 1849 ellipsoid (deprecated)",DATUM["Not_specified_based_on_Airy_Modified_1849_ellipsoid",SPHEROID["Airy Modified 1849",6377340.189,299.3249646,AUTHORITY["EPSG","7002"]],AUTHORITY["EPSG","6002"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4002"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6377340.189 +rf=299.3249646 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4003")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Australian National Spheroid (deprecated)",DATUM["Not_specified_based_on_Australian_National_Spheroid",SPHEROID["Australian National Spheroid",6378160,298.25,AUTHORITY["EPSG","7003"]],AUTHORITY["EPSG","6003"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4003"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=aust_SA +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4004")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Bessel 1841 ellipsoid (deprecated)",DATUM["Not_specified_based_on_Bessel_1841_ellipsoid",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6004"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4004"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4005")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Bessel Modified ellipsoid (deprecated)",DATUM["Not_specified_based_on_Bessel_Modified_ellipsoid",SPHEROID["Bessel Modified",6377492.018,299.1528128,AUTHORITY["EPSG","7005"]],AUTHORITY["EPSG","6005"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4005"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6377492.018 +rf=299.1528128 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4006")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Bessel Namibia ellipsoid (deprecated)",DATUM["Not_specified_based_on_Bessel_Namibia_ellipsoid",SPHEROID["Bessel Namibia (GLM)",6377483.86528042,299.1528128,AUTHORITY["EPSG","7046"]],AUTHORITY["EPSG","6006"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4006"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bess_nam +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4007")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Clarke 1858 ellipsoid (deprecated)",DATUM["Not_specified_based_on_Clarke_1858_ellipsoid",SPHEROID["Clarke 1858",6378293.64520876,294.260676369261,AUTHORITY["EPSG","7007"]],AUTHORITY["EPSG","6007"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4007"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378293.64520876 +rf=294.260676369261 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4008")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Clarke 1866 ellipsoid (deprecated)",DATUM["Not_specified_based_on_Clarke_1866_ellipsoid",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6008"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4008"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4009")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Clarke 1866 Michigan ellipsoid (deprecated)",DATUM["Not_specified_based_on_Clarke_1866_Michigan_ellipsoid",SPHEROID["Clarke 1866 Michigan",6378450.0475489,294.978697164677,AUTHORITY["EPSG","7009"]],AUTHORITY["EPSG","6009"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4009"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378450.0475489 +rf=294.978697164677 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4010")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Clarke 1880 (Benoit) ellipsoid (deprecated)",DATUM["Not_specified_based_on_Clarke_1880_Benoit_ellipsoid",SPHEROID["Clarke 1880 (Benoit)",6378300.789,293.466315538981,AUTHORITY["EPSG","7010"]],AUTHORITY["EPSG","6010"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4010"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378300.789 +rf=293.466315538981 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4011")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Clarke 1880 (IGN) ellipsoid (deprecated)",DATUM["Not_specified_based_on_Clarke_1880_IGN_ellipsoid",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6011"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4011"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk80ign +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4012")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Clarke 1880 (RGS) ellipsoid (deprecated)",DATUM["Not_specified_based_on_Clarke_1880_RGS_ellipsoid",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6012"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4012"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4013")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Clarke 1880 (Arc) ellipsoid (deprecated)",DATUM["Not_specified_based_on_Clarke_1880_Arc_ellipsoid",SPHEROID["Clarke 1880 (Arc)",6378249.145,293.4663077,AUTHORITY["EPSG","7013"]],AUTHORITY["EPSG","6013"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4013"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.4663077 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4014")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Clarke 1880 (SGA 1922) ellipsoid (deprecated)",DATUM["Not_specified_based_on_Clarke_1880_SGA_1922_ellipsoid",SPHEROID["Clarke 1880 (SGA 1922)",6378249.2,293.46598,AUTHORITY["EPSG","7014"]],AUTHORITY["EPSG","6014"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4014"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.2 +rf=293.46598 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4015")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Everest 1830 (1937 Adjustment) ellipsoid (deprecated)",DATUM["Not_specified_based_on_Everest_1830_1937_Adjustment_ellipsoid",SPHEROID["Everest 1830 (1937 Adjustment)",6377276.345,300.8017,AUTHORITY["EPSG","7015"]],AUTHORITY["EPSG","6015"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4015"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=evrst30 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4016")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Everest 1830 (1967 Definition) ellipsoid (deprecated)",DATUM["Not_specified_based_on_Everest_1830_1967_Definition_ellipsoid",SPHEROID["Everest 1830 (1967 Definition)",6377298.556,300.8017,AUTHORITY["EPSG","7016"]],AUTHORITY["EPSG","6016"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4016"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=evrstSS +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4017")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["MOLDREF99",DATUM["MOLDREF99",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Moldova."],BBOX[45.44,26.63,48.47,30.13]],ID["EPSG",4017]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4018")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Everest 1830 Modified ellipsoid (deprecated)",DATUM["Not_specified_based_on_Everest_1830_Modified_ellipsoid",SPHEROID["Everest 1830 Modified",6377304.063,300.8017,AUTHORITY["EPSG","7018"]],AUTHORITY["EPSG","6018"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4018"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=evrst48 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4019")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the GRS 1980 ellipsoid (deprecated)",DATUM["Not_specified_based_on_GRS_1980_ellipsoid",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6019"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4019"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4020")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Helmert 1906 ellipsoid (deprecated)",DATUM["Not_specified_based_on_Helmert_1906_ellipsoid",SPHEROID["Helmert 1906",6378200,298.3,AUTHORITY["EPSG","7020"]],AUTHORITY["EPSG","6020"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4020"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=helmert +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4021")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Indonesian National Spheroid (deprecated)",DATUM["Not_specified_based_on_Indonesian_National_Spheroid",SPHEROID["Indonesian National Spheroid",6378160,298.247,AUTHORITY["EPSG","7021"]],AUTHORITY["EPSG","6021"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4021"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378160 +rf=298.247 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4022")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the International 1924 ellipsoid (deprecated)",DATUM["Not_specified_based_on_International_1924_ellipsoid",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6022"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4022"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4023")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["MOLDREF99",DATUM["MOLDREF99",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1032"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4023"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4024")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Krassowsky 1940 ellipsoid (deprecated)",DATUM["Not_specified_based_on_Krassowsky_1940_ellipsoid",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","6024"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4024"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=krass +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4025")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the NWL 9D ellipsoid (deprecated)",DATUM["Not_specified_based_on_NWL_9D_ellipsoid",SPHEROID["NWL 9D",6378145,298.25,AUTHORITY["EPSG","7025"]],AUTHORITY["EPSG","6025"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4025"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=NWL9D +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4027")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Plessis 1817 ellipsoid (deprecated)",DATUM["Not_specified_based_on_Plessis_1817_ellipsoid",SPHEROID["Plessis 1817",6376523,308.64,AUTHORITY["EPSG","7027"]],AUTHORITY["EPSG","6027"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4027"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6376523 +rf=308.64 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4028")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Struve 1860 ellipsoid (deprecated)",DATUM["Not_specified_based_on_Struve_1860_ellipsoid",SPHEROID["Struve 1860",6378298.3,294.73,AUTHORITY["EPSG","7028"]],AUTHORITY["EPSG","6028"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4028"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378298.3 +rf=294.73 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4029")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the War Office ellipsoid (deprecated)",DATUM["Not_specified_based_on_War_Office_ellipsoid",SPHEROID["War Office",6378300,296,AUTHORITY["EPSG","7029"]],AUTHORITY["EPSG","6029"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4029"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378300 +rf=296 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4030")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the WGS 84 ellipsoid (deprecated)",DATUM["Not_specified_based_on_WGS_84_ellipsoid",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6030"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4030"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4031")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the GEM 10C ellipsoid (deprecated)",DATUM["Not_specified_based_on_GEM_10C_ellipsoid",SPHEROID["GEM 10C",6378137,298.257223563,AUTHORITY["EPSG","7031"]],AUTHORITY["EPSG","6031"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4031"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4032")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the OSU86F ellipsoid (deprecated)",DATUM["Not_specified_based_on_OSU86F_ellipsoid",SPHEROID["OSU86F",6378136.2,298.257223563,AUTHORITY["EPSG","7032"]],AUTHORITY["EPSG","6032"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4032"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378136.2 +rf=298.257223563 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4033")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the OSU91A ellipsoid (deprecated)",DATUM["Not_specified_based_on_OSU91A_ellipsoid",SPHEROID["OSU91A",6378136.3,298.257223563,AUTHORITY["EPSG","7033"]],AUTHORITY["EPSG","6033"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4033"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378136.3 +rf=298.257223563 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4034")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Clarke 1880 ellipsoid (deprecated)",DATUM["Not_specified_based_on_Clarke_1880_ellipsoid",SPHEROID["Clarke 1880",6378249.14480801,293.466307655636,AUTHORITY["EPSG","7034"]],AUTHORITY["EPSG","6034"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4034"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.14480801 +rf=293.466307655636 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4035")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unspecified datum based upon the GRS 1980 Authalic Sphere (deprecated)",DATUM["Not_specified_based_on_GRS_1980_Authalic_Sphere",SPHEROID["GRS 1980 Authalic Sphere",6371007,0,AUTHORITY["EPSG","7048"]],AUTHORITY["EPSG","6047"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4047"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +R=6371007 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4036")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the GRS 1967 ellipsoid (deprecated)",DATUM["Not_specified_based_on_GRS_1967_ellipsoid",SPHEROID["GRS 1967",6378160,298.247167427,AUTHORITY["EPSG","7036"]],AUTHORITY["EPSG","6036"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4036"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS67 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4040")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGRDC 2005",DATUM["Reseau Geodesique de la RDC 2005",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["The Democratic Republic of the Congo (Zaire) - south of a line through Bandundu, Seke and Pweto - onshore and offshore."],BBOX[-13.46,11.79,-3.41,29.81]],ID["EPSG",4040]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4041")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Average Terrestrial System 1977 ellipsoid (deprecated)",DATUM["Not_specified_based_on_Average_Terrestrial_System_1977_ellipsoid",SPHEROID["Average Terrestrial System 1977",6378135,298.257,AUTHORITY["EPSG","7041"]],AUTHORITY["EPSG","6041"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4041"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378135 +rf=298.257 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4042")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Everest (1830 Definition) ellipsoid (deprecated)",DATUM["Not_specified_based_on_Everest_1830_Definition_ellipsoid",SPHEROID["Everest (1830 Definition)",6377299.36559538,300.801725543355,AUTHORITY["EPSG","7042"]],AUTHORITY["EPSG","6042"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4042"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6377299.36559538 +rf=300.801725543355 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4043")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the WGS 72 ellipsoid (deprecated)",DATUM["Not_specified_based_on_WGS_72_ellipsoid",SPHEROID["WGS 72",6378135,298.26,AUTHORITY["EPSG","7043"]],AUTHORITY["EPSG","6043"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4043"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS72 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4044")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Everest 1830 (1962 Definition) ellipsoid (deprecated)",DATUM["Not_specified_based_on_Everest_1830_1962_Definition_ellipsoid",SPHEROID["Everest 1830 (1962 Definition)",6377301.243,300.8017255,AUTHORITY["EPSG","7044"]],AUTHORITY["EPSG","6044"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4044"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6377301.243 +rf=300.8017255 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4045")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unknown datum based upon the Everest 1830 (1975 Definition) ellipsoid (deprecated)",DATUM["Not_specified_based_on_Everest_1830_1975_Definition_ellipsoid",SPHEROID["Everest 1830 (1975 Definition)",6377299.151,300.8017255,AUTHORITY["EPSG","7045"]],AUTHORITY["EPSG","6045"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4045"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6377299.151 +rf=300.8017255 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4046")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGRDC 2005",DATUM["Reseau_Geodesique_de_la_RDC_2005",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1033"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4046"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4047")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unspecified datum based upon the GRS 1980 Authalic Sphere (deprecated)",DATUM["Not_specified_based_on_GRS_1980_Authalic_Sphere",SPHEROID["GRS 1980 Authalic Sphere",6371007,0,AUTHORITY["EPSG","7048"]],AUTHORITY["EPSG","6047"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4047"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +R=6371007 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4052")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unspecified datum based upon the Clarke 1866 Authalic Sphere (deprecated)",DATUM["Not_specified_based_on_Clarke_1866_Authalic_Sphere",SPHEROID["Clarke 1866 Authalic Sphere",6370997,0,AUTHORITY["EPSG","7052"]],AUTHORITY["EPSG","6052"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4052"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=sphere +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4053")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unspecified datum based upon the International 1924 Authalic Sphere (deprecated)",DATUM["Not_specified_based_on_International_1924_Authalic_Sphere",SPHEROID["International 1924 Authalic Sphere",6371228,0,AUTHORITY["EPSG","7057"]],AUTHORITY["EPSG","6053"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4053"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +R=6371228 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4054")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Unspecified datum based upon the Hughes 1980 ellipsoid (deprecated)",DATUM["Not_specified_based_on_Hughes_1980_ellipsoid",SPHEROID["Hughes 1980",6378273,298.279411123064,AUTHORITY["EPSG","7058"]],AUTHORITY["EPSG","6054"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4054"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378273 +rf=298.279411123064 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4055")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Popular Visualisation CRS (deprecated)",DATUM["Popular_Visualisation_Datum",SPHEROID["Popular Visualisation Sphere",6378137,0,AUTHORITY["EPSG","7059"]],AUTHORITY["EPSG","6055"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4055"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +R=6378137 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4074")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SREF98",DATUM["Serbian Reference Network 1998",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Serbia including Vojvodina."],BBOX[42.23,18.81,46.19,23.01]],ID["EPSG",4074]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4075")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SREF98",DATUM["Serbian_Reference_Network_1998",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1034"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4075"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4080")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["REGCAN95",DATUM["Red Geodesica de Canarias 1995",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Spain - Canary Islands onshore and offshore."],BBOX[24.6,-21.93,32.76,-11.75]],ID["EPSG",4080]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4081")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["REGCAN95",DATUM["Red_Geodesica_de_Canarias_1995",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1035"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4081"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4120")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Greek",DATUM["Greek",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6120"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4120"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4121")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["GGRS87",DATUM["Greek_Geodetic_Reference_System_1987",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6121"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4121"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=-199.87,74.79,246.62,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4122")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ATS77",DATUM["Average_Terrestrial_System_1977",SPHEROID["Average Terrestrial System 1977",6378135,298.257,AUTHORITY["EPSG","7041"]],AUTHORITY["EPSG","6122"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4122"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378135 +rf=298.257 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4123")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["KKJ",DATUM["Kartastokoordinaattijarjestelma_1966",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6123"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4123"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4124")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RT90",DATUM["Rikets_koordinatsystem_1990",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6124"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4124"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4125")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Segara",DATUM["Gunung_Segara",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6613"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4613"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=-403,684,41,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4126")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["LKS94",DATUM["Lithuania_1994_ETRS89",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6126"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4669"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4127")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Tete",DATUM["Tete",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6127"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4127"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk66 +towgs84=-80,-100,-228,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4128")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Madzansua",DATUM["Madzansua",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6128"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4128"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4129")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Observatario",DATUM["Observatario",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6129"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4129"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk66 +towgs84=-132,-110,-335,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4130")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Moznet",DATUM["Moznet_ITRF94",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6130"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4130"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4131")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Indian 1960",DATUM["Indian_1960",SPHEROID["Everest 1830 (1937 Adjustment)",6377276.345,300.8017,AUTHORITY["EPSG","7015"]],AUTHORITY["EPSG","6131"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4131"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=evrst30 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4132")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["FD58",DATUM["Final_Datum_1958",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6132"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4132"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4133")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["EST92",DATUM["Estonia_1992",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6133"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4133"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0.055,-0.541,-0.185,0.0183,-0.0003,-0.007,-0.014 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4134")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["PSD93",DATUM["PDO_Survey_Datum_1993",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6134"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4134"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4135")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Old Hawaiian",DATUM["Old_Hawaiian",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6135"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4135"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk66 +towgs84=61,-285,-181,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4136")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["St. Lawrence Island",DATUM["St_Lawrence_Island",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6136"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4136"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4137")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["St. Paul Island",DATUM["St_Paul_Island",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6137"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4137"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4138")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["St. George Island",DATUM["St_George_Island",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6138"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4138"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4139")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Puerto Rico",DATUM["Puerto_Rico",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6139"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4139"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk66 +towgs84=11,72,-101,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4140")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(CSRS)",DATUM["NAD83_Canadian_Spatial_Reference_System",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6140"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4617"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4141")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Israel 1993",DATUM["Israel_1993",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6141"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4141"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4142")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Locodjo 1965",DATUM["Locodjo_1965",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6142"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4142"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4143")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Abidjan 1987",DATUM["Abidjan_1987",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6143"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4143"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-124.76,53,466.79,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4144")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Kalianpur 1937",DATUM["Kalianpur_1937",SPHEROID["Everest 1830 (1937 Adjustment)",6377276.345,300.8017,AUTHORITY["EPSG","7015"]],AUTHORITY["EPSG","6144"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4144"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=evrst30 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4145")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Kalianpur 1962",DATUM["Kalianpur_1962",SPHEROID["Everest 1830 (1962 Definition)",6377301.243,300.8017255,AUTHORITY["EPSG","7044"]],AUTHORITY["EPSG","6145"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4145"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6377301.243 +rf=300.8017255 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4146")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Kalianpur 1975",DATUM["Kalianpur_1975",SPHEROID["Everest 1830 (1975 Definition)",6377299.151,300.8017255,AUTHORITY["EPSG","7045"]],AUTHORITY["EPSG","6146"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4146"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6377299.151 +rf=300.8017255 +towgs84=295,736,257,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4147")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Hanoi 1972",DATUM["Hanoi_1972",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","6147"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4147"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=krass +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4148")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Hartebeesthoek94",DATUM["Hartebeesthoek94",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6148"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4148"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4149")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["CH1903",DATUM["CH1903",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6149"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4149"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4150")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["CH1903+",DATUM["CH1903+",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6150"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4150"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4151")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["CHTRF95",DATUM["Swiss_Terrestrial_Reference_Frame_1995",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6151"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4151"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4152")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(HARN)",DATUM["NAD83_High_Accuracy_Reference_Network",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6152"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4152"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4153")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Rassadiran",DATUM["Rassadiran",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6153"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4153"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-133.63,-157.5,-158.62,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4154")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ED50(ED77)",DATUM["European_Datum_1950_1977",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6154"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4154"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4155")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Dabola 1981",DATUM["Dabola_1981",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6155"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4155"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk80ign +towgs84=-83,37,124,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4156")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["S-JTSK",DATUM["System_of_the_Unified_Trigonometrical_Cadastral_Network",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6156"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4156"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=589,76,480,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4157")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Mount Dillon",DATUM["Mount_Dillon",SPHEROID["Clarke 1858",6378293.64520876,294.260676369261,AUTHORITY["EPSG","7007"]],AUTHORITY["EPSG","6157"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4157"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378293.64520876 +rf=294.260676369261 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4158")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Naparima 1955",DATUM["Naparima_1955",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6158"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4158"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4159")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ELD79",DATUM["European_Libyan_Datum_1979",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6159"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4159"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4160")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Chos Malal 1914",DATUM["Chos_Malal_1914",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6160"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4160"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4161")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Pampa del Castillo",DATUM["Pampa_del_Castillo",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6161"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4161"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4162")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Korean 1985",DATUM["Korean_Datum_1985",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6162"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4162"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4163")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Yemen NGN96",DATUM["Yemen_National_Geodetic_Network_1996",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6163"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4163"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4164")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["South Yemen",DATUM["South_Yemen",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","6164"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4164"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=krass +towgs84=-76,-138,67,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4165")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Bissau",DATUM["Bissau",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6165"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4165"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-173,253,27,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4166")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Korean 1995",DATUM["Korean_Datum_1995",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6166"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4166"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4167")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NZGD2000",DATUM["New_Zealand_Geodetic_Datum_2000",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6167"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4167"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4168")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Accra",DATUM["Accra",SPHEROID["War Office",6378300,296,AUTHORITY["EPSG","7029"]],AUTHORITY["EPSG","6168"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4168"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378300 +rf=296 +towgs84=-199,32,322,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4169")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["American Samoa 1962",DATUM["American_Samoa_1962",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6169"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4169"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk66 +towgs84=-115,118,426,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4170")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS 1995",DATUM["Sistema_de_Referencia_Geocentrico_para_America_del_Sur_1995",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6170"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4170"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4171")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGF93",DATUM["Reseau_Geodesique_Francais_1993",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6171"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4171"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4172")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["POSGAR (deprecated)",DATUM["Posiciones_Geodesicas_Argentinas",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6172"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree minute second hemisphere",0.0174532925199433,AUTHORITY["EPSG","9108"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4172"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4173")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IRENET95",DATUM["IRENET95",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6173"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4173"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4174")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Sierra Leone 1924",DATUM["Sierra_Leone_Colony_1924",SPHEROID["War Office",6378300,296,AUTHORITY["EPSG","7029"]],AUTHORITY["EPSG","6174"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4174"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378300 +rf=296 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4175")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Sierra Leone 1968",DATUM["Sierra_Leone_1968",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6175"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4175"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-88,4,101,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4176")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Australian Antarctic",DATUM["Australian_Antarctic_Datum_1998",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6176"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4176"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4178")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Pulkovo 1942(83)",DATUM["Pulkovo_1942_83",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","6178"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4178"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=krass +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4179")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Pulkovo 1942(58)",DATUM["Pulkovo_1942_58",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","6179"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4179"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=krass +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4180")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["EST97",DATUM["Estonia_1997",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6180"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4180"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4181")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Luxembourg 1930",DATUM["Luxembourg_1930",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6181"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4181"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-189.6806,18.3463,-42.7695,-0.33746,-3.09264,2.53861,0.4598 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4182")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Azores Occidental 1939",DATUM["Azores_Occidental_Islands_1939",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6182"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4182"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4183")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Azores Central 1948",DATUM["Azores_Central_Islands_1948",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6183"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4183"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-104,167,-38,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4184")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Azores Oriental 1940",DATUM["Azores_Oriental_Islands_1940",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6184"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4184"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-203,141,53,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4185")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Madeira 1936 (deprecated)",DATUM["Madeira_1936",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6185"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree minute second hemisphere",0.0174532925199433,AUTHORITY["EPSG","9108"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4185"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4188")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["OSNI 1952",DATUM["OSNI_1952",SPHEROID["Airy 1830",6377563.396,299.3249646,AUTHORITY["EPSG","7001"]],AUTHORITY["EPSG","6188"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4188"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=airy +towgs84=482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4189")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["REGVEN",DATUM["Red_Geodesica_Venezolana",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6189"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4189"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4190")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["POSGAR 98",DATUM["Posiciones_Geodesicas_Argentinas_1998",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6190"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4190"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4191")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Albanian 1987",DATUM["Albanian_1987",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","6191"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4191"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=krass +towgs84=-44.183,-0.58,-38.489,2.3867,2.7072,-3.5196,-8.2703 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4192")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Douala 1948",DATUM["Douala_1948",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6192"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4192"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-206.1,-174.7,-87.7,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4193")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Manoca 1962",DATUM["Manoca_1962",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6193"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4193"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk80ign +towgs84=-70.9,-151.8,-41.4,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4194")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Qornoq 1927",DATUM["Qornoq_1927",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6194"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4194"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4195")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Scoresbysund 1952",DATUM["Scoresbysund_1952",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6195"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4195"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=105,326,-102.5,0,0,0.814,-0.6 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4196")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Ammassalik 1958",DATUM["Ammassalik_1958",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6196"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4196"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-45,417,-3.5,0,0,0.814,-0.6 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4197")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Garoua",DATUM["Garoua",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6197"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4197"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4198")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Kousseri",DATUM["Kousseri",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6198"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4198"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4199")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Egypt 1930",DATUM["Egypt_1930",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6199"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4199"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4200")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Pulkovo 1995",DATUM["Pulkovo_1995",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","6200"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4200"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=krass +towgs84=24.47,-130.89,-81.56,0,0,0.13,-0.22 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4201")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Adindan",DATUM["Adindan",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6201"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4201"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-166,-15,204,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4202")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["AGD66",DATUM["Australian_Geodetic_Datum_1966",SPHEROID["Australian National Spheroid",6378160,298.25,AUTHORITY["EPSG","7003"]],AUTHORITY["EPSG","6202"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4202"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=aust_SA +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4203")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["AGD84",DATUM["Australian_Geodetic_Datum_1984",SPHEROID["Australian National Spheroid",6378160,298.25,AUTHORITY["EPSG","7003"]],AUTHORITY["EPSG","6203"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4203"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=aust_SA +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4204")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Ain el Abd",DATUM["Ain_el_Abd_1970",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6204"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4204"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-143,-236,7,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4205")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Afgooye",DATUM["Afgooye",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","6205"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4205"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=krass +towgs84=-43,-163,45,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4206")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Agadez",DATUM["Agadez",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6206"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4206"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk80ign +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4207")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Lisbon",DATUM["Lisbon_1937",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6207"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4207"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4208")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Aratu",DATUM["Aratu",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6208"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4208"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4209")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Arc 1950",DATUM["Arc_1950",SPHEROID["Clarke 1880 (Arc)",6378249.145,293.4663077,AUTHORITY["EPSG","7013"]],AUTHORITY["EPSG","6209"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4209"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.4663077 +towgs84=-143,-90,-294,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4210")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Arc 1960",DATUM["Arc_1960",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6210"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4210"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4211")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Batavia",DATUM["Batavia",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6211"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4211"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4212")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Barbados 1938",DATUM["Barbados_1938",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6212"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4212"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=31.95,300.99,419.19,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4213")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Beduaram",DATUM["Beduaram",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6213"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4213"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk80ign +towgs84=-106,-87,188,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4214")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Beijing 1954",DATUM["Beijing_1954",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","6214"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4214"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=krass +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4215")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["BD50",DATUM["Reseau_National_Belge_1950",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6215"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4215"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4216")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Bermuda 1957",DATUM["Bermuda_1957",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6216"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4216"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4218")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Bogota 1975",DATUM["Bogota_1975",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6218"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4218"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=307,304,-318,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4219")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Bukit Rimpah",DATUM["Bukit_Rimpah",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6219"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4219"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=-384,664,-48,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4220")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Camacupa 1948",DATUM["Camacupa_1948",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6220"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4220"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4221")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Campo Inchauspe",DATUM["Campo_Inchauspe",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6221"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4221"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-148,136,90,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4222")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Cape",DATUM["Cape",SPHEROID["Clarke 1880 (Arc)",6378249.145,293.4663077,AUTHORITY["EPSG","7013"]],AUTHORITY["EPSG","6222"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4222"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.4663077 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4223")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Carthage",DATUM["Carthage",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6223"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4223"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk80ign +towgs84=-263,6,431,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4224")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Chua",DATUM["Chua",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6224"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4224"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4225")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Corrego Alegre 1970-72",DATUM["Corrego_Alegre_1970-72",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6225"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4225"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4226")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Cote d\'Ivoire (deprecated)",DATUM["Cote_d_Ivoire",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6226"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree minute second hemisphere",0.0174532925199433,AUTHORITY["EPSG","9108"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4226"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk80ign +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4227")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Deir ez Zor",DATUM["Deir_ez_Zor",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6227"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4227"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk80ign +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4228")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Douala 1948",DATUM["Douala_1948",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6192"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4192"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-206.1,-174.7,-87.7,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4229")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Egypt 1907",DATUM["Egypt_1907",SPHEROID["Helmert 1906",6378200,298.3,AUTHORITY["EPSG","7020"]],AUTHORITY["EPSG","6229"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4229"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=helmert +towgs84=-130,110,-13,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4230")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ED50",DATUM["European_Datum_1950",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6230"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4230"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4231")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ED87",DATUM["European_Datum_1987",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6231"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4231"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-83.11,-97.38,-117.22,0.00569290865241986,-0.0446975835137458,0.0442850539012516,0.1218 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4232")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Fahud",DATUM["Fahud",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6232"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4232"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4233")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Gandajika 1970 (deprecated)",DATUM["Gandajika_1970",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6233"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4233"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4234")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Garoua",DATUM["Garoua",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6197"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4197"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4235")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["CSG67",DATUM["Centre_Spatial_Guyanais_1967",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6623"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4623"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-186,230,110,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4236")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Hu Tzu Shan 1950",DATUM["Hu_Tzu_Shan_1950",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6236"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4236"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-637,-549,-203,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4237")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["HD72",DATUM["Hungarian_Datum_1972",SPHEROID["GRS 1967",6378160,298.247167427,AUTHORITY["EPSG","7036"]],AUTHORITY["EPSG","6237"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4237"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS67 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4238")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ID74",DATUM["Indonesian_Datum_1974",SPHEROID["Indonesian National Spheroid",6378160,298.247,AUTHORITY["EPSG","7021"]],AUTHORITY["EPSG","6238"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4238"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378160 +rf=298.247 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4239")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Indian 1954",DATUM["Indian_1954",SPHEROID["Everest 1830 (1937 Adjustment)",6377276.345,300.8017,AUTHORITY["EPSG","7015"]],AUTHORITY["EPSG","6239"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4239"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=evrst30 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4240")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Indian 1975",DATUM["Indian_1975",SPHEROID["Everest 1830 (1937 Adjustment)",6377276.345,300.8017,AUTHORITY["EPSG","7015"]],AUTHORITY["EPSG","6240"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4240"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=evrst30 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4241")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Jamaica 1875",DATUM["Jamaica_1875",SPHEROID["Clarke 1880",6378249.14480801,293.466307655636,AUTHORITY["EPSG","7034"]],AUTHORITY["EPSG","6241"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4241"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.14480801 +rf=293.466307655636 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4242")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["JAD69",DATUM["Jamaica_1969",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6242"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4242"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4243")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Kalianpur 1880",DATUM["Kalianpur_1880",SPHEROID["Everest (1830 Definition)",6377299.36559538,300.801725543355,AUTHORITY["EPSG","7042"]],AUTHORITY["EPSG","6243"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4243"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6377299.36559538 +rf=300.801725543355 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4244")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Kandawala",DATUM["Kandawala",SPHEROID["Everest 1830 (1937 Adjustment)",6377276.345,300.8017,AUTHORITY["EPSG","7015"]],AUTHORITY["EPSG","6244"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4244"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=evrst30 +towgs84=-97,787,86,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4245")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Kertau 1968",DATUM["Kertau_1968",SPHEROID["Everest 1830 Modified",6377304.063,300.8017,AUTHORITY["EPSG","7018"]],AUTHORITY["EPSG","6245"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4245"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=evrst48 +towgs84=-11,851,5,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4246")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["KOC",DATUM["Kuwait_Oil_Company",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6246"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4246"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-294.7,-200.1,525.5,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4247")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["La Canoa",DATUM["La_Canoa",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6247"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4247"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4248")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["PSAD56",DATUM["Provisional_South_American_Datum_1956",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6248"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4248"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4249")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Lake",DATUM["Lake",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6249"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4249"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4250")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Leigon",DATUM["Leigon",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6250"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4250"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-130,29,364,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4251")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Liberia 1964",DATUM["Liberia_1964",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6251"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4251"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-90,40,88,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4252")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Lome",DATUM["Lome",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6252"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4252"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk80ign +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4253")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Luzon 1911",DATUM["Luzon_1911",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6253"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4253"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4254")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Hito XVIII 1963",DATUM["Hito_XVIII_1963",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6254"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4254"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4255")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Herat North",DATUM["Herat_North",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6255"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4255"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-333,-222,114,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4256")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Mahe 1971",DATUM["Mahe_1971",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6256"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4256"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=41,-220,-134,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4257")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Makassar",DATUM["Makassar",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6257"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4257"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=-587.8,519.75,145.76,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4258")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4259")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Malongo 1987",DATUM["Malongo_1987",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6259"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4259"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-254.1,-5.36,-100.29,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4260")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Manoca 1962",DATUM["Manoca_1962",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6193"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4193"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk80ign +towgs84=-70.9,-151.8,-41.4,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4261")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Merchich",DATUM["Merchich",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6261"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4261"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk80ign +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4262")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Massawa",DATUM["Massawa",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6262"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4262"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=639,405,60,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4263")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Minna",DATUM["Minna",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6263"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4263"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4264")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Mhast (deprecated)",DATUM["Mhast",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6264"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4264"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4265")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Monte Mario",DATUM["Monte_Mario",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6265"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4265"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4266")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["M\'poraloko",DATUM["M_poraloko",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6266"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4266"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk80ign +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4267")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD27",DATUM["North_American_Datum_1927",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6267"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4267"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +datum=NAD27 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4268")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD27",DATUM["North_American_Datum_1927",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6267"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4267"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +datum=NAD27 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4269")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83",DATUM["North_American_Datum_1983",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6269"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4269"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +datum=NAD83 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4270")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Nahrwan 1967",DATUM["Nahrwan_1967",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6270"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4270"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4271")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Naparima 1972",DATUM["Naparima_1972",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6271"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4271"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4272")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NZGD49",DATUM["New_Zealand_Geodetic_Datum_1949",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6272"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4272"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4273")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NGO 1948",DATUM["NGO_1948",SPHEROID["Bessel Modified",6377492.018,299.1528128,AUTHORITY["EPSG","7005"]],AUTHORITY["EPSG","6273"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4273"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6377492.018 +rf=299.1528128 +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4274")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Datum 73",DATUM["Datum_73",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6274"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4274"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4275")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NTF",DATUM["Nouvelle_Triangulation_Francaise",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6275"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4275"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk80ign +towgs84=-168,-60,320,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4276")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NSWC 9Z-2",DATUM["NSWC_9Z-2",SPHEROID["NWL 9D",6378145,298.25,AUTHORITY["EPSG","7025"]],AUTHORITY["EPSG","6276"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4276"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=NWL9D +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4277")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["OSGB36",DATUM["Ordnance_Survey_of_Great_Britain_1936",SPHEROID["Airy 1830",6377563.396,299.3249646,AUTHORITY["EPSG","7001"]],AUTHORITY["EPSG","6277"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4277"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=airy +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4278")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["OSGB70",DATUM["OSGB_1970_SN",SPHEROID["Airy 1830",6377563.396,299.3249646,AUTHORITY["EPSG","7001"]],AUTHORITY["EPSG","6278"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4278"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=airy +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4279")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["OS(SN)80",DATUM["OS_SN_1980",SPHEROID["Airy 1830",6377563.396,299.3249646,AUTHORITY["EPSG","7001"]],AUTHORITY["EPSG","6279"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4279"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=airy +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4280")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Batavia",DATUM["Batavia",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6211"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4211"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4281")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Palestine 1923",DATUM["Palestine_1923",SPHEROID["Clarke 1880 (Benoit)",6378300.789,293.466315538981,AUTHORITY["EPSG","7010"]],AUTHORITY["EPSG","6281"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4281"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378300.789 +rf=293.466315538981 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4282")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Pointe Noire",DATUM["Congo_1960_Pointe_Noire",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6282"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4282"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk80ign +towgs84=-148,51,-291,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4283")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["GDA94",DATUM["Geocentric_Datum_of_Australia_1994",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6283"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4283"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4284")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Pulkovo 1942",DATUM["Pulkovo_1942",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","6284"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4284"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=krass +towgs84=25,-141,-78.5,0,0.35,0.736,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4285")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Qatar 1974",DATUM["Qatar_1974",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6285"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4285"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4286")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Qatar 1948",DATUM["Qatar_1948",SPHEROID["Helmert 1906",6378200,298.3,AUTHORITY["EPSG","7020"]],AUTHORITY["EPSG","6286"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4286"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=helmert +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4287")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Qornoq 1927",DATUM["Qornoq_1927",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6194"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4194"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4288")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Loma Quintana",DATUM["Loma_Quintana",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6288"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4288"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4289")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Amersfoort",DATUM["Amersfoort",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6289"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4289"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4291")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SAD69",DATUM["South_American_Datum_1969",SPHEROID["GRS 1967 Modified",6378160,298.25,AUTHORITY["EPSG","7050"]],AUTHORITY["EPSG","6618"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4618"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=aust_SA +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4292")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Sapper Hill 1943",DATUM["Sapper_Hill_1943",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6292"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4292"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4293")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Schwarzeck",DATUM["Schwarzeck",SPHEROID["Bessel Namibia (GLM)",6377483.86528042,299.1528128,AUTHORITY["EPSG","7046"]],AUTHORITY["EPSG","6293"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4293"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bess_nam +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4294")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Segara",DATUM["Gunung_Segara",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6613"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4613"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=-403,684,41,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4295")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Serindung",DATUM["Serindung",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6295"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4295"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4296")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Adindan",DATUM["Adindan",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6201"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4201"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-166,-15,204,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4297")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Tananarive",DATUM["Tananarive_1925",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6297"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4297"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4298")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Timbalai 1948",DATUM["Timbalai_1948",SPHEROID["Everest 1830 (1967 Definition)",6377298.556,300.8017,AUTHORITY["EPSG","7016"]],AUTHORITY["EPSG","6298"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4298"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=evrstSS +towgs84=-679,669,-48,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4299")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["TM65",DATUM["TM65",SPHEROID["Airy Modified 1849",6377340.189,299.3249646,AUTHORITY["EPSG","7002"]],AUTHORITY["EPSG","6299"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4299"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6377340.189 +rf=299.3249646 +towgs84=482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4300")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["TM75",DATUM["Geodetic_Datum_of_1965",SPHEROID["Airy Modified 1849",6377340.189,299.3249646,AUTHORITY["EPSG","7002"]],AUTHORITY["EPSG","6300"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4300"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6377340.189 +rf=299.3249646 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4301")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Tokyo",DATUM["Tokyo",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6301"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4301"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4302")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Trinidad 1903",DATUM["Trinidad_1903",SPHEROID["Clarke 1858",6378293.64520876,294.260676369261,AUTHORITY["EPSG","7007"]],AUTHORITY["EPSG","6302"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4302"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378293.64520876 +rf=294.260676369261 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4303")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["TC(1948)",DATUM["Trucial_Coast_1948",SPHEROID["Helmert 1906",6378200,298.3,AUTHORITY["EPSG","7020"]],AUTHORITY["EPSG","6303"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4303"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=helmert +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4304")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Voirol 1875",DATUM["Voirol_1875",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6304"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4304"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk80ign +towgs84=-73,-247,227,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4306")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Bern 1938",DATUM["Bern_1938",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6306"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4306"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4307")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Nord Sahara 1959",DATUM["Nord_Sahara_1959",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6307"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4307"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4308")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RT38",DATUM["Stockholm_1938",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6308"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4308"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4309")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Yacare",DATUM["Yacare",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6309"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4309"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4310")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Yoff",DATUM["Yoff",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6310"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4310"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk80ign +towgs84=-30,190,89,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4311")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Zanderij",DATUM["Zanderij",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6311"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4311"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-265,120,-358,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4312")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["MGI",DATUM["Militar-Geographische_Institut",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6312"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4312"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=577.326,90.129,463.919,5.137,1.474,5.297,2.4232 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4313")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["BD72",DATUM["Reseau_National_Belge_1972",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6313"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4313"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4314")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["DHDN",DATUM["Deutsches_Hauptdreiecksnetz",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6314"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4314"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4315")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Conakry 1905",DATUM["Conakry_1905",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6315"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4315"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk80ign +towgs84=-23,259,-9,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4316")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Dealul Piscului 1930",DATUM["Dealul_Piscului_1930",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6316"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4316"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=103.25,-100.4,-307.19,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4317")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Pulkovo 1942(58)",DATUM["Pulkovo_1942_58",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","6179"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4179"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=krass +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4318")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NGN",DATUM["National_Geodetic_Network",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6318"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4318"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=-3.2,-5.7,2.8,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4319")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["KUDAMS",DATUM["Kuwait_Utility",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6319"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4319"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4322")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["WGS 72",DATUM["World_Geodetic_System_1972",SPHEROID["WGS 72",6378135,298.26,AUTHORITY["EPSG","7043"]],AUTHORITY["EPSG","6322"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4322"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS72 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4324")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["WGS 72BE",DATUM["WGS_72_Transit_Broadcast_Ephemeris",SPHEROID["WGS 72",6378135,298.26,AUTHORITY["EPSG","7043"]],AUTHORITY["EPSG","6324"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4324"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4326")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4326"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +datum=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4327")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["WGS 84 (3D)",ENSEMBLE["World Geodetic System 1984 ensemble",MEMBER["World Geodetic System 1984 (Transit)"],MEMBER["World Geodetic System 1984 (G730)"],MEMBER["World Geodetic System 1984 (G873)"],MEMBER["World Geodetic System 1984 (G1150)"],MEMBER["World Geodetic System 1984 (G1674)"],MEMBER["World Geodetic System 1984 (G1762)"],ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]],ENSEMBLEACCURACY[2.0]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree minute second hemisphere",0.0174532925199433]],AXIS["geodetic longitude (Long)",east,ORDER[2],ANGLEUNIT["degree minute second hemisphere",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy. Navigation and positioning using GPS satellite system."],AREA["World: Afghanistan, Albania, Algeria, American Samoa, Andorra, Angola, Anguilla, Antarctica, Antigua and Barbuda, Argentina, Armenia, Aruba, Australia, Austria, Azerbaijan, Bahamas, Bahrain, Bangladesh, Barbados, Belgium, Belgium, Belize, Benin, Bermuda, Bhutan, Bolivia, Bonaire, Saint Eustasius and Saba, Bosnia and Herzegovina, Botswana, Bouvet Island, Brazil, British Indian Ocean Territory, British Virgin Islands, Brunei Darussalam, Bulgaria, Burkina Faso, Burundi, Cambodia, Cameroon, Canada, Cape Verde, Cayman Islands, Central African Republic, Chad, Chile, China, Christmas Island, Cocos (Keeling) Islands, Comoros, Congo, Cook Islands, Costa Rica, Côte d\'Ivoire (Ivory Coast), Croatia, Cuba, Curacao, Cyprus, Czechia, Denmark, Djibouti, Dominica, Dominican Republic, East Timor, Ecuador, Egypt, El Salvador, Equatorial Guinea, Eritrea, Estonia, Eswatini (Swaziland), Ethiopia, Falkland Islands (Malvinas), Faroe Islands, Fiji, Finland, France, French Guiana, French Polynesia, French Southern Territories, Gabon, Gambia, Georgia, Germany, Ghana, Gibraltar, Greece, Greenland, Grenada, Guadeloupe, Guam, Guatemala, Guinea, Guinea-Bissau, Guyana, Haiti, Heard Island and McDonald Islands, Holy See (Vatican City State), Honduras, China - Hong Kong, Hungary, Iceland, India, Indonesia, Islamic Republic of Iran, Iraq, Ireland, Israel, Italy, Jamaica, Japan, Jordan, Kazakhstan, Kenya, Kiribati, Democratic People\'s Republic of Korea (North Korea), Republic of Korea (South Korea), Kosovo, Kuwait, Kyrgyzstan, Lao People\'s Democratic Republic (Laos), Latvia, Lebanon, Lesotho, Liberia, Libyan Arab Jamahiriya, Liechtenstein, Lithuania, Luxembourg, China - Macao, Madagascar, Malawi, Malaysia, Maldives, Mali, Malta, Marshall Islands, Martinique, Mauritania, Mauritius, Mayotte, Mexico, Federated States of Micronesia, Monaco, Mongolia, Montenegro, Montserrat, Morocco, Mozambique, Myanmar (Burma), Namibia, Nauru, Nepal, Netherlands, New Caledonia, New Zealand, Nicaragua, Niger, Nigeria, Niue, Norfolk Island, North Macedonia, Northern Mariana Islands, Norway, Oman, Pakistan, Palau, Panama, Papua New Guinea (PNG), Paraguay, Peru, Philippines, Pitcairn, Poland, Portugal, Puerto Rico, Qatar, Reunion, Romania, Russian Federation, Rwanda, Saint Kitts and Nevis, Saint Helena, Ascension and Tristan da Cunha, Saint Lucia, Saint Pierre and Miquelon, Saint Vincent and the Grenadines, Samoa, San Marino, Sao Tome and Principe, Saudi Arabia, Senegal, Serbia, Seychelles, Sierra Leone, Singapore, Slovakia (Slovak Republic), Slovenia, Sint Maarten, Solomon Islands, Somalia, South Africa, South Georgia and the South Sandwich Islands, South Sudan, Spain, Sri Lanka, Sudan, Suriname, Svalbard and Jan Mayen, Sweden, Switzerland, Syrian Arab Republic, Taiwan, Tajikistan, United Republic of Tanzania, Thailand, The Democratic Republic of the Congo (Zaire), Togo, Tokelau, Tonga, Trinidad and Tobago, Tunisia, Turkey, Turkmenistan, Turks and Caicos Islands, Tuvalu, Uganda, Ukraine, United Arab Emirates (UAE), United Kingdom (UK), United States (USA), United States Minor Outlying Islands, Uruguay, Uzbekistan, Vanuatu, Venezuela, Vietnam, US Virgin Islands, Wallis and Futuna, Western Sahara, Yemen, Zambia, Zimbabwe."],BBOX[-90,-180,90,180]],ID["EPSG",4329]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +datum=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4329")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["WGS 84",ENSEMBLE["World Geodetic System 1984 ensemble",MEMBER["World Geodetic System 1984 (Transit)"],MEMBER["World Geodetic System 1984 (G730)"],MEMBER["World Geodetic System 1984 (G873)"],MEMBER["World Geodetic System 1984 (G1150)"],MEMBER["World Geodetic System 1984 (G1674)"],MEMBER["World Geodetic System 1984 (G1762)"],ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]],ENSEMBLEACCURACY[2.0]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy. Navigation and positioning using GPS satellite system."],AREA["World: Afghanistan, Albania, Algeria, American Samoa, Andorra, Angola, Anguilla, Antarctica, Antigua and Barbuda, Argentina, Armenia, Aruba, Australia, Austria, Azerbaijan, Bahamas, Bahrain, Bangladesh, Barbados, Belgium, Belgium, Belize, Benin, Bermuda, Bhutan, Bolivia, Bonaire, Saint Eustasius and Saba, Bosnia and Herzegovina, Botswana, Bouvet Island, Brazil, British Indian Ocean Territory, British Virgin Islands, Brunei Darussalam, Bulgaria, Burkina Faso, Burundi, Cambodia, Cameroon, Canada, Cape Verde, Cayman Islands, Central African Republic, Chad, Chile, China, Christmas Island, Cocos (Keeling) Islands, Comoros, Congo, Cook Islands, Costa Rica, Côte d\'Ivoire (Ivory Coast), Croatia, Cuba, Curacao, Cyprus, Czechia, Denmark, Djibouti, Dominica, Dominican Republic, East Timor, Ecuador, Egypt, El Salvador, Equatorial Guinea, Eritrea, Estonia, Eswatini (Swaziland), Ethiopia, Falkland Islands (Malvinas), Faroe Islands, Fiji, Finland, France, French Guiana, French Polynesia, French Southern Territories, Gabon, Gambia, Georgia, Germany, Ghana, Gibraltar, Greece, Greenland, Grenada, Guadeloupe, Guam, Guatemala, Guinea, Guinea-Bissau, Guyana, Haiti, Heard Island and McDonald Islands, Holy See (Vatican City State), Honduras, China - Hong Kong, Hungary, Iceland, India, Indonesia, Islamic Republic of Iran, Iraq, Ireland, Israel, Italy, Jamaica, Japan, Jordan, Kazakhstan, Kenya, Kiribati, Democratic People\'s Republic of Korea (North Korea), Republic of Korea (South Korea), Kosovo, Kuwait, Kyrgyzstan, Lao People\'s Democratic Republic (Laos), Latvia, Lebanon, Lesotho, Liberia, Libyan Arab Jamahiriya, Liechtenstein, Lithuania, Luxembourg, China - Macao, Madagascar, Malawi, Malaysia, Maldives, Mali, Malta, Marshall Islands, Martinique, Mauritania, Mauritius, Mayotte, Mexico, Federated States of Micronesia, Monaco, Mongolia, Montenegro, Montserrat, Morocco, Mozambique, Myanmar (Burma), Namibia, Nauru, Nepal, Netherlands, New Caledonia, New Zealand, Nicaragua, Niger, Nigeria, Niue, Norfolk Island, North Macedonia, Northern Mariana Islands, Norway, Oman, Pakistan, Palau, Panama, Papua New Guinea (PNG), Paraguay, Peru, Philippines, Pitcairn, Poland, Portugal, Puerto Rico, Qatar, Reunion, Romania, Russian Federation, Rwanda, Saint Kitts and Nevis, Saint Helena, Ascension and Tristan da Cunha, Saint Lucia, Saint Pierre and Miquelon, Saint Vincent and the Grenadines, Samoa, San Marino, Sao Tome and Principe, Saudi Arabia, Senegal, Serbia, Seychelles, Sierra Leone, Singapore, Slovakia (Slovak Republic), Slovenia, Sint Maarten, Solomon Islands, Somalia, South Africa, South Georgia and the South Sandwich Islands, South Sudan, Spain, Sri Lanka, Sudan, Suriname, Svalbard and Jan Mayen, Sweden, Switzerland, Syrian Arab Republic, Taiwan, Tajikistan, United Republic of Tanzania, Thailand, The Democratic Republic of the Congo (Zaire), Togo, Tokelau, Tonga, Trinidad and Tobago, Tunisia, Turkey, Turkmenistan, Turks and Caicos Islands, Tuvalu, Uganda, Ukraine, United Arab Emirates (UAE), United Kingdom (UK), United States (USA), United States Minor Outlying Islands, Uruguay, Uzbekistan, Vanuatu, Venezuela, Vietnam, US Virgin Islands, Wallis and Futuna, Western Sahara, Yemen, Zambia, Zimbabwe."],BBOX[-90,-180,90,180]],ID["EPSG",4979]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +datum=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4339")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Australian Antarctic",DATUM["Australian Antarctic Datum 1998",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Antarctica between 45°E and 136°E and between 142°E and 160°E - Australian sector."],BBOX[-90,45,-60,160]],ID["EPSG",4931]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4341")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["EST97",DATUM["Estonia 1997",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Estonia - onshore and offshore."],BBOX[57.52,20.37,60,28.2]],ID["EPSG",4935]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4343")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["CHTRF95",DATUM["Swiss Terrestrial Reference Frame 1995",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Liechtenstein; Switzerland."],BBOX[45.82,5.96,47.81,10.49]],ID["EPSG",4933]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4345")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ETRS89",ENSEMBLE["European Terrestrial Reference System 1989 ensemble",MEMBER["European Terrestrial Reference Frame 1989"],MEMBER["European Terrestrial Reference Frame 1990"],MEMBER["European Terrestrial Reference Frame 1991"],MEMBER["European Terrestrial Reference Frame 1992"],MEMBER["European Terrestrial Reference Frame 1993"],MEMBER["European Terrestrial Reference Frame 1994"],MEMBER["European Terrestrial Reference Frame 1996"],MEMBER["European Terrestrial Reference Frame 1997"],MEMBER["European Terrestrial Reference Frame 2000"],MEMBER["European Terrestrial Reference Frame 2005"],MEMBER["European Terrestrial Reference Frame 2014"],ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]],ENSEMBLEACCURACY[0.1]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Spatial referencing."],AREA["Europe - onshore and offshore: Albania; Andorra; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Hungary; Ireland; Italy; Kosovo; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway including Svalbard and Jan Mayen; Poland; Portugal; Romania; San Marino; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; United Kingdom (UK) including Channel Islands and Isle of Man; Vatican City State."],BBOX[32.88,-16.1,84.73,40.18]],ID["EPSG",4937]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4347")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["GDA94",DATUM["Geocentric Datum of Australia 1994",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Australia including Lord Howe Island, Macquarie Island, Ashmore and Cartier Islands, Christmas Island, Cocos (Keeling) Islands, Norfolk Island. All onshore and offshore."],BBOX[-60.55,93.41,-8.47,173.34]],ID["EPSG",4939]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4349")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Hartebeesthoek94",DATUM["Hartebeesthoek94",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Eswatini (Swaziland); Lesotho; South Africa - onshore and offshore."],BBOX[-50.32,13.33,-22.13,42.85]],ID["EPSG",4941]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4351")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IRENET95",DATUM["IRENET95",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Ireland - onshore. United Kingdom (UK) - Northern Ireland (Ulster) - onshore."],BBOX[51.39,-10.56,55.43,-5.34]],ID["EPSG",4943]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4353")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["JGD2000",DATUM["Japanese Geodetic Datum 2000",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Japan - onshore and offshore."],BBOX[17.09,122.38,46.05,157.65]],ID["EPSG",4947]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4355")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["LKS94",DATUM["Lithuania 1994 (ETRS89)",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Lithuania - onshore and offshore."],BBOX[53.89,19.02,56.45,26.82]],ID["EPSG",4951]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4357")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Moznet",DATUM["Moznet (ITRF94)",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Mozambique - onshore and offshore."],BBOX[-27.71,30.21,-10.09,43.03]],ID["EPSG",4953]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4359")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(CSRS)",DATUM["NAD83 Canadian Spatial Reference System",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Canada - onshore and offshore - Alberta; British Columbia; Manitoba; New Brunswick; Newfoundland and Labrador; Northwest Territories; Nova Scotia; Nunavut; Ontario; Prince Edward Island; Quebec; Saskatchewan; Yukon."],BBOX[38.21,-141.01,86.46,-40.73]],ID["EPSG",4955]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4361")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(HARN)",DATUM["NAD83 (High Accuracy Reference Network)",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["American Samoa - onshore - Tutuila, Aunu\'u, Ofu, Olesega, Ta\'u and Rose islands. Guam - onshore. Northern Mariana Islands - onshore. Puerto Rico - onshore. United States (USA) - onshore Alabama, Alaska, Arizona, Arkansas, California, Colorado, Connecticut, Delaware, Florida, Georgia, Hawaii, Idaho, Illinois, Indiana, Iowa, Kansas, Kentucky, Louisiana, Maine, Maryland, Massachusetts, Michigan, Minnesota, Mississippi, Missouri, Montana, Nebraska, Nevada, New Hampshire, New Jersey, New Mexico, New York, North Carolina, North Dakota, Ohio, Oklahoma, Oregon, Pennsylvania, Rhode Island, South Carolina, South Dakota, Tennessee, Texas, Utah, Vermont, Virginia, Washington, West Virginia, Wisconsin and Wyoming; offshore Gulf of Mexico continental shelf (GoM OCS). US Virgin Islands - onshore."],BBOX[-14.59,144.58,71.4,-64.51]],ID["EPSG",4957]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4363")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NZGD2000",DATUM["New Zealand Geodetic Datum 2000",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["New Zealand - onshore and offshore. Includes Antipodes Islands, Auckland Islands, Bounty Islands, Chatham Islands, Cambell Island, Kermadec Islands, Raoul Island and Snares Islands."],BBOX[-55.95,160.6,-25.88,-171.2]],ID["EPSG",4959]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4365")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["POSGAR 98",DATUM["Posiciones Geodesicas Argentinas 1998",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Argentina - onshore and offshore."],BBOX[-58.41,-73.59,-21.78,-52.63]],ID["EPSG",4961]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4367")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["REGVEN",DATUM["Red Geodesica Venezolana",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Venezuela - onshore and offshore."],BBOX[0.64,-73.38,16.75,-58.95]],ID["EPSG",4963]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4369")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGF93",DATUM["Reseau Geodesique Francais 1993",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy; air, land and sea navigation and safety of life purposes."],AREA["France - onshore and offshore, mainland and Corsica."],BBOX[41.15,-9.86,51.56,10.38]],ID["EPSG",4965]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4371")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGFG95",DATUM["Reseau Geodesique Francais Guyane 1995",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy; air, land and sea navigation and safety of life purposes."],AREA["French Guiana - onshore and offshore."],BBOX[2.11,-54.61,8.88,-49.45]],ID["EPSG",4967]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4373")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGR92",DATUM["Reseau Geodesique de la Reunion 1992",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy; air, land and sea navigation and safety of life purposes."],AREA["Reunion - onshore and offshore."],BBOX[-24.72,51.83,-18.28,58.24]],ID["EPSG",4971]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4375")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS 1995",DATUM["Sistema de Referencia Geocentrico para America del Sur 1995",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["South America - onshore and offshore. Ecuador (mainland and Galapagos) - onshore and offshore."],BBOX[-59.87,-113.21,16.75,-26]],ID["EPSG",4975]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4377")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SWEREF99",DATUM["SWEREF99",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Sweden - onshore and offshore."],BBOX[54.96,10.03,69.07,24.17]],ID["EPSG",4977]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4379")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Yemen NGN96",DATUM["Yemen National Geodetic Network 1996",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Yemen - onshore and offshore."],BBOX[8.95,41.08,19,57.96]],ID["EPSG",4981]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4381")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGNC 1991",DATUM["Reseau Geodesique Nouvelle Caledonie 1991",ELLIPSOID["International 1924",6378388,297,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["New Caledonia - onshore and offshore. Isle de Pins, Loyalty Islands, Huon Islands, Belep archipelago, Chesterfield Islands, and Walpole."],BBOX[-26.45,156.25,-14.83,174.28]],ID["EPSG",4969]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4383")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RRAF 1991",DATUM["Reseau de Reference des Antilles Francaises 1991",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["French Antilles onshore and offshore - Guadeloupe (including Grande Terre, Basse Terre, Marie Galante, Les Saintes, Iles de la Petite Terre, La Desirade, St Barthélemy, and northern St Martin) and Martinique."],BBOX[14.08,-63.66,18.54,-57.52]],ID["EPSG",4973]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4386")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ISN93",DATUM["Islands Net 1993",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Iceland - onshore and offshore."],BBOX[59.96,-30.87,69.59,-5.55]],ID["EPSG",4945]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4388")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["LKS92",DATUM["Latvia 1992",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latvia - onshore and offshore."],BBOX[55.67,19.06,58.09,28.24]],ID["EPSG",4949]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4463")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGSPM06",DATUM["Reseau_Geodesique_de_Saint_Pierre_et_Miquelon_2006",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1038"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4463"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4466")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGSPM06",DATUM["Reseau Geodesique de Saint Pierre et Miquelon 2006",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy; air, land and sea navigation and safety of life purposes."],AREA["St Pierre and Miquelon - onshore and offshore."],BBOX[43.41,-57.1,47.37,-55.9]],ID["EPSG",4466]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4469")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGM04",DATUM["Reseau Geodesique de Mayotte 2004",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy; air, land and sea navigation and safety of life purposes."],AREA["Mayotte - onshore and offshore."],BBOX[-14.49,43.68,-11.33,46.7]],ID["EPSG",4469]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4470")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGM04",DATUM["Reseau_Geodesique_de_Mayotte_2004",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1036"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4470"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4472")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Cadastre 1997",DATUM["Cadastre 1997",ELLIPSOID["International 1924",6378388,297,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Mayotte - onshore."],BBOX[-13.05,44.98,-12.61,45.35]],ID["EPSG",4472]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-381.788,-57.501,-256.673,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4475")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Cadastre 1997",DATUM["CADASTRE 1997",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["IGNF","REG7010001"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4475"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-381.788,-57.501,-256.673,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4480")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["China Geodetic Coordinate System 2000",DATUM["China 2000",ELLIPSOID["CGCS2000",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["China - onshore and offshore."],BBOX[16.7,73.62,53.56,134.77]],ID["EPSG",4480]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4482")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Mexico ITRF92",DATUM["Mexico ITRF92",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Mexico - onshore and offshore."],BBOX[12.1,-122.19,32.72,-84.64]],ID["EPSG",4482]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4483")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Mexico ITRF92",DATUM["Mexico_ITRF92",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1042"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4483"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4490")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["China Geodetic Coordinate System 2000",DATUM["China_2000",SPHEROID["CGCS2000",6378137,298.257222101,AUTHORITY["EPSG","1024"]],AUTHORITY["EPSG","1043"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4490"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4555")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["New Beijing",DATUM["New_Beijing",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","1045"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4555"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=krass +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4557")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RRAF 1991",DATUM["Reseau de Reference des Antilles Francaises 1991",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["French Antilles onshore and offshore - Guadeloupe (including Grande Terre, Basse Terre, Marie Galante, Les Saintes, Iles de la Petite Terre, La Desirade, St Barthélemy, and northern St Martin) and Martinique."],BBOX[14.08,-63.66,18.54,-57.52]],ID["EPSG",4557]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4558")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RRAF 1991",DATUM["Reseau_de_Reference_des_Antilles_Francaises_1991",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1047"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4558"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4600")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Anguilla 1957",DATUM["Anguilla_1957",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6600"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4600"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4601")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Antigua 1943",DATUM["Antigua_1943",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6601"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4601"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4602")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Dominica 1945",DATUM["Dominica_1945",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6602"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4602"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=725,685,536,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4603")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Grenada 1953",DATUM["Grenada_1953",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6603"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4603"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4604")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Montserrat 1958",DATUM["Montserrat_1958",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6604"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4604"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=174,359,365,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4605")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["St. Kitts 1955",DATUM["St_Kitts_1955",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6605"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4605"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4606")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["St. Lucia 1955",DATUM["St_Lucia_1955",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6606"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4606"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4607")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["St. Vincent 1945",DATUM["St_Vincent_1945",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6607"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4607"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=195.671,332.517,274.607,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4608")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD27(76)",DATUM["North_American_Datum_1927_1976",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6608"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4608"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4609")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD27(CGQ77)",DATUM["North_American_Datum_1927_CGQ77",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6609"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4609"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4610")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Xian 1980",DATUM["Xian_1980",SPHEROID["IAG 1975",6378140,298.257,AUTHORITY["EPSG","7049"]],AUTHORITY["EPSG","6610"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4610"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=IAU76 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4611")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Hong Kong 1980",DATUM["Hong_Kong_1980",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6611"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4611"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-162.619,-276.959,-161.764,0.067753,-2.243649,-1.158827,-1.094246 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4612")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["JGD2000",DATUM["Japanese_Geodetic_Datum_2000",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6612"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4612"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4613")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Segara",DATUM["Gunung_Segara",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6613"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4613"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=-403,684,41,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4614")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["QND95",DATUM["Qatar_National_Datum_1995",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6614"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4614"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-119.4248,-303.65872,-11.00061,1.164298,0.174458,1.096259,3.657065 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4615")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Porto Santo",DATUM["Porto_Santo_1936",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6615"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4615"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-499,-249,314,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4616")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Selvagem Grande",DATUM["Selvagem_Grande",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6616"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4616"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-289,-124,60,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4617")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(CSRS)",DATUM["NAD83_Canadian_Spatial_Reference_System",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6140"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4617"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4618")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SAD69",DATUM["South_American_Datum_1969",SPHEROID["GRS 1967 Modified",6378160,298.25,AUTHORITY["EPSG","7050"]],AUTHORITY["EPSG","6618"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4618"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=aust_SA +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4619")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SWEREF99",DATUM["SWEREF99",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6619"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4619"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4620")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Point 58",DATUM["Point_58",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6620"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4620"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4621")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Fort Marigot",DATUM["Fort_Marigot",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6621"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4621"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=137,248,-430,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4622")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Guadeloupe 1948",DATUM["Guadeloupe_1948",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6622"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4622"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4623")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["CSG67",DATUM["Centre_Spatial_Guyanais_1967",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6623"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4623"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-186,230,110,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4624")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGFG95",DATUM["Reseau_Geodesique_Francais_Guyane_1995",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6624"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4624"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4625")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Martinique 1938",DATUM["Martinique_1938",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6625"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4625"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4626")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Reunion 1947",DATUM["Reunion_1947",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6626"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4626"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=94,-948,-1262,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4627")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGR92",DATUM["Reseau_Geodesique_de_la_Reunion_1992",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6627"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4627"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4628")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Tahiti 52",DATUM["Tahiti_52",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6628"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4628"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=162,117,154,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4629")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Tahaa 54",DATUM["Tahaa_54",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6629"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4629"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4630")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGN72 Nuku Hiva",DATUM["IGN72_Nuku_Hiva",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6630"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4630"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=84,274,65,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4631")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGN 1962 Kerguelen",DATUM["IGN_1962_Kerguelen",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6698"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4698"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=145,-187,103,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4632")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Combani 1950",DATUM["Combani_1950",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6632"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4632"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-382,-59,-262,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4633")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGN56 Lifou",DATUM["IGN56_Lifou",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6633"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4633"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=335.47,222.58,-230.94,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4634")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGN72 Grande Terre",DATUM["IGN72_Grande_Terre",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6634"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4662"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-11.64,-348.6,291.98,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4635")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ST87 Ouvea",DATUM["ST87_Ouvea",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6750"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4750"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=-56.263,16.136,-22.856,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4636")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Petrels 1972",DATUM["Petrels_1972",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6636"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4636"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=365,194,166,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4637")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Perroud 1950",DATUM["Pointe_Geologie_Perroud_1950",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6637"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4637"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=325,154,172,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4638")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Saint Pierre et Miquelon 1950",DATUM["Saint_Pierre_et_Miquelon_1950",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6638"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4638"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk66 +towgs84=11.363,424.148,373.13,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4639")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["MOP78",DATUM["MOP78",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6639"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4639"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=253,-132,-127,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4640")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RRAF 1991",DATUM["Reseau_de_Reference_des_Antilles_Francaises_1991",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1047"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4558"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4641")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGN53 Mare",DATUM["IGN53_Mare",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6641"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4641"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=287.58,177.78,-135.41,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4642")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ST84 Ile des Pins",DATUM["ST84_Ile_des_Pins",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6642"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4642"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-13,-348,292,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4643")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ST71 Belep",DATUM["ST71_Belep",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6643"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4643"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7002 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4644")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NEA74 Noumea",DATUM["NEA74_Noumea",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6644"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4644"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-10.18,-350.43,291.37,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4645")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGNC91-93",DATUM["Reseau_Geodesique_de_Nouvelle_Caledonie_91-93",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6749"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4749"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4646")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Grand Comoros",DATUM["Grand_Comoros",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6646"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4646"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-963,510,-359,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4657")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Reykjavik 1900",DATUM["Reykjavik_1900",SPHEROID["Danish 1876",6377019.27,300,AUTHORITY["EPSG","7051"]],AUTHORITY["EPSG","6657"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4657"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6377019.27 +rf=300 +towgs84=-28,199,5,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4658")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Hjorsey 1955",DATUM["Hjorsey_1955",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6658"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4658"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-73,47,-83,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4659")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ISN93",DATUM["Islands_Net_1993",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6659"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4659"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4660")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Helle 1954",DATUM["Helle_1954",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6660"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4660"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=982.6087,552.753,-540.873,6.68162662527694,-31.6114924086422,-19.8481610048168,16.805 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4661")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["LKS92",DATUM["Latvia_1992",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6661"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4661"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4662")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGN72 Grande Terre",DATUM["IGN72_Grande_Terre",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6634"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4662"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-11.64,-348.6,291.98,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4663")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Porto Santo 1995",DATUM["Porto_Santo_1995",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6663"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4663"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4664")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Azores Oriental 1995",DATUM["Azores_Oriental_Islands_1995",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6664"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4664"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4665")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Azores Central 1995",DATUM["Azores_Central_Islands_1995",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6665"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4665"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4666")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Lisbon 1890",DATUM["Lisbon_1890",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6666"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4666"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4667")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IKBD-92",DATUM["Iraq-Kuwait_Boundary_Datum_1992",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6667"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4667"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4668")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ED79",DATUM["European_Datum_1979",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6668"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4668"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-86,-98,-119,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4669")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["LKS94",DATUM["Lithuania_1994_ETRS89",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6126"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4669"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4670")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGM95",DATUM["Istituto_Geografico_Militaire_1995",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6670"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4670"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4671")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Voirol 1879",DATUM["Voirol_1879",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6671"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4671"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk80ign +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4672")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Chatham Islands 1971",DATUM["Chatham_Islands_Datum_1971",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6672"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4672"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=175,-38,113,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4673")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Chatham Islands 1979",DATUM["Chatham_Islands_Datum_1979",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6673"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4673"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=174.05,-25.49,112.57,0,0,0.554,0.2263 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4674")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS 2000",DATUM["Sistema_de_Referencia_Geocentrico_para_las_AmericaS_2000",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6674"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4674"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4675")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Guam 1963",DATUM["Guam_1963",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6675"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4675"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4676")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Vientiane 1982",DATUM["Vientiane_1982",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","6676"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4676"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=krass +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4677")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Lao 1993",DATUM["Lao_1993",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","6677"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4677"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=krass +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4678")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Lao 1997",DATUM["Lao_National_Datum_1997",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","6678"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4678"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=krass +towgs84=44.585,-131.212,-39.544,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4679")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Jouik 1961",DATUM["Jouik_1961",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6679"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4679"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-80.01,253.26,291.19,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4680")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Nouakchott 1965",DATUM["Nouakchott_1965",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6680"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4680"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4681")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Mauritania 1999 (deprecated)",DATUM["Mauritania_1999",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6702"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4681"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4682")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Gulshan 303",DATUM["Gulshan_303",SPHEROID["Everest 1830 (1937 Adjustment)",6377276.345,300.8017,AUTHORITY["EPSG","7015"]],AUTHORITY["EPSG","6682"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4682"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=evrst30 +towgs84=283.729,735.942,261.143,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4683")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["PRS92",DATUM["Philippine_Reference_System_1992",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6683"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4683"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk66 +towgs84=-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4684")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Gan 1970",DATUM["Gan_1970",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6684"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4684"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-133,-321,50,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4685")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Kasai 1953",DATUM["Kasai_1953",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6696"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4696"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4686")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["MAGNA-SIRGAS",DATUM["Marco_Geocentrico_Nacional_de_Referencia",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6686"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4686"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4687")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGPF",DATUM["Reseau_Geodesique_de_la_Polynesie_Francaise",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6687"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4687"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4688")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Fatu Iva 72",DATUM["Fatu_Iva_72",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6688"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4688"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=347.175,1077.618,2623.677,33.9058,-70.6776,9.4013,186.0647 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4689")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGN63 Hiva Oa",DATUM["IGN63_Hiva_Oa",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6689"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4689"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4690")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Tahiti 79",DATUM["Tahiti_79",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6690"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4690"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=221.597,152.441,176.523,2.403,1.3893,0.884,11.4648 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4691")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Moorea 87",DATUM["Moorea_87",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6691"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4691"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=218.769,150.75,176.75,3.5231,2.0037,1.288,10.9817 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4692")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Maupiti 83",DATUM["Maupiti_83",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6692"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4692"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=217.109,86.452,23.711,0.0183,-0.0003,0.007,-0.0093 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4693")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Nakhl-e Ghanem",DATUM["Nakhl-e_Ghanem",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6693"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4693"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4694")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["POSGAR 94",DATUM["Posiciones_Geodesicas_Argentinas_1994",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6694"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4694"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4695")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Katanga 1955",DATUM["Katanga_1955",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6695"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4695"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4696")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Kasai 1953",DATUM["Kasai_1953",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6696"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4696"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4697")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGC 1962 6th Parallel South",DATUM["IGC_1962_Arc_of_the_6th_Parallel_South",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6697"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4697"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4698")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGN 1962 Kerguelen",DATUM["IGN_1962_Kerguelen",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6698"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4698"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=145,-187,103,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4699")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Le Pouce 1934",DATUM["Le_Pouce_1934",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6699"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4699"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-770.1,158.4,-498.2,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4700")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGN Astro 1960",DATUM["IGN_Astro_1960",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6700"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4700"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4701")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGCB 1955",DATUM["Institut_Geographique_du_Congo_Belge_1955",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6701"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4701"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-79.9,-158,-168.9,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4702")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Mauritania 1999",DATUM["Mauritania_1999",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6702"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4702"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4703")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Mhast 1951",DATUM["Missao_Hidrografico_Angola_y_Sao_Tome_1951",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6703"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4703"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4704")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Mhast (onshore)",DATUM["Mhast_onshore",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6704"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4704"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4705")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Mhast (offshore)",DATUM["Mhast_offshore",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6705"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4705"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4706")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Egypt Gulf of Suez S-650 TL",DATUM["Egypt_Gulf_of_Suez_S-650_TL",SPHEROID["Helmert 1906",6378200,298.3,AUTHORITY["EPSG","7020"]],AUTHORITY["EPSG","6706"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4706"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=helmert +towgs84=-146.21,112.63,4.05,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4707")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Tern Island 1961",DATUM["Tern_Island_1961",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6707"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4707"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=114,-116,-333,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4708")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Cocos Islands 1965",DATUM["Cocos_Islands_1965",SPHEROID["Australian National Spheroid",6378160,298.25,AUTHORITY["EPSG","7003"]],AUTHORITY["EPSG","6708"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4708"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=aust_SA +towgs84=-491,-22,435,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4709")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Iwo Jima 1945",DATUM["Iwo_Jima_1945",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6709"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4709"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=145,75,-272,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4710")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Astro DOS 71",DATUM["Astro_DOS_71",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6710"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4710"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4711")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Marcus Island 1952",DATUM["Marcus_Island_1952",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6711"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4711"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=124,-234,-25,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4712")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Ascension Island 1958",DATUM["Ascension_Island_1958",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6712"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4712"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-205,107,53,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4713")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Ayabelle Lighthouse",DATUM["Ayabelle_Lighthouse",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6713"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4713"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4714")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Bellevue",DATUM["Bellevue",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6714"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4714"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-127,-769,472,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4715")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Camp Area Astro",DATUM["Camp_Area_Astro",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6715"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4715"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-104,-129,239,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4716")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Phoenix Islands 1966",DATUM["Phoenix_Islands_1966",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6716"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4716"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=298,-304,-375,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4717")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Cape Canaveral",DATUM["Cape_Canaveral",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6717"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4717"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk66 +towgs84=-2,151,181,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4718")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Solomon 1968",DATUM["Solomon_1968",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6718"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4718"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4719")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Easter Island 1967",DATUM["Easter_Island_1967",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6719"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4719"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=211,147,111,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4720")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Fiji 1986",DATUM["Fiji_Geodetic_Datum_1986",SPHEROID["WGS 72",6378135,298.26,AUTHORITY["EPSG","7043"]],AUTHORITY["EPSG","6720"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4720"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS72 +towgs84=0,0,4.5,0,0,0.554,0.2263 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4721")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Fiji 1956",DATUM["Fiji_1956",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6721"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4721"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=265.025,384.929,-194.046,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4722")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["South Georgia 1968",DATUM["South_Georgia_1968",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6722"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4722"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-794,119,-298,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4723")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["GCGD59",DATUM["Grand_Cayman_Geodetic_Datum_1959",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6723"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4723"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4724")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Diego Garcia 1969",DATUM["Diego_Garcia_1969",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6724"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4724"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=208,-435,-229,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4725")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Johnston Island 1961",DATUM["Johnston_Island_1961",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6725"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4725"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=189,-79,-202,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4726")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIGD61",DATUM["Sister_Islands_Geodetic_Datum_1961",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6726"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4726"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4727")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Midway 1961",DATUM["Midway_1961",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6727"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4727"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=403,-81,277,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4728")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["PN84",DATUM["Pico_de_las_Nieves_1984",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6728"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4728"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-307,-92,127,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4729")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Pitcairn 1967",DATUM["Pitcairn_1967",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6729"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4729"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=185,165,42,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4730")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Santo 1965",DATUM["Santo_1965",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6730"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4730"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=170,42,84,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4731")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Viti Levu 1912",DATUM["Viti_Levu_1912",SPHEROID["Clarke 1880 (international foot)",6378306.3696,293.466307655635,AUTHORITY["EPSG","7055"]],AUTHORITY["EPSG","6752"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4752"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378306.3696 +rf=293.466307655635 +towgs84=98,390,-22,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4732")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Marshall Islands 1960",DATUM["Marshall_Islands_1960",SPHEROID["Hough 1960",6378270,297,AUTHORITY["EPSG","7053"]],AUTHORITY["EPSG","6732"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4732"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=hough +towgs84=102,52,-38,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4733")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Wake Island 1952",DATUM["Wake_Island_1952",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6733"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4733"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=276,-57,149,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4734")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Tristan 1968",DATUM["Tristan_1968",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6734"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4734"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-632,438,-609,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4735")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Kusaie 1951",DATUM["Kusaie_1951",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6735"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4735"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=647,1777,-1124,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4736")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Deception Island",DATUM["Deception_Island",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6736"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4736"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=260,12,-147,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4737")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Korea 2000",DATUM["Geocentric_datum_of_Korea",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6737"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4737"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4738")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Hong Kong 1963",DATUM["Hong_Kong_1963",SPHEROID["Clarke 1858",6378293.64520876,294.260676369261,AUTHORITY["EPSG","7007"]],AUTHORITY["EPSG","6738"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4738"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378293.64520876 +rf=294.260676369261 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4739")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Hong Kong 1963(67)",DATUM["Hong_Kong_1963_67",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6739"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4739"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-156,-271,-189,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4740")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["PZ-90",DATUM["Parametry_Zemli_1990",SPHEROID["PZ-90",6378136,298.257839303,AUTHORITY["EPSG","7054"]],AUTHORITY["EPSG","6740"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4740"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378136 +rf=298.257839303 +towgs84=0,0,1.5,0,0,0.076,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4741")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["FD54",DATUM["Faroe_Datum_1954",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6741"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4741"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4742")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["GDM2000",DATUM["Geodetic_Datum_of_Malaysia_2000",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6742"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4742"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4743")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Karbala 1979",DATUM["Karbala_1979",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6743"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4743"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=70.995,-335.916,262.898,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4744")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Nahrwan 1934",DATUM["Nahrwan_1934",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6744"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4744"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4745")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RD/83",DATUM["Rauenberg_Datum_83",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6745"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4745"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4746")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["PD/83",DATUM["Potsdam_Datum_83",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6746"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4746"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4747")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["GR96",DATUM["Greenland_1996",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6747"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4747"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4748")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Vanua Levu 1915",DATUM["Vanua_Levu_1915",SPHEROID["Clarke 1880 (international foot)",6378306.3696,293.466307655635,AUTHORITY["EPSG","7055"]],AUTHORITY["EPSG","6748"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4748"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378306.3696 +rf=293.466307655635 +towgs84=51,391,-36,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4749")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGNC91-93",DATUM["Reseau_Geodesique_de_Nouvelle_Caledonie_91-93",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6749"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4749"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4750")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ST87 Ouvea",DATUM["ST87_Ouvea",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6750"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4750"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=-56.263,16.136,-22.856,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4751")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Kertau (RSO)",DATUM["Kertau_RSO",SPHEROID["Everest 1830 (RSO 1969)",6377295.664,300.8017,AUTHORITY["EPSG","7056"]],AUTHORITY["EPSG","6751"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4751"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=evrst69 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4752")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Viti Levu 1912",DATUM["Viti_Levu_1912",SPHEROID["Clarke 1880 (international foot)",6378306.3696,293.466307655635,AUTHORITY["EPSG","7055"]],AUTHORITY["EPSG","6752"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4752"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378306.3696 +rf=293.466307655635 +towgs84=98,390,-22,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4753")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["fk89",DATUM["fk89",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6753"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4753"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4754")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["LGD2006",DATUM["Libyan_Geodetic_Datum_2006",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6754"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4754"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4755")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["DGN95",DATUM["Datum_Geodesi_Nasional_1995",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6755"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4755"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4756")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["VN-2000",DATUM["Vietnam_2000",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6756"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4756"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=-191.90441429,-39.30318279,-111.45032835,0.00928836,-0.01975479,0.00427372,0.252906278 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4757")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SVY21",DATUM["SVY21",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6757"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4757"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4758")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["JAD2001",DATUM["Jamaica_2001",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6758"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4758"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4759")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(NSRS2007)",DATUM["NAD83_National_Spatial_Reference_System_2007",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6759"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4759"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4760")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["WGS 66",DATUM["World_Geodetic_System_1966",SPHEROID["NWL 9D",6378145,298.25,AUTHORITY["EPSG","7025"]],AUTHORITY["EPSG","6760"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4760"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=NWL9D +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4761")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["HTRS96",DATUM["Croatian_Terrestrial_Reference_System",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6761"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4761"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4762")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["BDA2000",DATUM["Bermuda_2000",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6762"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4762"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4763")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Pitcairn 2006",DATUM["Pitcairn_2006",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6763"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4763"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4764")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RSRGD2000",DATUM["Ross_Sea_Region_Geodetic_Datum_2000",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6764"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4764"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4765")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Slovenia 1996",DATUM["Slovenia_Geodetic_Datum_1996",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6765"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4765"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4801")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Bern 1898 (Bern)",DATUM["CH1903_Bern",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6801"]],PRIMEM["Bern",7.43958333333333,AUTHORITY["EPSG","8907"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4801"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +pm=bern +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4802")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Bogota 1975 (Bogota)",DATUM["Bogota_1975_Bogota",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6802"]],PRIMEM["Bogota",-74.0809166666667,AUTHORITY["EPSG","8904"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4802"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +pm=bogota +towgs84=307,304,-318,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4803")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Lisbon (Lisbon)",DATUM["Lisbon_1937_Lisbon",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6803"]],PRIMEM["Lisbon",-9.13190611111111,AUTHORITY["EPSG","8902"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4803"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +pm=lisbon +towgs84=-288.885,-91.744,126.244,-1.691,0.41,-0.211,-4.598 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4804")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Makassar (Jakarta)",DATUM["Makassar_Jakarta",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6804"]],PRIMEM["Jakarta",106.807719444444,AUTHORITY["EPSG","8908"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4804"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +pm=jakarta +towgs84=-587.8,519.75,145.76,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4805")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["MGI (Ferro)",DATUM["Militar-Geographische_Institut_Ferro",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6805"]],PRIMEM["Ferro",-17.6666666666667,AUTHORITY["EPSG","8909"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4805"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +pm=ferro +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4806")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Monte Mario (Rome)",DATUM["Monte_Mario_Rome",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6806"]],PRIMEM["Rome",12.4523333333333,AUTHORITY["EPSG","8906"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4806"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +pm=rome +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4807")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NTF (Paris)",DATUM["Nouvelle_Triangulation_Francaise_Paris",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6807"]],PRIMEM["Paris",2.33722916999999,AUTHORITY["EPSG","8903"]],UNIT["grad",0.0157079632679489,AUTHORITY["EPSG","9105"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4807"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk80ign +pm=paris +towgs84=-168,-60,320,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4808")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Batavia (Jakarta)",DATUM["Batavia_Jakarta",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6813"]],PRIMEM["Jakarta",106.807719444444,AUTHORITY["EPSG","8908"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4813"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +pm=jakarta +towgs84=-377,681,-50,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4809")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["BD50 (Brussels)",DATUM["Reseau_National_Belge_1950_Brussels",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6809"]],PRIMEM["Brussels",4.367975,AUTHORITY["EPSG","8910"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4809"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +pm=brussels +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4810")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Tananarive (Paris)",DATUM["Tananarive_1925_Paris",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","6810"]],PRIMEM["Paris",2.33722916999999,AUTHORITY["EPSG","8903"]],UNIT["grad",0.0157079632679489,AUTHORITY["EPSG","9105"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4810"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +pm=paris +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4811")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Voirol 1875 (Paris)",DATUM["Voirol_1875_Paris",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6811"]],PRIMEM["Paris",2.33722916999999,AUTHORITY["EPSG","8903"]],UNIT["grad",0.0157079632679489,AUTHORITY["EPSG","9105"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4811"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk80ign +pm=paris +towgs84=-73,-247,227,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4813")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Batavia (Jakarta)",DATUM["Batavia_Jakarta",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6813"]],PRIMEM["Jakarta",106.807719444444,AUTHORITY["EPSG","8908"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4813"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +pm=jakarta +towgs84=-377,681,-50,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4814")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RT38 (Stockholm)",DATUM["Stockholm_1938_Stockholm",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6814"]],PRIMEM["Stockholm",18.0582777777778,AUTHORITY["EPSG","8911"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4814"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +pm=stockholm +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4815")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Greek (Athens)",DATUM["Greek_Athens",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6815"]],PRIMEM["Athens",23.7163375,AUTHORITY["EPSG","8912"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4815"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +pm=athens +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4816")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Carthage (Paris)",DATUM["Carthage_Paris",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6816"]],PRIMEM["Paris",2.33722916999999,AUTHORITY["EPSG","8903"]],UNIT["grad",0.0157079632679489,AUTHORITY["EPSG","9105"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4816"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk80ign +pm=paris +towgs84=-263,6,431,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4817")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NGO 1948 (Oslo)",DATUM["NGO_1948_Oslo",SPHEROID["Bessel Modified",6377492.018,299.1528128,AUTHORITY["EPSG","7005"]],AUTHORITY["EPSG","6817"]],PRIMEM["Oslo",10.7229166666667,AUTHORITY["EPSG","8913"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4817"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6377492.018 +rf=299.1528128 +pm=oslo +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4818")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["S-JTSK (Ferro)",DATUM["System_of_the_Unified_Trigonometrical_Cadastral_Network_Ferro",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6818"]],PRIMEM["Ferro",-17.6666666666667,AUTHORITY["EPSG","8909"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4818"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +pm=ferro +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4819")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Nord Sahara 1959",DATUM["Nord_Sahara_1959",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6307"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4307"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4820")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Segara (Jakarta)",DATUM["Gunung_Segara_Jakarta",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6820"]],PRIMEM["Jakarta",106.807719444444,AUTHORITY["EPSG","8908"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4820"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +pm=jakarta +towgs84=-403,684,41,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4821")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Voirol 1879 (Paris)",DATUM["Voirol_1879_Paris",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6821"]],PRIMEM["Paris",2.33722916999999,AUTHORITY["EPSG","8903"]],UNIT["grad",0.0157079632679489,AUTHORITY["EPSG","9105"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4821"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk80ign +pm=paris +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4823")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Sao Tome",DATUM["Sao_Tome",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","1044"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4823"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4824")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Principe",DATUM["Principe",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","1046"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4824"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4883")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Slovenia 1996",DATUM["Slovenia Geodetic Datum 1996",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Slovenia - onshore and offshore."],BBOX[45.42,13.38,46.88,16.61]],ID["EPSG",4883]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4885")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RSRGD2000",DATUM["Ross Sea Region Geodetic Datum 2000",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Antarctica - Ross Sea Region - nominally between 160°E and 150°W but includes buffer on eastern hemisphere margin to include Transantarctic Mountains"],BBOX[-90,144.99,-59.99,-144.99]],ID["EPSG",4885]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4887")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["BDA2000",DATUM["Bermuda 2000",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Bermuda - onshore and offshore."],BBOX[28.91,-68.83,35.73,-60.7]],ID["EPSG",4887]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4889")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["HTRS96",DATUM["Croatian Terrestrial Reference System",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Croatia - onshore and offshore."],BBOX[41.62,13,46.54,19.43]],ID["EPSG",4889]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4891")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["WGS 66",DYNAMIC[FRAMEEPOCH[1966]],DATUM["World Geodetic System 1966",ELLIPSOID["NWL 9D",6378145,298.25,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",4891]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=NWL9D +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4893")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(NSRS2007)",DATUM["NAD83 (National Spatial Reference System 2007)",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Puerto Rico - onshore and offshore. United States (USA) onshore and offshore - Alabama; Alaska; Arizona; Arkansas; California; Colorado; Connecticut; Delaware; Florida; Georgia; Idaho; Illinois; Indiana; Iowa; Kansas; Kentucky; Louisiana; Maine; Maryland; Massachusetts; Michigan; Minnesota; Mississippi; Missouri; Montana; Nebraska; Nevada; New Hampshire; New Jersey; New Mexico; New York; North Carolina; North Dakota; Ohio; Oklahoma; Oregon; Pennsylvania; Rhode Island; South Carolina; South Dakota; Tennessee; Texas; Utah; Vermont; Virginia; Washington; West Virginia; Wisconsin; Wyoming. US Virgin Islands - onshore and offshore."],BBOX[14.92,167.65,74.71,-63.88]],ID["EPSG",4893]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4895")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["JAD2001",DATUM["Jamaica 2001",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Jamaica - onshore and offshore. Includes Morant Cays and Pedro Cays."],BBOX[14.08,-80.6,19.36,-74.51]],ID["EPSG",4895]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4898")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["DGN95",DATUM["Datum Geodesi Nasional 1995",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Indonesia - onshore and offshore."],BBOX[-13.95,92.01,7.79,141.46]],ID["EPSG",4898]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4900")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["LGD2006",DATUM["Libyan Geodetic Datum 2006",ELLIPSOID["International 1924",6378388,297,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Libya - onshore and offshore."],BBOX[19.5,9.31,35.23,26.21]],ID["EPSG",4900]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-208.4058,-109.8777,-2.5764,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4901")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ATF (Paris)",DATUM["Ancienne_Triangulation_Francaise_Paris",SPHEROID["Plessis 1817",6376523,308.64,AUTHORITY["EPSG","7027"]],AUTHORITY["EPSG","6901"]],PRIMEM["Paris RGS",2.33720833333333,AUTHORITY["EPSG","8914"]],UNIT["grad",0.0157079632679489,AUTHORITY["EPSG","9105"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4901"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6376523 +rf=308.64 +pm=2.33720833333333 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4902")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ATF (Paris)",DATUM["Ancienne_Triangulation_Francaise_Paris",SPHEROID["Plessis 1817",6376523,308.64,AUTHORITY["EPSG","7027"]],AUTHORITY["EPSG","6901"]],PRIMEM["Paris RGS",2.33720833333333,AUTHORITY["EPSG","8914"]],UNIT["grad",0.0157079632679489,AUTHORITY["EPSG","9105"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4901"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6376523 +rf=308.64 +pm=2.33720833333333 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4903")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Madrid 1870 (Madrid)",DATUM["Madrid_1870_Madrid",SPHEROID["Struve 1860",6378298.3,294.73,AUTHORITY["EPSG","7028"]],AUTHORITY["EPSG","6903"]],PRIMEM["Madrid",-3.687375,AUTHORITY["EPSG","8905"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4903"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378298.3 +rf=294.73 +pm=-3.687375 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4904")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Lisbon 1890 (Lisbon)",DATUM["Lisbon_1890_Lisbon",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6904"]],PRIMEM["Lisbon",-9.13190611111111,AUTHORITY["EPSG","8902"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4904"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +pm=lisbon +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4907")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGNC91-93",DATUM["Reseau Geodesique de Nouvelle Caledonie 91-93",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["New Caledonia - onshore and offshore. Isle de Pins, Loyalty Islands, Huon Islands, Belep archipelago, Chesterfield Islands, and Walpole."],BBOX[-26.45,156.25,-14.83,174.28]],ID["EPSG",4907]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4909")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["GR96",DATUM["Greenland 1996",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Greenland - onshore and offshore."],BBOX[56.38,-75,87.03,7.99]],ID["EPSG",4909]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4921")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["GDM2000",DATUM["Geodetic Datum of Malaysia 2000",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Malaysia - onshore and offshore. Includes peninsular Malayasia, Sabah and Sarawak."],BBOX[0.85,98.02,7.81,119.61]],ID["EPSG",4921]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4923")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["PZ-90",DYNAMIC[FRAMEEPOCH[1990]],DATUM["Parametry Zemli 1990",ELLIPSOID["PZ-90",6378136,298.257839303,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy. Navigation and positioning using Glonass satellite system."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",4923]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378136 +rf=298.257839303 +towgs84=0,0,1.5,0,0,0.076,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4925")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Mauritania 1999",DATUM["Mauritania 1999",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Mauritania - onshore and offshore."],BBOX[14.72,-20.04,27.3,-4.8]],ID["EPSG",4925]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4927")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Korea 2000",DATUM["Geocentric datum of Korea",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Republic of Korea (South Korea) - onshore and offshore."],BBOX[28.6,122.71,40.27,134.28]],ID["EPSG",4927]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4929")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["POSGAR 94",DATUM["Posiciones Geodesicas Argentinas 1994",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Argentina - onshore and offshore."],BBOX[-58.41,-73.59,-21.78,-52.63]],ID["EPSG",4929]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4931")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Australian Antarctic",DATUM["Australian Antarctic Datum 1998",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Antarctica between 45°E and 136°E and between 142°E and 160°E - Australian sector."],BBOX[-90,45,-60,160]],ID["EPSG",4931]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4933")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["CHTRF95",DATUM["Swiss Terrestrial Reference Frame 1995",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Liechtenstein; Switzerland."],BBOX[45.82,5.96,47.81,10.49]],ID["EPSG",4933]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4935")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["EST97",DATUM["Estonia 1997",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Estonia - onshore and offshore."],BBOX[57.52,20.37,60,28.2]],ID["EPSG",4935]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4937")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ETRS89",ENSEMBLE["European Terrestrial Reference System 1989 ensemble",MEMBER["European Terrestrial Reference Frame 1989"],MEMBER["European Terrestrial Reference Frame 1990"],MEMBER["European Terrestrial Reference Frame 1991"],MEMBER["European Terrestrial Reference Frame 1992"],MEMBER["European Terrestrial Reference Frame 1993"],MEMBER["European Terrestrial Reference Frame 1994"],MEMBER["European Terrestrial Reference Frame 1996"],MEMBER["European Terrestrial Reference Frame 1997"],MEMBER["European Terrestrial Reference Frame 2000"],MEMBER["European Terrestrial Reference Frame 2005"],MEMBER["European Terrestrial Reference Frame 2014"],ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]],ENSEMBLEACCURACY[0.1]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Spatial referencing."],AREA["Europe - onshore and offshore: Albania; Andorra; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Hungary; Ireland; Italy; Kosovo; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway including Svalbard and Jan Mayen; Poland; Portugal; Romania; San Marino; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; United Kingdom (UK) including Channel Islands and Isle of Man; Vatican City State."],BBOX[32.88,-16.1,84.73,40.18]],ID["EPSG",4937]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4939")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["GDA94",DATUM["Geocentric Datum of Australia 1994",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Australia including Lord Howe Island, Macquarie Island, Ashmore and Cartier Islands, Christmas Island, Cocos (Keeling) Islands, Norfolk Island. All onshore and offshore."],BBOX[-60.55,93.41,-8.47,173.34]],ID["EPSG",4939]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4941")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Hartebeesthoek94",DATUM["Hartebeesthoek94",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Eswatini (Swaziland); Lesotho; South Africa - onshore and offshore."],BBOX[-50.32,13.33,-22.13,42.85]],ID["EPSG",4941]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4943")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IRENET95",DATUM["IRENET95",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Ireland - onshore. United Kingdom (UK) - Northern Ireland (Ulster) - onshore."],BBOX[51.39,-10.56,55.43,-5.34]],ID["EPSG",4943]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4945")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ISN93",DATUM["Islands Net 1993",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Iceland - onshore and offshore."],BBOX[59.96,-30.87,69.59,-5.55]],ID["EPSG",4945]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4947")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["JGD2000",DATUM["Japanese Geodetic Datum 2000",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Japan - onshore and offshore."],BBOX[17.09,122.38,46.05,157.65]],ID["EPSG",4947]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4949")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["LKS92",DATUM["Latvia 1992",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latvia - onshore and offshore."],BBOX[55.67,19.06,58.09,28.24]],ID["EPSG",4949]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4951")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["LKS94",DATUM["Lithuania 1994 (ETRS89)",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Lithuania - onshore and offshore."],BBOX[53.89,19.02,56.45,26.82]],ID["EPSG",4951]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4953")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Moznet",DATUM["Moznet (ITRF94)",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Mozambique - onshore and offshore."],BBOX[-27.71,30.21,-10.09,43.03]],ID["EPSG",4953]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4955")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(CSRS)",DATUM["NAD83 Canadian Spatial Reference System",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Canada - onshore and offshore - Alberta; British Columbia; Manitoba; New Brunswick; Newfoundland and Labrador; Northwest Territories; Nova Scotia; Nunavut; Ontario; Prince Edward Island; Quebec; Saskatchewan; Yukon."],BBOX[38.21,-141.01,86.46,-40.73]],ID["EPSG",4955]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4957")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(HARN)",DATUM["NAD83 (High Accuracy Reference Network)",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["American Samoa - onshore - Tutuila, Aunu\'u, Ofu, Olesega, Ta\'u and Rose islands. Guam - onshore. Northern Mariana Islands - onshore. Puerto Rico - onshore. United States (USA) - onshore Alabama, Alaska, Arizona, Arkansas, California, Colorado, Connecticut, Delaware, Florida, Georgia, Hawaii, Idaho, Illinois, Indiana, Iowa, Kansas, Kentucky, Louisiana, Maine, Maryland, Massachusetts, Michigan, Minnesota, Mississippi, Missouri, Montana, Nebraska, Nevada, New Hampshire, New Jersey, New Mexico, New York, North Carolina, North Dakota, Ohio, Oklahoma, Oregon, Pennsylvania, Rhode Island, South Carolina, South Dakota, Tennessee, Texas, Utah, Vermont, Virginia, Washington, West Virginia, Wisconsin and Wyoming; offshore Gulf of Mexico continental shelf (GoM OCS). US Virgin Islands - onshore."],BBOX[-14.59,144.58,71.4,-64.51]],ID["EPSG",4957]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4959")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NZGD2000",DATUM["New Zealand Geodetic Datum 2000",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["New Zealand - onshore and offshore. Includes Antipodes Islands, Auckland Islands, Bounty Islands, Chatham Islands, Cambell Island, Kermadec Islands, Raoul Island and Snares Islands."],BBOX[-55.95,160.6,-25.88,-171.2]],ID["EPSG",4959]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4961")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["POSGAR 98",DATUM["Posiciones Geodesicas Argentinas 1998",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Argentina - onshore and offshore."],BBOX[-58.41,-73.59,-21.78,-52.63]],ID["EPSG",4961]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4963")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["REGVEN",DATUM["Red Geodesica Venezolana",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Venezuela - onshore and offshore."],BBOX[0.64,-73.38,16.75,-58.95]],ID["EPSG",4963]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4965")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGF93",DATUM["Reseau Geodesique Francais 1993",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy; air, land and sea navigation and safety of life purposes."],AREA["France - onshore and offshore, mainland and Corsica."],BBOX[41.15,-9.86,51.56,10.38]],ID["EPSG",4965]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4967")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGFG95",DATUM["Reseau Geodesique Francais Guyane 1995",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy; air, land and sea navigation and safety of life purposes."],AREA["French Guiana - onshore and offshore."],BBOX[2.11,-54.61,8.88,-49.45]],ID["EPSG",4967]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4969")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGNC91-93",DATUM["Reseau Geodesique de Nouvelle Caledonie 91-93",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["New Caledonia - onshore and offshore. Isle de Pins, Loyalty Islands, Huon Islands, Belep archipelago, Chesterfield Islands, and Walpole."],BBOX[-26.45,156.25,-14.83,174.28]],ID["EPSG",4907]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4971")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGR92",DATUM["Reseau Geodesique de la Reunion 1992",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy; air, land and sea navigation and safety of life purposes."],AREA["Reunion - onshore and offshore."],BBOX[-24.72,51.83,-18.28,58.24]],ID["EPSG",4971]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4973")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RRAF 1991",DATUM["Reseau de Reference des Antilles Francaises 1991",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["French Antilles onshore and offshore - Guadeloupe (including Grande Terre, Basse Terre, Marie Galante, Les Saintes, Iles de la Petite Terre, La Desirade, St Barthélemy, and northern St Martin) and Martinique."],BBOX[14.08,-63.66,18.54,-57.52]],ID["EPSG",4557]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4975")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS 1995",DATUM["Sistema de Referencia Geocentrico para America del Sur 1995",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["South America - onshore and offshore. Ecuador (mainland and Galapagos) - onshore and offshore."],BBOX[-59.87,-113.21,16.75,-26]],ID["EPSG",4975]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4977")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SWEREF99",DATUM["SWEREF99",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Sweden - onshore and offshore."],BBOX[54.96,10.03,69.07,24.17]],ID["EPSG",4977]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4979")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["WGS 84",ENSEMBLE["World Geodetic System 1984 ensemble",MEMBER["World Geodetic System 1984 (Transit)"],MEMBER["World Geodetic System 1984 (G730)"],MEMBER["World Geodetic System 1984 (G873)"],MEMBER["World Geodetic System 1984 (G1150)"],MEMBER["World Geodetic System 1984 (G1674)"],MEMBER["World Geodetic System 1984 (G1762)"],ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]],ENSEMBLEACCURACY[2.0]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy. Navigation and positioning using GPS satellite system."],AREA["World: Afghanistan, Albania, Algeria, American Samoa, Andorra, Angola, Anguilla, Antarctica, Antigua and Barbuda, Argentina, Armenia, Aruba, Australia, Austria, Azerbaijan, Bahamas, Bahrain, Bangladesh, Barbados, Belgium, Belgium, Belize, Benin, Bermuda, Bhutan, Bolivia, Bonaire, Saint Eustasius and Saba, Bosnia and Herzegovina, Botswana, Bouvet Island, Brazil, British Indian Ocean Territory, British Virgin Islands, Brunei Darussalam, Bulgaria, Burkina Faso, Burundi, Cambodia, Cameroon, Canada, Cape Verde, Cayman Islands, Central African Republic, Chad, Chile, China, Christmas Island, Cocos (Keeling) Islands, Comoros, Congo, Cook Islands, Costa Rica, Côte d\'Ivoire (Ivory Coast), Croatia, Cuba, Curacao, Cyprus, Czechia, Denmark, Djibouti, Dominica, Dominican Republic, East Timor, Ecuador, Egypt, El Salvador, Equatorial Guinea, Eritrea, Estonia, Eswatini (Swaziland), Ethiopia, Falkland Islands (Malvinas), Faroe Islands, Fiji, Finland, France, French Guiana, French Polynesia, French Southern Territories, Gabon, Gambia, Georgia, Germany, Ghana, Gibraltar, Greece, Greenland, Grenada, Guadeloupe, Guam, Guatemala, Guinea, Guinea-Bissau, Guyana, Haiti, Heard Island and McDonald Islands, Holy See (Vatican City State), Honduras, China - Hong Kong, Hungary, Iceland, India, Indonesia, Islamic Republic of Iran, Iraq, Ireland, Israel, Italy, Jamaica, Japan, Jordan, Kazakhstan, Kenya, Kiribati, Democratic People\'s Republic of Korea (North Korea), Republic of Korea (South Korea), Kosovo, Kuwait, Kyrgyzstan, Lao People\'s Democratic Republic (Laos), Latvia, Lebanon, Lesotho, Liberia, Libyan Arab Jamahiriya, Liechtenstein, Lithuania, Luxembourg, China - Macao, Madagascar, Malawi, Malaysia, Maldives, Mali, Malta, Marshall Islands, Martinique, Mauritania, Mauritius, Mayotte, Mexico, Federated States of Micronesia, Monaco, Mongolia, Montenegro, Montserrat, Morocco, Mozambique, Myanmar (Burma), Namibia, Nauru, Nepal, Netherlands, New Caledonia, New Zealand, Nicaragua, Niger, Nigeria, Niue, Norfolk Island, North Macedonia, Northern Mariana Islands, Norway, Oman, Pakistan, Palau, Panama, Papua New Guinea (PNG), Paraguay, Peru, Philippines, Pitcairn, Poland, Portugal, Puerto Rico, Qatar, Reunion, Romania, Russian Federation, Rwanda, Saint Kitts and Nevis, Saint Helena, Ascension and Tristan da Cunha, Saint Lucia, Saint Pierre and Miquelon, Saint Vincent and the Grenadines, Samoa, San Marino, Sao Tome and Principe, Saudi Arabia, Senegal, Serbia, Seychelles, Sierra Leone, Singapore, Slovakia (Slovak Republic), Slovenia, Sint Maarten, Solomon Islands, Somalia, South Africa, South Georgia and the South Sandwich Islands, South Sudan, Spain, Sri Lanka, Sudan, Suriname, Svalbard and Jan Mayen, Sweden, Switzerland, Syrian Arab Republic, Taiwan, Tajikistan, United Republic of Tanzania, Thailand, The Democratic Republic of the Congo (Zaire), Togo, Tokelau, Tonga, Trinidad and Tobago, Tunisia, Turkey, Turkmenistan, Turks and Caicos Islands, Tuvalu, Uganda, Ukraine, United Arab Emirates (UAE), United Kingdom (UK), United States (USA), United States Minor Outlying Islands, Uruguay, Uzbekistan, Vanuatu, Venezuela, Vietnam, US Virgin Islands, Wallis and Futuna, Western Sahara, Yemen, Zambia, Zimbabwe."],BBOX[-90,-180,90,180]],ID["EPSG",4979]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +datum=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4981")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Yemen NGN96",DATUM["Yemen National Geodetic Network 1996",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Yemen - onshore and offshore."],BBOX[8.95,41.08,19,57.96]],ID["EPSG",4981]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4983")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IGM95",DATUM["Istituto Geografico Militaire 1995",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Italy - onshore and offshore; San Marino, Vatican City State."],BBOX[34.76,5.93,47.1,18.99]],ID["EPSG",4983]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4985")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["WGS 72",DYNAMIC[FRAMEEPOCH[1972]],DATUM["World Geodetic System 1972",ELLIPSOID["WGS 72",6378135,298.26,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",4985]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS72 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4987")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["WGS 72BE",DYNAMIC[FRAMEEPOCH[1972]],DATUM["WGS 72 Transit Broadcast Ephemeris",ELLIPSOID["WGS 72",6378135,298.26,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",4987]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS72 +towgs84=0,0,1.9,0,0,0.814,-0.38 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4989")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS 2000",DATUM["Sistema de Referencia Geocentrico para las AmericaS 2000",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America - onshore and offshore. Brazil - onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",4989]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4991")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Lao 1993",DATUM["Lao 1993",ELLIPSOID["Krassowsky 1940",6378245,298.3,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Laos."],BBOX[13.92,100.09,22.5,107.64]],ID["EPSG",4991]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=krass +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4993")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Lao 1997",DATUM["Lao National Datum 1997",ELLIPSOID["Krassowsky 1940",6378245,298.3,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Laos."],BBOX[13.92,100.09,22.5,107.64]],ID["EPSG",4993]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=krass +towgs84=44.585,-131.212,-39.544,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4995")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["PRS92",DATUM["Philippine Reference System 1992",ELLIPSOID["Clarke 1866",6378206.4,294.978698213898,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Philippines - onshore and offshore."],BBOX[3,116.04,22.18,129.95]],ID["EPSG",4995]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk66 +towgs84=-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4997")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["MAGNA-SIRGAS",DATUM["Marco Geocentrico Nacional de Referencia",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Colombia - onshore and offshore. Includes San Andres y Providencia, Malpelo Islands, Roncador Bank, Serrana Bank and Serranilla Bank."],BBOX[-4.23,-84.77,15.51,-66.87]],ID["EPSG",4997]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("4999")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGPF",DATUM["Reseau Geodesique de la Polynesie Francaise",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["French Polynesia - onshore and offshore. Includes Society archipelago, Tuamotu archipelago, Marquesas Islands, Gambier Islands and Austral Islands."],BBOX[-31.24,-158.13,-4.52,-131.97]],ID["EPSG",4999]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5012")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["PTRA08",DATUM["Autonomous Regions of Portugal 2008",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Portugal - Azores and Madeira island groups and surrounding EEZ - Flores, Corvo; Graciosa, Terceira, Sao Jorge, Pico, Faial; Sao Miguel, Santa Maria; Madeira, Porto Santo, Desertas; Selvagens."],BBOX[29.24,-35.58,43.07,-12.48]],ID["EPSG",5012]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5013")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["PTRA08",DATUM["Autonomous_Regions_of_Portugal_2008",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1041"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5013"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5132")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Tokyo 1892",DATUM["Tokyo_1892",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","1048"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5132"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5228")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["S-JTSK/05",DATUM["System_of_the_Unified_Trigonometrical_Cadastral_Network_05",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","1052"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5228"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5229")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["S-JTSK/05 (Ferro)",DATUM["System_of_the_Unified_Trigonometrical_Cadastral_Network_05_Ferro",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","1055"]],PRIMEM["Ferro",-17.6666666666667,AUTHORITY["EPSG","8909"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5229"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +pm=ferro +towgs84=572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5233")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SLD99",DATUM["Sri_Lanka_Datum_1999",SPHEROID["Everest 1830 (1937 Adjustment)",6377276.345,300.8017,AUTHORITY["EPSG","7015"]],AUTHORITY["EPSG","1053"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5233"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=evrst30 +towgs84=-0.293,766.95,87.713,0.195704,1.695068,3.473016,-0.039338 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5245")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["GDBD2009",DATUM["Geocentric Datum Brunei Darussalam 2009",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Brunei Darussalam - onshore and offshore."],BBOX[4.01,112.37,6.31,115.37]],ID["EPSG",5245]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5246")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["GDBD2009",DATUM["Geocentric_Datum_Brunei_Darussalam_2009",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1056"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5246"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5251")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["TUREF",DATUM["Turkish National Reference Frame",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Turkey - onshore and offshore."],BBOX[34.42,25.62,43.45,44.83]],ID["EPSG",5251]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5252")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["TUREF",DATUM["Turkish_National_Reference_Frame",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1057"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5252"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5263")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["DRUKREF 03",DATUM["Bhutan National Geodetic Datum",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Bhutan."],BBOX[26.7,88.74,28.33,92.13]],ID["EPSG",5263]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5264")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["DRUKREF 03",DATUM["Bhutan_National_Geodetic_Datum",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1058"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5264"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5323")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ISN2004",DATUM["Islands Net 2004",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Iceland - onshore and offshore."],BBOX[59.96,-30.87,69.59,-5.55]],ID["EPSG",5323]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5324")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ISN2004",DATUM["Islands_Net_2004",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1060"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5324"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5340")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["POSGAR 2007",DATUM["Posiciones_Geodesicas_Argentinas_2007",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1062"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5340"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5342")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["POSGAR 2007",DATUM["Posiciones Geodesicas Argentinas 2007",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Argentina - onshore and offshore."],BBOX[-58.41,-73.59,-21.78,-52.63]],ID["EPSG",5342]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5353")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["MARGEN",DATUM["Marco Geodesico Nacional de Bolivia",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Bolivia."],BBOX[-22.91,-69.66,-9.67,-57.52]],ID["EPSG",5353]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5354")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["MARGEN",DATUM["Marco_Geodesico_Nacional_de_Bolivia",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1063"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5354"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5359")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-Chile 2002",DATUM["SIRGAS-Chile realization 1 epoch 2002",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Chile - onshore and offshore. Includes Easter Island, Juan Fernandez Islands, San Felix, and Sala y Gomez."],BBOX[-59.87,-113.21,-17.5,-65.72]],ID["EPSG",5359]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5360")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-Chile 2002",DATUM["SIRGAS-Chile_realization_1_epoch_2002",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1064"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5360"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5364")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["CR05",DATUM["Costa Rica 2005",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Costa Rica - onshore and offshore."],BBOX[2.15,-90.45,11.77,-81.43]],ID["EPSG",5364]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5365")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["CR05",DATUM["Costa_Rica_2005",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1065"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5365"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5370")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["MACARIO SOLIS",DATUM["Sistema Geodesico Nacional de Panama MACARIO SOLIS",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Panama - onshore and offshore."],BBOX[5,-84.32,12.51,-77.04]],ID["EPSG",5370]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5371")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["MACARIO SOLIS",DATUM["Sistema_Geodesico_Nacional_de_Panama_MACARIO_SOLIS",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1066"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5371"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5372")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Peru96",DATUM["Peru96",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Peru - onshore and offshore."],BBOX[-21.05,-84.68,-0.03,-68.67]],ID["EPSG",5372]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5373")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Peru96",DATUM["Peru96",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1067"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5373"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5380")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-ROU98",DATUM["SIRGAS-ROU98",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Uruguay - onshore and offshore."],BBOX[-37.77,-58.49,-30.09,-50.01]],ID["EPSG",5380]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5381")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-ROU98",DATUM["SIRGAS-ROU98",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1068"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5381"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5392")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS_ES2007.8",DATUM["SIRGAS_ES2007.8",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["El Salvador - onshore and offshore."],BBOX[9.97,-91.43,14.44,-87.65]],ID["EPSG",5392]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5393")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS_ES2007.8",DATUM["SIRGAS_ES2007_8",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1069"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5393"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5451")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Ocotepeque 1935",DATUM["Ocotepeque_1935",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","1070"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5451"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk66 +towgs84=205,96,-98,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5464")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Sibun Gorge 1922",DATUM["Sibun_Gorge_1922",SPHEROID["Clarke 1858",6378293.64520876,294.260676369261,AUTHORITY["EPSG","7007"]],AUTHORITY["EPSG","1071"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5464"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378293.64520876 +rf=294.260676369261 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5467")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Panama-Colon 1911",DATUM["Panama-Colon_1911",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","1072"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5467"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=clrk66 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5488")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGAF09",DATUM["Reseau Geodesique des Antilles Francaises 2009",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy; air, land and sea navigation and safety of life purposes."],AREA["French Antilles onshore and offshore - Guadeloupe (including Grande Terre, Basse Terre, Marie Galante, Les Saintes, Iles de la Petite Terre, La Desirade, St Barthélemy, and northern St Martin) and Martinique."],BBOX[14.08,-63.66,18.54,-57.52]],ID["EPSG",5488]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5489")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGAF09",DATUM["Reseau_Geodesique_des_Antilles_Francaises_2009",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1073"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5489"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5498")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83",DATUM["North_American_Datum_1983",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6269"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4269"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +datum=NAD83 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5499")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(HARN)",DATUM["NAD83_High_Accuracy_Reference_Network",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6152"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4152"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5500")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(NSRS2007)",DATUM["NAD83_National_Spatial_Reference_System_2007",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6759"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4759"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5524")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Corrego Alegre 1961",DATUM["Corrego_Alegre_1961",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","1074"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5524"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5527")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SAD69(96)",DATUM["South_American_Datum_1969_96",SPHEROID["GRS 1967 Modified",6378160,298.25,AUTHORITY["EPSG","7050"]],AUTHORITY["EPSG","1075"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5527"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=aust_SA +towgs84=-67.35,3.88,-38.22,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5545")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["PNG94",DATUM["Papua New Guinea Geodetic Datum 1994",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Papua New Guinea - onshore and offshore. Includes Bismark archipelago, Louisade archipelago, Admiralty Islands, d\'Entrecasteaux Islands, northern Solomon Islands, Trobriand Islands, New Britain, New Ireland, Woodlark, and associated islands."],BBOX[-14.75,139.2,2.58,162.81]],ID["EPSG",5545]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5546")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["PNG94",DATUM["Papua_New_Guinea_Geodetic_Datum_1994",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1076"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5546"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5560")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["UCS-2000",DATUM["Ukraine 2000",ELLIPSOID["Krassowsky 1940",6378245,298.3,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Ukraine - onshore and offshore."],BBOX[43.18,22.15,52.38,40.18]],ID["EPSG",5560]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=krass +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5561")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["UCS-2000",DATUM["Ukraine_2000",SPHEROID["Krassowsky 1940",6378245,298.3,AUTHORITY["EPSG","7024"]],AUTHORITY["EPSG","1077"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5561"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=krass +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5592")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["FEH2010",DATUM["Fehmarnbelt Datum 2010",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Engineering survey and construction for Fehmarnbelt tunnel."],AREA["Fehmarnbelt area of Denmark and Germany."],BBOX[54.33,10.66,54.83,12.01]],ID["EPSG",5592]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5593")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["FEH2010",DATUM["Fehmarnbelt_Datum_2010",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1078"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5593"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5628")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SWEREF99",DATUM["SWEREF99",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6619"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4619"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5681")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["DB_REF",DATUM["Deutsche_Bahn_Reference_System",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","1081"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5681"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5830")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["DB_REF",DATUM["Deutsche Bahn Reference System",ELLIPSOID["Bessel 1841",6377397.155,299.1528128,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Germany - onshore - states of Baden-Wurtemberg, Bayern, Berlin, Brandenburg, Bremen, Hamburg, Hessen, Mecklenburg-Vorpommern, Niedersachsen, Nordrhein-Westfalen, Rheinland-Pfalz, Saarland, Sachsen, Sachsen-Anhalt, Schleswig-Holstein, Thuringen."],BBOX[47.27,5.86,55.09,15.04]],ID["EPSG",5830]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=bessel +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5885")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["TGD2005",DATUM["Tonga Geodetic Datum 2005",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Tonga - onshore and offshore."],BBOX[-25.68,-179.08,-14.14,-171.28]],ID["EPSG",5885]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5886")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["TGD2005",DATUM["Tonga_Geodetic_Datum_2005",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1095"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5886"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("5942")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6134")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["CIGD11",DATUM["Cayman Islands Geodetic Datum 2011",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Cayman Islands - onshore and offshore. Includes Grand Cayman, Little Cayman and Cayman Brac."],BBOX[17.58,-83.6,20.68,-78.72]],ID["EPSG",6134]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6135")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["CIGD11",DATUM["Cayman_Islands_Geodetic_Datum_2011",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1100"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6135"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6144")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6207")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Nepal 1981",DATUM["Nepal_1981",SPHEROID["Everest 1830 (1937 Adjustment)",6377276.345,300.8017,AUTHORITY["EPSG","7015"]],AUTHORITY["EPSG","1111"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6207"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=evrst30 +towgs84=293.17,726.18,245.36,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6310")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["CGRS93",DATUM["Cyprus Geodetic Reference System 1993",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Cyprus - onshore."],BBOX[34.59,32.2,35.74,34.65]],ID["EPSG",6310]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6311")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["CGRS93",DATUM["Cyprus_Geodetic_Reference_System_1993",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1112"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6311"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6318")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(2011)",DATUM["NAD83_National_Spatial_Reference_System_2011",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1116"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6318"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6319")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(2011)",DATUM["NAD83 (National Spatial Reference System 2011)",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Puerto Rico - onshore and offshore. United States (USA) onshore and offshore - Alabama; Alaska; Arizona; Arkansas; California; Colorado; Connecticut; Delaware; Florida; Georgia; Idaho; Illinois; Indiana; Iowa; Kansas; Kentucky; Louisiana; Maine; Maryland; Massachusetts; Michigan; Minnesota; Mississippi; Missouri; Montana; Nebraska; Nevada; New Hampshire; New Jersey; New Mexico; New York; North Carolina; North Dakota; Ohio; Oklahoma; Oregon; Pennsylvania; Rhode Island; South Carolina; South Dakota; Tennessee; Texas; Utah; Vermont; Virginia; Washington; West Virginia; Wisconsin; Wyoming. US Virgin Islands - onshore and offshore."],BBOX[14.92,167.65,74.71,-63.88]],ID["EPSG",6319]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6321")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(PA11)",DATUM["NAD83 (National Spatial Reference System PA11)",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["American Samoa, Marshall Islands, United States (USA) - Hawaii, United States minor outlying islands; onshore and offshore."],BBOX[-17.56,157.47,31.8,-151.27]],ID["EPSG",6321]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6322")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(PA11)",DATUM["NAD83_National_Spatial_Reference_System_PA11",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1117"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6322"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6324")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(MA11)",DATUM["NAD83 (National Spatial Reference System MA11)",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Guam, Northern Mariana Islands and Palau; onshore and offshore."],BBOX[1.64,129.48,23.9,149.55]],ID["EPSG",6324]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6325")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(MA11)",DATUM["NAD83_National_Spatial_Reference_System_MA11",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1118"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6325"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6349")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(2011)",DATUM["NAD83_National_Spatial_Reference_System_2011",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1116"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6318"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6364")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Mexico ITRF2008",DATUM["Mexico ITRF2008",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Mexico - onshore and offshore."],BBOX[12.1,-122.19,32.72,-84.64]],ID["EPSG",6364]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6365")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Mexico ITRF2008",DATUM["Mexico_ITRF2008",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1120"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6365"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6649")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(CSRS)",DATUM["NAD83_Canadian_Spatial_Reference_System",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6140"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4617"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6667")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["JGD2011",DATUM["Japanese Geodetic Datum 2011",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Japan - onshore and offshore."],BBOX[17.09,122.38,46.05,157.65]],ID["EPSG",6667]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6668")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["JGD2011",DATUM["Japanese_Geodetic_Datum_2011",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1128"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6668"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6696")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["JGD2000",DATUM["Japanese_Geodetic_Datum_2000",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6612"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4612"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6697")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["JGD2011",DATUM["Japanese_Geodetic_Datum_2011",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1128"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6668"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6700")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Tokyo",DATUM["Tokyo",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6301"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4301"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6705")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RDN2008",DATUM["Rete Dinamica Nazionale 2008",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Italy - onshore and offshore; San Marino, Vatican City State."],BBOX[34.76,5.93,47.1,18.99]],ID["EPSG",6705]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6706")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RDN2008",DATUM["Rete_Dinamica_Nazionale_2008",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1132"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6706"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6782")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(CORS96)",DATUM["NAD83 (Continuously Operating Reference Station 1996)",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Puerto Rico - onshore and offshore. United States (USA) onshore and offshore - Alabama; Alaska; Arizona; Arkansas; California; Colorado; Connecticut; Delaware; Florida; Georgia; Idaho; Illinois; Indiana; Iowa; Kansas; Kentucky; Louisiana; Maine; Maryland; Massachusetts; Michigan; Minnesota; Mississippi; Missouri; Montana; Nebraska; Nevada; New Hampshire; New Jersey; New Mexico; New York; North Carolina; North Dakota; Ohio; Oklahoma; Oregon; Pennsylvania; Rhode Island; South Carolina; South Dakota; Tennessee; Texas; Utah; Vermont; Virginia; Washington; West Virginia; Wisconsin; Wyoming. US Virgin Islands - onshore and offshore."],BBOX[14.92,167.65,74.71,-63.88]],ID["EPSG",6782]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6783")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(CORS96)",DATUM["NAD83_Continuously_Operating_Reference_Station_1996",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1133"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6783"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6881")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Aden 1925",DATUM["Aden_1925",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","1135"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6881"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-24,-203,268,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6882")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Bekaa Valley 1920",DATUM["Bekaa_Valley_1920",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","1137"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6882"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-183,-15,273,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6883")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Bioko",DATUM["Bioko",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","1136"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6883"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-235,-110,393,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6892")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["South East Island 1943",DATUM["South_East_Island_1943",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","1138"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6892"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378249.145 +rf=293.465 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6894")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Gambia",DATUM["Gambia",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","1139"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6894"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-63,176,185,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6917")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SVY21",DATUM["SVY21",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6757"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4757"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6979")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IGD05",DATUM["Israeli Geodetic Datum 2005",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Israel - onshore and offshore."],BBOX[29.45,32.99,33.53,35.69]],ID["EPSG",7135]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6980")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGD05",DATUM["Israeli_Geodetic_Datum_2005",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1114"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7136"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6982")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IG05 Intermediate CRS",DATUM["IG05 Intermediate Datum",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Intermediate stage in transformations - not used otherwise."],AREA["Israel - onshore; Palestine Territory - onshore."],BBOX[29.45,34.17,33.28,35.69]],ID["EPSG",6982]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6983")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IG05 Intermediate CRS",DATUM["IG05_Intermediate_Datum",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1142"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6983"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6986")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IGD05/12",DATUM["Israeli Geodetic Datum 2005(2012)",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Israel - onshore and offshore."],BBOX[29.45,32.99,33.53,35.69]],ID["EPSG",7138]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6987")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGD05/12",DATUM["Israeli_Geodetic_Datum_2005_2012",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1115"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7139"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6989")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IG05/12 Intermediate CRS",DATUM["IG05/12 Intermediate Datum",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Intermediate stage in transformations - not used otherwise."],AREA["Israel - onshore; Palestine Territory - onshore."],BBOX[29.45,34.17,33.28,35.69]],ID["EPSG",6989]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=-23.772,-17.49,-17.859,0.3132,1.85274,-1.67299,5.4262 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("6990")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IG05/12 Intermediate CRS",DATUM["IG05_12_Intermediate_Datum",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1144"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6990"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=-23.772,-17.49,-17.859,0.3132,1.85274,-1.67299,5.4262 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7034")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGSPM06 (lon-lat)",DATUM["Reseau Geodesique de Saint Pierre et Miquelon 2006",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic longitude (Lon)",east,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic latitude (Lat)",north,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["GIS."],AREA["St Pierre and Miquelon - onshore and offshore."],BBOX[43.41,-57.1,47.37,-55.9]],ID["EPSG",7034]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7035")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGSPM06 (lon-lat)",DATUM["Reseau_Geodesique_de_Saint_Pierre_et_Miquelon_2006",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1038"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Longitude",EAST],AXIS["Latitude",NORTH],AUTHORITY["EPSG","7035"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7036")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGR92 (lon-lat)",DATUM["Reseau Geodesique de la Reunion 1992",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic longitude (Lon)",east,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic latitude (Lat)",north,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["GIS."],AREA["Reunion - onshore and offshore."],BBOX[-24.72,51.83,-18.28,58.24]],ID["EPSG",7036]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7037")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGR92 (lon-lat)",DATUM["Reseau_Geodesique_de_la_Reunion_1992",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6627"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Longitude",EAST],AXIS["Latitude",NORTH],AUTHORITY["EPSG","7037"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7038")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGM04 (lon-lat)",DATUM["Reseau Geodesique de Mayotte 2004",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic longitude (Lon)",east,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic latitude (Lat)",north,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["GIS."],AREA["Mayotte - onshore and offshore."],BBOX[-14.49,43.68,-11.33,46.7]],ID["EPSG",7038]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7039")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGM04 (lon-lat)",DATUM["Reseau_Geodesique_de_Mayotte_2004",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1036"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Longitude",EAST],AXIS["Latitude",NORTH],AUTHORITY["EPSG","7039"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7040")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGFG95 (lon-lat)",DATUM["Reseau Geodesique Francais Guyane 1995",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic longitude (Lon)",east,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic latitude (Lat)",north,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["GIS."],AREA["French Guiana - onshore and offshore."],BBOX[2.11,-54.61,8.88,-49.45]],ID["EPSG",7040]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7041")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGFG95 (lon-lat)",DATUM["Reseau_Geodesique_Francais_Guyane_1995",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6624"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Longitude",EAST],AXIS["Latitude",NORTH],AUTHORITY["EPSG","7041"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7042")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGF93 (lon-lat)",DATUM["Reseau Geodesique Francais 1993",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic longitude (Lon)",east,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic latitude (Lat)",north,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["GIS."],AREA["France - onshore and offshore, mainland and Corsica."],BBOX[41.15,-9.86,51.56,10.38]],ID["EPSG",7042]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7072")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGTAAF07",DATUM["Reseau Geodesique des Terres Australes et Antarctiques Francaises 2007",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy; air, land and sea navigation and safety of life purposes."],AREA["French Southern Territories - onshore and offshore: Amsterdam and St Paul, Crozet, Europa and Kerguelen. Antarctica - Adelie Land coastal area."],BBOX[-67.13,37.98,-20.91,142]],ID["EPSG",7072]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7073")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGTAAF07",DATUM["Reseau_Geodesique_des_Terres_Australes_et_Antarctiques_Francaises_2007",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1113"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7073"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7084")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGF93 (lon-lat)",DATUM["Reseau_Geodesique_Francais_1993",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6171"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Longitude",EAST],AXIS["Latitude",NORTH],AUTHORITY["EPSG","7084"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7085")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGAF09 (lon-lat)",DATUM["Reseau Geodesique des Antilles Francaises 2009",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic longitude (Lon)",east,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic latitude (Lat)",north,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["GIS."],AREA["French Antilles onshore and offshore - Guadeloupe (including Grande Terre, Basse Terre, Marie Galante, Les Saintes, Iles de la Petite Terre, La Desirade, St Barthélemy, and northern St Martin) and Martinique."],BBOX[14.08,-63.66,18.54,-57.52]],ID["EPSG",7085]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7086")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGAF09 (lon-lat)",DATUM["Reseau_Geodesique_des_Antilles_Francaises_2009",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1073"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Longitude",EAST],AXIS["Latitude",NORTH],AUTHORITY["EPSG","7086"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7087")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGTAAF07 (lon-lat)",DATUM["Reseau Geodesique des Terres Australes et Antarctiques Francaises 2007",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic longitude (Lon)",east,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic latitude (Lat)",north,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["GIS."],AREA["French Southern Territories - onshore and offshore: Amsterdam and St Paul, Crozet, Europa and Kerguelen. Antarctica - Adelie Land coastal area."],BBOX[-67.13,37.98,-20.91,142]],ID["EPSG",7087]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7088")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGTAAF07 (lon-lat)",DATUM["Reseau_Geodesique_des_Terres_Australes_et_Antarctiques_Francaises_2007",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1113"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Longitude",EAST],AXIS["Latitude",NORTH],AUTHORITY["EPSG","7133"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7133")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGTAAF07 (lon-lat)",DATUM["Reseau_Geodesique_des_Terres_Australes_et_Antarctiques_Francaises_2007",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1113"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Longitude",EAST],AXIS["Latitude",NORTH],AUTHORITY["EPSG","7133"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7135")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IGD05",DATUM["Israeli Geodetic Datum 2005",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Israel - onshore and offshore."],BBOX[29.45,32.99,33.53,35.69]],ID["EPSG",7135]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7136")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGD05",DATUM["Israeli_Geodetic_Datum_2005",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1114"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7136"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7138")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IGD05/12",DATUM["Israeli Geodetic Datum 2005(2012)",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Israel - onshore and offshore."],BBOX[29.45,32.99,33.53,35.69]],ID["EPSG",7138]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7139")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGD05/12",DATUM["Israeli_Geodetic_Datum_2005_2012",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1115"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7139"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7372")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ONGD14",DATUM["Oman National Geodetic Datum 2014",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Oman - onshore and offshore."],BBOX[14.33,51.99,26.74,63.38]],ID["EPSG",7372]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7373")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ONGD14",DATUM["Oman_National_Geodetic_Datum_2014",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1147"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7373"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7400")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NTF (Paris)",DATUM["Nouvelle_Triangulation_Francaise_Paris",SPHEROID["Clarke 1880 (IGN)",6378249.2,293.466021293627,AUTHORITY["EPSG","7011"]],AUTHORITY["EPSG","6807"]],PRIMEM["Paris",2.33722916999999,AUTHORITY["EPSG","8903"]],UNIT["grad",0.0157079632679489,AUTHORITY["EPSG","9105"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4807"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=clrk80ign +pm=paris +towgs84=-168,-60,320,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7404")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RT90",DATUM["Rikets_koordinatsystem_1990",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6124"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4124"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7406")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD27",DATUM["North_American_Datum_1927",SPHEROID["Clarke 1866",6378206.4,294.978698213898,AUTHORITY["EPSG","7008"]],AUTHORITY["EPSG","6267"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4267"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +datum=NAD27 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7409")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7410")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["PSD93",DATUM["PDO_Survey_Datum_1993",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","6134"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4134"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7414")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Tokyo",DATUM["Tokyo",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6301"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4301"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=-146.414,507.337,680.507,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7423")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7657")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["WGS 84 (G730)",DYNAMIC[FRAMEEPOCH[1994]],DATUM["World Geodetic System 1984 (G730)",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy. Navigation and positioning using GPS satellite system."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7657]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7659")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["WGS 84 (G873)",DYNAMIC[FRAMEEPOCH[1997]],DATUM["World Geodetic System 1984 (G873)",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy. Navigation and positioning using GPS satellite system."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7659]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7661")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["WGS 84 (G1150)",DYNAMIC[FRAMEEPOCH[2001]],DATUM["World Geodetic System 1984 (G1150)",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy. Navigation and positioning using GPS satellite system."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7661]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7663")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["WGS 84 (G1674)",DYNAMIC[FRAMEEPOCH[2005]],DATUM["World Geodetic System 1984 (G1674)",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy. Navigation and positioning using GPS satellite system."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7663]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7665")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["WGS 84 (G1762)",DYNAMIC[FRAMEEPOCH[2005]],DATUM["World Geodetic System 1984 (G1762)",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy. Navigation and positioning using GPS satellite system."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7665]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7678")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["PZ-90.02",DYNAMIC[FRAMEEPOCH[2002]],DATUM["Parametry Zemli 1990.02",ELLIPSOID["PZ-90",6378136,298.257839303,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy. Navigation and positioning using Glonass satellite system."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7678]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378136 +rf=298.257839303 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7680")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["PZ-90.11",DYNAMIC[FRAMEEPOCH[2010]],DATUM["Parametry Zemli 1990.11",ELLIPSOID["PZ-90",6378136,298.257839303,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy. Navigation and positioning using Glonass satellite system."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7680]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378136 +rf=298.257839303 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7682")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["GSK-2011",DATUM["Geodezicheskaya Sistema Koordinat 2011",ELLIPSOID["GSK-2011",6378136.5,298.2564151,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Russian Federation - onshore and offshore."],BBOX[39.87,18.92,85.2,-168.97]],ID["EPSG",7682]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GSK2011 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7683")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["GSK-2011",DATUM["Geodezicheskaya_Sistema_Koordinat_2011",SPHEROID["GSK-2011",6378136.5,298.2564151,AUTHORITY["EPSG","1025"]],AUTHORITY["EPSG","1159"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7683"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GSK2011 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7685")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Kyrg-06",DATUM["Kyrgyzstan Geodetic Datum 2006",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Kyrgyzstan."],BBOX[39.19,69.24,43.22,80.29]],ID["EPSG",7685]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7686")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Kyrg-06",DATUM["Kyrgyzstan_Geodetic_Datum_2006",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1160"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7686"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7797")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["BGS2005",DATUM["Bulgaria Geodetic System 2005",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Bulgaria - onshore and offshore."],BBOX[41.24,22.36,44.23,31.35]],ID["EPSG",7797]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7798")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["BGS2005",DATUM["Bulgaria_Geodetic_System_2005",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1167"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7798"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7816")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["WGS 84 (Transit)",DYNAMIC[FRAMEEPOCH[1984]],DATUM["World Geodetic System 1984 (Transit)",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy. Navigation and positioning using GPS satellite system."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7816]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7843")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["GDA2020",DATUM["Geocentric Datum of Australia 2020",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy, cadastre, engineering survey, topographic mapping."],AREA["Australia including Lord Howe Island, Macquarie Island, Ashmore and Cartier Islands, Christmas Island, Cocos (Keeling) Islands, Norfolk Island. All onshore and offshore."],BBOX[-60.55,93.41,-8.47,173.34]],ID["EPSG",7843]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7844")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["GDA2020",DATUM["Geocentric_Datum_of_Australia_2020",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1168"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7844"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7880")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["St. Helena Tritan",DATUM["St. Helena Tritan",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Engineering survey including Airport and Ruperts Wharf construction."],AREA["St Helena, Ascension and Tristan da Cunha - St Helena Island - onshore."],BBOX[-16.08,-5.85,-15.85,-5.58]],ID["EPSG",7880]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=-0.077,0.079,0.086,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7881")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["St. Helena Tritan",DATUM["St_Helena_Tritan",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1173"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7881"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=WGS84 +towgs84=-0.077,0.079,0.086,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7885")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SHGD2015",DATUM["St. Helena Geodetic Datum 2015",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Engineering survey including Airport and Ruperts Wharf construction."],AREA["St Helena, Ascension and Tristan da Cunha - St Helena Island - onshore."],BBOX[-16.08,-5.85,-15.85,-5.58]],ID["EPSG",7885]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7886")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SHGD2015",DATUM["St_Helena_Geodetic_Datum_2015",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1174"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7886"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7900")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ITRF88",DYNAMIC[FRAMEEPOCH[1988]],DATUM["International Terrestrial Reference Frame 1988",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7900]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7901")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ITRF89",DYNAMIC[FRAMEEPOCH[1988]],DATUM["International Terrestrial Reference Frame 1989",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7901]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7902")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ITRF90",DYNAMIC[FRAMEEPOCH[1988]],DATUM["International Terrestrial Reference Frame 1990",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7902]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7903")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ITRF91",DYNAMIC[FRAMEEPOCH[1988]],DATUM["International Terrestrial Reference Frame 1991",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7903]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7904")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ITRF92",DYNAMIC[FRAMEEPOCH[1988]],DATUM["International Terrestrial Reference Frame 1992",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7904]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7905")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ITRF93",DYNAMIC[FRAMEEPOCH[1993]],DATUM["International Terrestrial Reference Frame 1993",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7905]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7906")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ITRF94",DYNAMIC[FRAMEEPOCH[1993]],DATUM["International Terrestrial Reference Frame 1994",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7906]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7907")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ITRF96",DYNAMIC[FRAMEEPOCH[1997]],DATUM["International Terrestrial Reference Frame 1996",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7907]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7908")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ITRF97",DYNAMIC[FRAMEEPOCH[1997]],DATUM["International Terrestrial Reference Frame 1997",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7908]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7909")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ITRF2000",DYNAMIC[FRAMEEPOCH[1997]],DATUM["International Terrestrial Reference Frame 2000",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7909]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7910")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ITRF2005",DYNAMIC[FRAMEEPOCH[2000]],DATUM["International Terrestrial Reference Frame 2005",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7910]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7911")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ITRF2008",DYNAMIC[FRAMEEPOCH[2005]],DATUM["International Terrestrial Reference Frame 2008",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7911]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7912")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ITRF2014",DYNAMIC[FRAMEEPOCH[2010]],DATUM["International Terrestrial Reference Frame 2014",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",7912]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7915")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ETRF89",DATUM["European Terrestrial Reference Frame 1989",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Europe - onshore and offshore: Albania; Andorra; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Hungary; Ireland; Italy; Kosovo; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway including Svalbard and Jan Mayen; Poland; Portugal; Romania; San Marino; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; United Kingdom (UK) including Channel Islands and Isle of Man; Vatican City State."],BBOX[32.88,-16.1,84.73,40.18]],ID["EPSG",7915]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7917")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ETRF90",DATUM["European Terrestrial Reference Frame 1990",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Europe - onshore and offshore: Albania; Andorra; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Hungary; Ireland; Italy; Kosovo; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway including Svalbard and Jan Mayen; Poland; Portugal; Romania; San Marino; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; United Kingdom (UK) including Channel Islands and Isle of Man; Vatican City State."],BBOX[32.88,-16.1,84.73,40.18]],ID["EPSG",7917]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7919")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ETRF91",DATUM["European Terrestrial Reference Frame 1991",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Europe - onshore and offshore: Albania; Andorra; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Hungary; Ireland; Italy; Kosovo; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway including Svalbard and Jan Mayen; Poland; Portugal; Romania; San Marino; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; United Kingdom (UK) including Channel Islands and Isle of Man; Vatican City State."],BBOX[32.88,-16.1,84.73,40.18]],ID["EPSG",7919]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7921")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ETRF92",DATUM["European Terrestrial Reference Frame 1992",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Europe - onshore and offshore: Albania; Andorra; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Hungary; Ireland; Italy; Kosovo; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway including Svalbard and Jan Mayen; Poland; Portugal; Romania; San Marino; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; United Kingdom (UK) including Channel Islands and Isle of Man; Vatican City State."],BBOX[32.88,-16.1,84.73,40.18]],ID["EPSG",7921]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7923")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ETRF93",DATUM["European Terrestrial Reference Frame 1993",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Europe - onshore and offshore: Albania; Andorra; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Hungary; Ireland; Italy; Kosovo; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway including Svalbard and Jan Mayen; Poland; Portugal; Romania; San Marino; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; United Kingdom (UK) including Channel Islands and Isle of Man; Vatican City State."],BBOX[32.88,-16.1,84.73,40.18]],ID["EPSG",7923]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7925")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ETRF94",DATUM["European Terrestrial Reference Frame 1994",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Europe - onshore and offshore: Albania; Andorra; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Hungary; Ireland; Italy; Kosovo; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway including Svalbard and Jan Mayen; Poland; Portugal; Romania; San Marino; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; United Kingdom (UK) including Channel Islands and Isle of Man; Vatican City State."],BBOX[32.88,-16.1,84.73,40.18]],ID["EPSG",7925]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7927")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ETRF96",DATUM["European Terrestrial Reference Frame 1996",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Europe - onshore and offshore: Albania; Andorra; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Hungary; Ireland; Italy; Kosovo; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway including Svalbard and Jan Mayen; Poland; Portugal; Romania; San Marino; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; United Kingdom (UK) including Channel Islands and Isle of Man; Vatican City State."],BBOX[32.88,-16.1,84.73,40.18]],ID["EPSG",7927]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7929")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ETRF97",DATUM["European Terrestrial Reference Frame 1997",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Europe - onshore and offshore: Albania; Andorra; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Hungary; Ireland; Italy; Kosovo; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway including Svalbard and Jan Mayen; Poland; Portugal; Romania; San Marino; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; United Kingdom (UK) including Channel Islands and Isle of Man; Vatican City State."],BBOX[32.88,-16.1,84.73,40.18]],ID["EPSG",7929]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("7931")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ETRF2000",DATUM["European Terrestrial Reference Frame 2000",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Europe - onshore and offshore: Albania; Andorra; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Hungary; Ireland; Italy; Kosovo; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway including Svalbard and Jan Mayen; Poland; Portugal; Romania; San Marino; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; United Kingdom (UK) including Channel Islands and Isle of Man; Vatican City State."],BBOX[32.88,-16.1,84.73,40.18]],ID["EPSG",7931]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8042")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Gusterberg (Ferro)",DATUM["Gusterberg_Ferro",SPHEROID["Zach 1812",6376045,310,AUTHORITY["EPSG","1026"]],AUTHORITY["EPSG","1188"]],PRIMEM["Ferro",-17.6666666666667,AUTHORITY["EPSG","8909"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8042"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6376045 +rf=310 +pm=ferro +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8043")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["St. Stephen (Ferro)",DATUM["St_Stephen_Ferro",SPHEROID["Zach 1812",6376045,310,AUTHORITY["EPSG","1026"]],AUTHORITY["EPSG","1189"]],PRIMEM["Ferro",-17.6666666666667,AUTHORITY["EPSG","8909"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8043"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6376045 +rf=310 +pm=ferro +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8085")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ISN2016",DATUM["Islands Net 2016",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Iceland - onshore and offshore."],BBOX[59.96,-30.87,69.59,-5.55]],ID["EPSG",8085]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8086")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ISN2016",DATUM["Islands_Net_2016",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1187"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8086"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8231")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(CSRS96)",DATUM["North American Datum of 1983 (CSRS96)",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Canada - onshore and offshore - Alberta; British Columbia; Manitoba; New Brunswick; Newfoundland and Labrador; Northwest Territories; Nova Scotia; Nunavut; Ontario; Prince Edward Island; Quebec; Saskatchewan; Yukon."],BBOX[38.21,-141.01,86.46,-40.73]],ID["EPSG",8231]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8232")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(CSRS96)",DATUM["North_American_Datum_of_1983_CSRS96",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1192"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8232"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8235")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(CSRS)v2",DATUM["North American Datum of 1983 (CSRS) version 2",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Canada - onshore and offshore - Alberta; British Columbia; Manitoba; New Brunswick; Newfoundland and Labrador; Northwest Territories; Nova Scotia; Nunavut; Ontario; Prince Edward Island; Quebec; Saskatchewan; Yukon."],BBOX[38.21,-141.01,86.46,-40.73]],ID["EPSG",8235]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8237")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(CSRS)v2",DATUM["North_American_Datum_of_1983_CSRS_version_2",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1193"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8237"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8239")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(CSRS)v3",DATUM["North American Datum of 1983 (CSRS) version 3",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Canada - onshore and offshore - Alberta; British Columbia; Manitoba; New Brunswick; Newfoundland and Labrador; Northwest Territories; Nova Scotia; Nunavut; Ontario; Prince Edward Island; Quebec; Saskatchewan; Yukon."],BBOX[38.21,-141.01,86.46,-40.73]],ID["EPSG",8239]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8240")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(CSRS)v3",DATUM["North_American_Datum_of_1983_CSRS_version_3",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1194"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8240"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8244")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(CSRS)v4",DATUM["North American Datum of 1983 (CSRS) version 4",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Canada - onshore and offshore - Alberta; British Columbia; Manitoba; New Brunswick; Newfoundland and Labrador; Northwest Territories; Nova Scotia; Nunavut; Ontario; Prince Edward Island; Quebec; Saskatchewan; Yukon."],BBOX[38.21,-141.01,86.46,-40.73]],ID["EPSG",8244]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8246")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(CSRS)v4",DATUM["North_American_Datum_of_1983_CSRS_version_4",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1195"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8246"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8248")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(CSRS)v5",DATUM["North American Datum of 1983 (CSRS) version 5",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Canada - onshore and offshore - Alberta; British Columbia; Manitoba; New Brunswick; Newfoundland and Labrador; Northwest Territories; Nova Scotia; Nunavut; Ontario; Prince Edward Island; Quebec; Saskatchewan; Yukon."],BBOX[38.21,-141.01,86.46,-40.73]],ID["EPSG",8248]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8249")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(CSRS)v5",DATUM["North_American_Datum_of_1983_CSRS_version_5",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1196"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8249"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8251")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(CSRS)v6",DATUM["North American Datum of 1983 (CSRS) version 6",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Canada - onshore and offshore - Alberta; British Columbia; Manitoba; New Brunswick; Newfoundland and Labrador; Northwest Territories; Nova Scotia; Nunavut; Ontario; Prince Edward Island; Quebec; Saskatchewan; Yukon."],BBOX[38.21,-141.01,86.46,-40.73]],ID["EPSG",8251]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8252")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(CSRS)v6",DATUM["North_American_Datum_of_1983_CSRS_version_6",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1197"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8252"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8254")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(CSRS)v7",DATUM["North American Datum of 1983 (CSRS) version 7",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Canada - onshore and offshore - Alberta; British Columbia; Manitoba; New Brunswick; Newfoundland and Labrador; Northwest Territories; Nova Scotia; Nunavut; Ontario; Prince Edward Island; Quebec; Saskatchewan; Yukon."],BBOX[38.21,-141.01,86.46,-40.73]],ID["EPSG",8254]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8255")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(CSRS)v7",DATUM["North_American_Datum_of_1983_CSRS_version_7",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1198"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8255"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8349")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["GR96",DATUM["Greenland_1996",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6747"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4747"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8350")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["GR96",DATUM["Greenland_1996",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6747"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4747"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8351")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["S-JTSK [JTSK03]",DATUM["System_of_the_Unified_Trigonometrical_Cadastral_Network_JTSK03",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","1201"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8351"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=485.021,169.465,483.839,7.786342,4.397554,4.102655,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8360")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8399")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ETRF2005",DATUM["European Terrestrial Reference Frame 2005",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Europe - onshore and offshore: Albania; Andorra; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Hungary; Ireland; Italy; Kosovo; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway including Svalbard and Jan Mayen; Poland; Portugal; Romania; San Marino; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; United Kingdom (UK) including Channel Islands and Isle of Man; Vatican City State."],BBOX[32.88,-16.1,84.73,40.18]],ID["EPSG",8399]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8403")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ETRF2014",DATUM["European Terrestrial Reference Frame 2014",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Europe - onshore and offshore: Albania; Andorra; Austria; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Cyprus; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Hungary; Ireland; Italy; Kosovo; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Moldova; Monaco; Montenegro; Netherlands; North Macedonia; Norway including Svalbard and Jan Mayen; Poland; Portugal; Romania; San Marino; Serbia; Slovakia; Slovenia; Spain; Sweden; Switzerland; United Kingdom (UK) including Channel Islands and Isle of Man; Vatican City State."],BBOX[32.88,-16.1,84.73,40.18]],ID["EPSG",8403]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8426")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Hong Kong Geodetic CS",DATUM["Hong Kong Geodetic",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["China - Hong Kong - onshore and offshore."],BBOX[22.13,113.76,22.58,114.51]],ID["EPSG",8426]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8427")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Hong Kong Geodetic CS",DATUM["Hong_Kong_Geodetic",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1209"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8427"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8428")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Macao 1920",DATUM["Macao_1920",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","1207"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8428"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=intl +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8430")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["Macao 2008",DATUM["Macao Geodetic Datum 2008",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["China - Macao - onshore and offshore."],BBOX[22.06,113.52,22.23,113.68]],ID["EPSG",8430]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8431")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Macao 2008",DATUM["Macao_Geodetic_Datum_2008",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1208"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8431"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8449")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(FBN)",DATUM["NAD83_Federal_Base_Network",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1211"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8860"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8542")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(FBN)",DATUM["NAD83 (Federal Base Network)",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["American Samoa - Tutuila, Aunu\'u, Ofu, Olesega, Ta\'u and Rose islands - onshore. Guam - onshore. Northern Mariana Islands - onshore. Puerto Rico - onshore. United States (USA) - CONUS - Alabama; Arizona; Arkansas; California; Colorado; Connecticut; Delaware; Florida; Georgia; Idaho; Illinois; Indiana; Iowa; Kansas; Kentucky; Louisiana; Maine; Maryland; Massachusetts; Michigan; Minnesota; Mississippi; Missouri; Montana; Nebraska; Nevada; New Hampshire; New Jersey; New Mexico; New York; North Carolina; North Dakota; Ohio; Oklahoma; Oregon; Pennsylvania; Rhode Island; South Carolina; South Dakota; Tennessee; Texas; Utah; Vermont; Virginia; Washington; West Virginia; Wisconsin; Wyoming - onshore plus Gulf of Mexico offshore continental shelf (GoM OCS). US Virgin Islands - onshore."],BBOX[-14.59,144.58,49.38,-64.51]],ID["EPSG",8542]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8544")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(HARN Corrected)",DATUM["NAD83 (High Accuracy Reference Network - Corrected)",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Puerto Rico and US Virgin Islands - onshore."],BBOX[17.62,-67.97,18.57,-64.51]],ID["EPSG",8544]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8545")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(HARN Corrected)",DATUM["NAD83_High_Accuracy_Reference_Network_-_Corrected",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1212"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8545"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8684")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SRB_ETRS89",DATUM["Serbian Spatial Reference System 2000",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Serbia including Vojvodina."],BBOX[42.23,18.81,46.19,23.01]],ID["EPSG",8684]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8685")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SRB_ETRS89",DATUM["Serbian_Spatial_Reference_System_2000",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1214"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8685"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8694")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Camacupa 2015",DATUM["Camacupa_2015",SPHEROID["Clarke 1880 (RGS)",6378249.145,293.465,AUTHORITY["EPSG","7012"]],AUTHORITY["EPSG","1217"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8694"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +a=6378249.145 +rf=293.465 +towgs84=-93.799,-132.737,-219.073,-1.844,0.648,-6.37,-0.169 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8698")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RSAO13",DATUM["Reference System de Angola 2013",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Angola - onshore and offshore."],BBOX[-18.02,8.2,-4.38,24.09]],ID["EPSG",8698]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8699")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RSAO13",DATUM["Reference_System_de_Angola_2013",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1220"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8699"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8817")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["MTRF-2000",DATUM["MOMRA Terrestrial Reference Frame 2000",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Saudi Arabia - onshore and offshore."],BBOX[16.29,34.44,32.16,55.67]],ID["EPSG",8817]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8818")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["MTRF-2000",DATUM["MOMRA_Terrestrial_Reference_Frame_2000",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1218"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8818"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8860")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(FBN)",DATUM["NAD83_Federal_Base_Network",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1211"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8860"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8888")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["WGS 84 (Transit)",DATUM["World_Geodetic_System_1984_Transit",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1166"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8888"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8899")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGWF96",DATUM["Reseau Geodesique de Wallis et Futuna 1996",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy; air, land and sea navigation and safety of life purposes."],AREA["Wallis and Futuna - onshore and offshore - Uvea, Futuna, and Alofi."],BBOX[-15.94,179.49,-9.84,-174.27]],ID["EPSG",8899]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8900")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGWF96",DATUM["Reseau_Geodesique_de_Wallis_et_Futuna_1996",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1223"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8900"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8901")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["RGWF96 (lon-lat)",DATUM["Reseau Geodesique de Wallis et Futuna 1996",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic longitude (Lon)",east,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic latitude (Lat)",north,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["GIS."],AREA["Wallis and Futuna - onshore and offshore - Uvea, Futuna, and Alofi."],BBOX[-15.94,179.49,-9.84,-174.27]],ID["EPSG",8901]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8902")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGWF96 (lon-lat)",DATUM["Reseau_Geodesique_de_Wallis_et_Futuna_1996",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1223"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Longitude",EAST],AXIS["Latitude",NORTH],AUTHORITY["EPSG","8902"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8906")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["CR-SIRGAS",DATUM["CR-SIRGAS",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Costa Rica - onshore and offshore."],BBOX[2.15,-90.45,11.77,-81.43]],ID["EPSG",8906]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8907")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["CR-SIRGAS",DATUM["CR-SIRGAS",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1225"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8907"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8916")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON DGF00P01",DYNAMIC[FRAMEEPOCH[2000.4]],DATUM["SIRGAS Continuously Operating Network DGF00P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8916]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8918")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON DGF01P01",DYNAMIC[FRAMEEPOCH[2000]],DATUM["SIRGAS Continuously Operating Network DGF01P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8918]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8920")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON DGF01P02",DYNAMIC[FRAMEEPOCH[1998.4]],DATUM["SIRGAS Continuously Operating Network DGF01P02",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8920]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8922")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON DGF02P01",DYNAMIC[FRAMEEPOCH[2000]],DATUM["SIRGAS Continuously Operating Network DGF02P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8922]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8924")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON DGF04P01",DYNAMIC[FRAMEEPOCH[2003]],DATUM["SIRGAS Continuously Operating Network DGF04P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8924]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8926")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON DGF05P01",DYNAMIC[FRAMEEPOCH[2004]],DATUM["SIRGAS Continuously Operating Network DGF05P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8926]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8928")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON DGF06P01",DYNAMIC[FRAMEEPOCH[2004]],DATUM["SIRGAS Continuously Operating Network DGF06P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8928]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8930")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON DGF07P01",DYNAMIC[FRAMEEPOCH[2004.5]],DATUM["SIRGAS Continuously Operating Network DGF07P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8930]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8932")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON DGF08P01",DYNAMIC[FRAMEEPOCH[2004.5]],DATUM["SIRGAS Continuously Operating Network DGF08P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8932]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8934")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON SIR09P01",DYNAMIC[FRAMEEPOCH[2005]],DATUM["SIRGAS Continuously Operating Network SIR09P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8934]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8936")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON SIR10P01",DYNAMIC[FRAMEEPOCH[2005]],DATUM["SIRGAS Continuously Operating Network SIR10P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8936]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8938")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON SIR11P01",DYNAMIC[FRAMEEPOCH[2005]],DATUM["SIRGAS Continuously Operating Network SIR11P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8938]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8940")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON SIR13P01",DYNAMIC[FRAMEEPOCH[2012]],DATUM["SIRGAS Continuously Operating Network SIR13P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8940]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8942")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON SIR14P01",DYNAMIC[FRAMEEPOCH[2013]],DATUM["SIRGAS Continuously Operating Network SIR14P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8942]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8944")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON SIR15P01",DYNAMIC[FRAMEEPOCH[2013]],DATUM["SIRGAS Continuously Operating Network SIR15P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8944]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8946")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-CON SIR17P01",DYNAMIC[FRAMEEPOCH[2015]],DATUM["SIRGAS Continuously Operating Network SIR17P01",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Latin America - Central America and South America, onshore and offshore."],BBOX[-59.87,-122.19,32.72,-25.28]],ID["EPSG",8946]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8948")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-Chile 2010",DATUM["SIRGAS-Chile realization 2 epoch 2010",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Chile - onshore and offshore. Includes Easter Island, Juan Fernandez Islands, San Felix, and Sala y Gomez."],BBOX[-59.87,-113.21,-17.5,-65.72]],ID["EPSG",8948]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8949")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-Chile 2010",DATUM["SIRGAS-Chile_realization_2_epoch_2010",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1243"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8949"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8972")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON DGF00P01",DATUM["SIRGAS_Continuously_Operating_Network_DGF00P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1227"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8972"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8973")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON DGF01P01",DATUM["SIRGAS_Continuously_Operating_Network_DGF01P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1228"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8973"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8974")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON DGF01P02",DATUM["SIRGAS_Continuously_Operating_Network_DGF01P02",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1229"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8974"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8975")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON DGF02P01",DATUM["SIRGAS_Continuously_Operating_Network_DGF02P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1230"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8975"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8976")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON DGF04P01",DATUM["SIRGAS_Continuously_Operating_Network_DGF04P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1231"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8976"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8977")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON DGF05P01",DATUM["SIRGAS_Continuously_Operating_Network_DGF05P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1232"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8977"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8978")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON DGF06P01",DATUM["SIRGAS_Continuously_Operating_Network_DGF06P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1233"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8978"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8979")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON DGF07P01",DATUM["SIRGAS_Continuously_Operating_Network_DGF07P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1234"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8979"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8980")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON DGF08P01",DATUM["SIRGAS_Continuously_Operating_Network_DGF08P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1235"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8980"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8981")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON SIR09P01",DATUM["SIRGAS_Continuously_Operating_Network_SIR09P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1236"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8981"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8982")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON SIR10P01",DATUM["SIRGAS_Continuously_Operating_Network_SIR10P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1237"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8982"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8983")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON SIR11P01",DATUM["SIRGAS_Continuously_Operating_Network_SIR11P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1238"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8983"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8984")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON SIR13P01",DATUM["SIRGAS_Continuously_Operating_Network_SIR13P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1239"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8984"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8985")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON SIR14P01",DATUM["SIRGAS_Continuously_Operating_Network_SIR14P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1240"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8985"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8986")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON SIR15P01",DATUM["SIRGAS_Continuously_Operating_Network_SIR15P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1241"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8986"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8987")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-CON SIR17P01",DATUM["SIRGAS_Continuously_Operating_Network_SIR17P01",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1242"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8987"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8988")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ITRF88",DATUM["International_Terrestrial_Reference_Frame_1988",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6647"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8988"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8989")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ITRF89",DATUM["International_Terrestrial_Reference_Frame_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6648"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8989"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8990")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ITRF90",DATUM["International_Terrestrial_Reference_Frame_1990",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6649"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8990"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8991")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ITRF91",DATUM["International_Terrestrial_Reference_Frame_1991",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6650"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8991"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8992")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ITRF92",DATUM["International_Terrestrial_Reference_Frame_1992",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6651"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8992"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8993")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ITRF93",DATUM["International_Terrestrial_Reference_Frame_1993",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6652"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8993"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8994")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ITRF94",DATUM["International_Terrestrial_Reference_Frame_1994",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6653"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8994"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8995")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ITRF96",DATUM["International_Terrestrial_Reference_Frame_1996",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6654"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8995"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8996")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ITRF97",DATUM["International_Terrestrial_Reference_Frame_1997",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6655"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8996"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8997")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ITRF2000",DATUM["International_Terrestrial_Reference_Frame_2000",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6656"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8997"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8998")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ITRF2005",DATUM["International_Terrestrial_Reference_Frame_2005",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6896"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8998"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("8999")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ITRF2008",DATUM["International_Terrestrial_Reference_Frame_2008",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1061"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8999"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9000")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ITRF2014",DATUM["International_Terrestrial_Reference_Frame_2014",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1165"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9000"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9002")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IGS97",DYNAMIC[FRAMEEPOCH[1997]],DATUM["IGS97",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",9002]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9003")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGS97",DATUM["IGS97",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1244"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9003"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9005")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IGS00",DYNAMIC[FRAMEEPOCH[1998]],DATUM["IGS00",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",9005]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9006")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGS00",DATUM["IGS00",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1245"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9006"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9008")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IGb00",DYNAMIC[FRAMEEPOCH[1998]],DATUM["IGb00",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",9008]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9009")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGb00",DATUM["IGb00",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1246"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9009"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9011")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IGS05",DYNAMIC[FRAMEEPOCH[2000]],DATUM["IGS05",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",9011]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9012")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGS05",DATUM["IGS05",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1247"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9012"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9013")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IGS08",DYNAMIC[FRAMEEPOCH[2005]],DATUM["IGS08",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",9013]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9014")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGS08",DATUM["IGS08",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1141"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9014"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9016")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IGb08",DYNAMIC[FRAMEEPOCH[2005]],DATUM["IGb08",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",9016]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9017")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGb08",DATUM["IGb08",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1248"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9017"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9018")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IGS14",DYNAMIC[FRAMEEPOCH[2010]],DATUM["IGS14",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",9018]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9019")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGS14",DATUM["IGS14",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1191"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9019"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9053")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["WGS 84 (G730)",DATUM["World_Geodetic_System_1984_G730",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1152"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9053"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9054")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["WGS 84 (G873)",DATUM["World_Geodetic_System_1984_G873",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1153"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9054"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9055")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["WGS 84 (G1150)",DATUM["World_Geodetic_System_1984_G1150",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1154"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9055"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9056")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["WGS 84 (G1674)",DATUM["World_Geodetic_System_1984_G1674",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1155"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9056"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9057")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["WGS 84 (G1762)",DATUM["World_Geodetic_System_1984_G1762",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1156"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9057"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9059")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRF89",DATUM["European_Terrestrial_Reference_Frame_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1178"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9059"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9060")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRF90",DATUM["European_Terrestrial_Reference_Frame_1990",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1179"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9060"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9061")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRF91",DATUM["European_Terrestrial_Reference_Frame_1991",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1180"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9061"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9062")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRF92",DATUM["European_Terrestrial_Reference_Frame_1992",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1181"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9062"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9063")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRF93",DATUM["European_Terrestrial_Reference_Frame_1993",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1182"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9063"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9064")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRF94",DATUM["European_Terrestrial_Reference_Frame_1994",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1183"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9064"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9065")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRF96",DATUM["European_Terrestrial_Reference_Frame_1996",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1184"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9065"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9066")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRF97",DATUM["European_Terrestrial_Reference_Frame_1997",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1185"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9066"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9067")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRF2000",DATUM["European_Terrestrial_Reference_Frame_2000",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1186"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9067"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9068")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRF2005",DATUM["European_Terrestrial_Reference_Frame_2005",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1204"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9068"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9069")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRF2014",DATUM["European_Terrestrial_Reference_Frame_2014",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1206"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9069"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9071")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(MARP00)",DATUM["North American Datum of 1983 (MARP00)",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Guam, Northern Mariana Islands and Palau; onshore and offshore."],BBOX[1.64,129.48,23.9,149.55]],ID["EPSG",9071]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9072")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(MARP00)",DATUM["North_American_Datum_of_1983_MARP00",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1221"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9072"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9074")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["NAD83(PACP00)",DATUM["North American Datum of 1983 (PACP00)",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["American Samoa, Marshall Islands, United States (USA) - Hawaii, United States minor outlying islands; onshore and offshore."],BBOX[-17.56,157.47,31.8,-151.27]],ID["EPSG",9074]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9075")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(PACP00)",DATUM["North_American_Datum_of_1983_PACP00",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1249"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9075"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9139")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["KOSOVAREF01",DATUM["Kosovo Reference System 2001",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Kosovo."],BBOX[41.85,19.97,43.25,21.8]],ID["EPSG",9139]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9140")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["KOSOVAREF01",DATUM["Kosovo_Reference_System_2001",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1251"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9140"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9147")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-Chile 2013",DATUM["SIRGAS-Chile realization 3 epoch 2013",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Chile - onshore and offshore. Includes Easter Island, Juan Fernandez Islands, San Felix, and Sala y Gomez."],BBOX[-59.87,-113.21,-17.5,-65.72]],ID["EPSG",9147]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9148")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-Chile 2013",DATUM["SIRGAS-Chile_realization_3_epoch_2013",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1252"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9148"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9152")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-Chile 2016",DATUM["SIRGAS-Chile realization 4 epoch 2016",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Chile - onshore and offshore. Includes Easter Island, Juan Fernandez Islands, San Felix, and Sala y Gomez."],BBOX[-59.87,-113.21,-17.5,-65.72]],ID["EPSG",9152]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9153")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-Chile 2016",DATUM["SIRGAS-Chile_realization_4_epoch_2016",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1253"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9153"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9183")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SIRGAS-Chile",DATUM["SIRGAS-Chile",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Chile - onshore and offshore. Includes Easter Island, Juan Fernandez Islands, San Felix, and Sala y Gomez."],BBOX[-59.87,-113.21,-17.5,-65.72]],ID["EPSG",9183]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9184")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SIRGAS-Chile (deprecated)",DATUM["SIRGAS-Chile",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1254"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9184"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9248")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["Tapi Aike",DATUM["Tapi_Aike",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","1257"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9248"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-192.26,65.72,132.08,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9251")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["MMN",DATUM["Ministerio_de_Marina_Norte",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","1258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9251"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-9.5,122.9,138.2,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9253")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["MMS",DATUM["Ministerio_de_Marina_Sur",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","1259"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9253"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-78.1,101.6,133.3,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9267")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["MGI",DATUM["Militar-Geographische Institut",ELLIPSOID["Bessel 1841",6377397.155,299.1528128,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Austria."],BBOX[46.4,9.53,49.02,17.17]],ID["EPSG",9267]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=577.326,90.129,463.919,5.137,1.474,5.297,2.4232 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9286")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9289")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9290")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9293")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ONGD17",DATUM["Oman National Geodetic Datum 2017",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Oman - onshore and offshore."],BBOX[14.33,51.99,26.74,63.38]],ID["EPSG",9293]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9294")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ONGD17",DATUM["Oman_National_Geodetic_Datum_2017",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1263"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9294"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9299")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["HS2-IRF",DATUM["HS2_Intermediate_Reference_Frame",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1264"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9299"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9308")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ATRF2014",DYNAMIC[FRAMEEPOCH[2020]],DATUM["Australian Terrestrial Reference Frame 2014",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Location-based services, Intelligent Transport Services, navigation, positioning."],AREA["Australia including Lord Howe Island, Macquarie Island, Ashmore and Cartier Islands, Christmas Island, Cocos (Keeling) Islands, Norfolk Island. All onshore and offshore."],BBOX[-60.55,93.41,-8.47,173.34]],ID["EPSG",9308]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9309")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ATRF2014",DATUM["Australian_Terrestrial_Reference_Frame_2014",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1291"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9309"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9332")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["KSA-GRF17",DATUM["Kingdom of Saudi Arabia Geodetic Reference Frame 2017",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy, cadastre, engineering survey, topographic mapping."],AREA["Saudi Arabia - onshore and offshore."],BBOX[16.29,34.44,32.16,55.67]],ID["EPSG",9332]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,-0.008393,0.000749,-0.010276,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9333")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["KSA-GRF17",DATUM["Kingdom_of_Saudi_Arabia_Geodetic_Reference_Frame_2017",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1268"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9333"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,-0.008393,0.000749,-0.010276,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9364")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["TPEN11-IRF",DATUM["TPEN11_Intermediate_Reference_Frame",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1266"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9364"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9372")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["MML07-IRF",DATUM["MML07_Intermediate_Reference_Frame",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1271"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9372"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9379")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["IGb14",DYNAMIC[FRAMEEPOCH[2010]],DATUM["IGb14",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["World."],BBOX[-90,-180,90,180]],ID["EPSG",9379]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9380")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["IGb14",DATUM["IGb14",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1272"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9380"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9384")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["AbInvA96_2020-IRF",DATUM["AbInvA96_2020_Intermediate_Reference_Frame",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1273"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9384"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9403")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["PN68",DATUM["Pico_de_las_Nieves_1968",SPHEROID["International 1924",6378388,297,AUTHORITY["EPSG","7022"]],AUTHORITY["EPSG","1286"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9403"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=intl +towgs84=-307,-92,127,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9422")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9423")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9424")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9425")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9426")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9427")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9428")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9429")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9430")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9449")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9450")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9452")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9453")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["GBK19-IRF",DATUM["GBK19_Intermediate_Reference_Frame",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1289"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9453"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9462")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["GDA2020",DATUM["Geocentric_Datum_of_Australia_2020",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1168"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7844"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9463")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["GDA2020",DATUM["Geocentric_Datum_of_Australia_2020",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1168"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7844"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9464")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["GDA94",DATUM["Geocentric_Datum_of_Australia_1994",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6283"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4283"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9469")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["SRGI2013",DYNAMIC[FRAMEEPOCH[2012]],DATUM["Sistem Referensi Geospasial Indonesia 2013",ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Indonesia - onshore and offshore."],BBOX[-13.95,92.01,7.79,141.46]],ID["EPSG",9469]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9470")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SRGI2013",DATUM["Sistem_Referensi_Geospasial_Indonesia_2013",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1293"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9470"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9474")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["PZ-90.02",DATUM["Parametry_Zemli_1990_02",SPHEROID["PZ-90",6378136,298.257839303,AUTHORITY["EPSG","7054"]],AUTHORITY["EPSG","1157"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9474"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378136 +rf=298.257839303 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9475")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["PZ-90.11",DATUM["Parametry_Zemli_1990_11",SPHEROID["PZ-90",6378136,298.257839303,AUTHORITY["EPSG","7054"]],AUTHORITY["EPSG","1158"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9475"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +a=6378136 +rf=298.257839303 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9500")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9501")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["MGI",DATUM["Militar-Geographische_Institut",SPHEROID["Bessel 1841",6377397.155,299.1528128,AUTHORITY["EPSG","7004"]],AUTHORITY["EPSG","6312"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4312"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=bessel +towgs84=577.326,90.129,463.919,5.137,1.474,5.297,2.4232 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9502")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["CIGD11",DATUM["Cayman_Islands_Geodetic_Datum_2011",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1100"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6135"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9503")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["CIGD11",DATUM["Cayman_Islands_Geodetic_Datum_2011",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1100"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6135"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9504")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["CIGD11",DATUM["Cayman_Islands_Geodetic_Datum_2011",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1100"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6135"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9505")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9506")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9507")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9508")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9509")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9510")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["REGCAN95",DATUM["Red_Geodesica_de_Canarias_1995",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1035"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4081"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9511")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["REGCAN95",DATUM["Red_Geodesica_de_Canarias_1995",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1035"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4081"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9512")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["REGCAN95",DATUM["Red_Geodesica_de_Canarias_1995",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1035"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4081"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9513")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["REGCAN95",DATUM["Red_Geodesica_de_Canarias_1995",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1035"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4081"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9514")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["REGCAN95",DATUM["Red_Geodesica_de_Canarias_1995",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1035"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4081"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9515")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["REGCAN95",DATUM["Red_Geodesica_de_Canarias_1995",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1035"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4081"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9516")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["REGCAN95",DATUM["Red_Geodesica_de_Canarias_1995",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1035"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4081"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9517")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SHGD2015",DATUM["St_Helena_Geodetic_Datum_2015",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1174"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","7886"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9518")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4326"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +datum=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9519")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["FEH2010",DATUM["Fehmarnbelt_Datum_2010",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1078"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5593"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9520")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["KSA-GRF17",DATUM["Kingdom_of_Saudi_Arabia_Geodetic_Reference_Frame_2017",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1268"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9333"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,-0.008393,0.000749,-0.010276,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9521")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["POSGAR 2007",DATUM["Posiciones_Geodesicas_Argentinas_2007",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1062"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5340"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9522")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(2011)",DATUM["NAD83_National_Spatial_Reference_System_2011",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1116"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6318"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9523")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(2011)",DATUM["NAD83_National_Spatial_Reference_System_2011",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1116"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6318"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9524")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(MA11)",DATUM["NAD83_National_Spatial_Reference_System_MA11",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1118"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6325"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9525")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(MA11)",DATUM["NAD83_National_Spatial_Reference_System_MA11",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1118"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6325"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9526")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(PA11)",DATUM["NAD83_National_Spatial_Reference_System_PA11",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1117"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","6322"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9527")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NZGD2000",DATUM["New_Zealand_Geodetic_Datum_2000",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6167"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4167"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9528")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NZGD2000",DATUM["New_Zealand_Geodetic_Datum_2000",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6167"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4167"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9529")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["SRGI2013",DATUM["Sistem_Referensi_Geospasial_Indonesia_2013",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","1293"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9470"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9530")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGFG95",DATUM["Reseau_Geodesique_Francais_Guyane_1995",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6624"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4624"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9531")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGAF09",DATUM["Reseau_Geodesique_des_Antilles_Francaises_2009",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1073"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5489"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9532")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGAF09",DATUM["Reseau_Geodesique_des_Antilles_Francaises_2009",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1073"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5489"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9533")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGAF09",DATUM["Reseau_Geodesique_des_Antilles_Francaises_2009",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1073"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5489"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9534")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGAF09",DATUM["Reseau_Geodesique_des_Antilles_Francaises_2009",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1073"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5489"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9535")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGAF09",DATUM["Reseau_Geodesique_des_Antilles_Francaises_2009",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1073"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5489"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9536")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGAF09",DATUM["Reseau_Geodesique_des_Antilles_Francaises_2009",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1073"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5489"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9537")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGAF09",DATUM["Reseau_Geodesique_des_Antilles_Francaises_2009",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1073"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","5489"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9538")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGF93",DATUM["Reseau_Geodesique_Francais_1993",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6171"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4171"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9539")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGF93",DATUM["Reseau_Geodesique_Francais_1993",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6171"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4171"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9540")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGNC91-93",DATUM["Reseau_Geodesique_de_Nouvelle_Caledonie_91-93",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6749"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4749"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9541")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RGSPM06",DATUM["Reseau_Geodesique_de_Saint_Pierre_et_Miquelon_2006",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1038"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4463"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9542")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["RRAF 1991",DATUM["Reseau_de_Reference_des_Antilles_Francaises_1991",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1047"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4558"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9543")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ITRF2005",DATUM["International_Terrestrial_Reference_Frame_2005",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6896"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8998"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9544")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["NAD83(CSRS)v6",DATUM["North_American_Datum_of_1983_CSRS_version_6",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1197"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","8252"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9546")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["LTF2004(G)",DATUM["Lyon Turin Ferroviaire 2004",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Engineering survey and mapping for the Trans-Europe Lyon-Turin (TELT) railway project."],AREA["France and Italy - on or related to the rail route from Lyon to Turin."],BBOX[44.87,4.65,45.89,7.88]],ID["EPSG",9546]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9547")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["LTF2004(G)",DATUM["Lyon_Turin_Ferroviaire_2004",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1295"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9547"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9656")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRF2000-PL",DATUM["ETRF2000_Poland",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1305"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9702"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9657")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRF2000-PL",DATUM["ETRF2000_Poland",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1305"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9702"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9695")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["REDGEOMIN",DYNAMIC[FRAMEEPOCH[2019]],DATUM["Red Geodesica Para Mineria en Chile",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy, cadastre, engineering survey, topographic mapping."],AREA["Chile - onshore and offshore. Includes Easter Island, Juan Fernandez Islands, San Felix, and Sala y Gomez."],BBOX[-59.87,-113.21,-17.5,-65.72]],ID["EPSG",9695]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9696")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["REDGEOMIN",DATUM["Red_Geodesica_Para_Mineria_en_Chile",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1304"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9696"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9701")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCRS["ETRF2000-PL",DATUM["ETRF2000 Poland",ELLIPSOID["GRS 1980",6378137,298.257222101,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],CS[ellipsoidal,3],AXIS["geodetic latitude (Lat)",north,ORDER[1],ANGLEUNIT["degree",0.0174532925199433]],AXIS["geodetic longitude (Lon)",east,ORDER[2],ANGLEUNIT["degree",0.0174532925199433]],AXIS["ellipsoidal height (h)",up,ORDER[3],LENGTHUNIT["metre",1]],USAGE[SCOPE["Geodesy."],AREA["Poland - onshore and offshore."],BBOX[49,14.14,55.93,24.15]],ID["EPSG",9701]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9702")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRF2000-PL",DATUM["ETRF2000_Poland",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1305"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9702"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9705")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4326"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +datum=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9707")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4326"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +datum=WGS84 +no_defs"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9723")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9724")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9725")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["ETRS89",DATUM["European_Terrestrial_Reference_System_1989",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6258"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4258"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v(
                "+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
              ),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", [_vm._v("9739")]),
            _vm._v(" "),
            _c("td", [
              _c("strong", [_vm._v("WKT:"), _c("br")]),
              _vm._v(
                'GEOGCS["EOS21-IRF",DATUM["EOS21_Intermediate_Reference_Frame",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1308"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","9739"]]'
              ),
              _c("br"),
              _c("br"),
              _c("strong", [_vm._v("Proj4:")]),
              _vm._v("+proj=longlat +ellps=GRS80 +no_defs"),
            ]),
          ]),
        ]),
      ]),
    ]
  )
}
var staticRenderFns = []
render._withStripped = true

export { render, staticRenderFns }"}]}